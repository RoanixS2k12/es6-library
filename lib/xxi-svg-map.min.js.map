{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///xxi-svg-map.min.js","webpack:///webpack/bootstrap 015c8351b2b82c9f161f","webpack:///./src/index.js","webpack:///./~/d3/d3.js","webpack:///./~/d3-geo-projection/index.js","webpack:///./~/path-browserify/index.js","webpack:///./~/process/browser.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_objectWithoutProperties","keys","target","i","indexOf","Object","prototype","hasOwnProperty","_classCallCheck","instance","Constructor","TypeError","defineProperty","value","_createClass","defineProperties","props","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","_d","_d2","SVGMap","selector","_ref","file","width","height","_ref$scale","scale","undefined","_ref$center","center","Error","_selector","_file","_width","_height","_projection","geo","bromley","_path","path","projection","get","_name","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3_documentElement","node","ownerDocument","document","documentElement","d3_window","defaultView","d3_ascending","a","b","NaN","d3_number","x","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","arguments","mid","right","d3_transposeLength","d","d3_range_integerScale","k","d3_class","ctor","properties","d3_Map","_","create","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","slice","d3_map_has","d3_map_remove","d3_map_keys","push","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","source","method","apply","d3_vendorSymbol","object","name","charAt","toUpperCase","n","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","l","z","listeners","on","listenerByName","listener","concat","remove","set","d3_eventPreventDefault","d3","preventDefault","d3_eventSource","s","e","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","type","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","replace","d3_selection_classedRe","RegExp","requote","d3_selection_classes","split","d3_selection_classed","classedConstant","classedFunction","map","d3_selection_classedName","re","classList","add","getAttribute","lastIndex","test","d3_selection_style","priority","styleNull","style","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","d3_nsXhtml","createElement","createElementNS","createNS","d3_selectionRemove","parent","parentNode","removeChild","d3_selection_dataNode","data","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","callback","j","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","enter","i0","j0","update","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","wrap","d3_array","addEventListener","removeAll","match","d3_selection_onListener","filter","d3_selection_onFilters","d3_selection_onFilter","o","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","select","d3_event_dragSelect","suppressClick","off","setTimeout","d3_mousePoint","container","changedTouches","svg","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","window","scrollX","scrollY","append","position","top","margin","padding","border","ctm","getScreenCTM","f","pageX","y","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","Math","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","v","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","r","g","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","max","toString","min","format","hsl","color","exec","toLowerCase","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","result","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","forEach","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer","delay","then","Date","now","time","timer","t","d3_timer_queueTail","d3_timer_queueHead","d3_timer_interval","d3_timer_timeout","clearTimeout","d3_timer_frame","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","Infinity","d3_format_precision","ceil","log","LN10","d3_formatPrefix","abs","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","substring","reverse","join","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","prefix","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","after","lastIndexOf","Array","d3_date_utc","UTC","d3_time_interval","step","number","date","d0","d1","offset","d3_date","range","dt","times","range_utc","utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","names","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","sort","d3_geo_clipPolygonLinkCircular","entry","points","start","current","isSubject","array","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","intersection","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","splice","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","closestPoint","minDistance2","find","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransformPop","d3_interpolateTranslate","ta","tb","d3_interpolateRotate","ra","rb","d3_interpolateSkew","wa","wb","d3_interpolateScale","ka","kb","d3_interpolateTransform","transform","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","values","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","linear","input","Number","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","has","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","activeId","active","count","interrupt","d3_transition","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","schedule","elapsed","transition","cancelId","cancel","tick","tweens","ease","duration","d3_svg_axisX","attr","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","list","childNodes","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","transpose","matrix","row","zip","entries","arrays","merged","isArray","empty","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","__proto__","property","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","selectAll","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","text","html","innerHTML","appendChild","insertBefore","bind","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","datum","nextSibling","args","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","correspondingElement","origin","τε","SQRT2","ρ2","ρ4","interpolateZoom","ux0","uy0","w0","ux1","uy1","w1","coshr0","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","Function","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","flush","d3_formatPrefixes","String","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTime","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","partition","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","bottom","tops","bottoms","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","rc1","rc0","oc","kc","lc","t30","t12","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","self","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML","__dirname","fs","readFileSync","process","normalizeArray","parts","allowAboveRoot","up","last","res","splitPathRe","splitPath","filename","resolve","resolvedPath","resolvedAbsolute","cwd","normalize","isAbsolute","trailingSlash","substr","relative","arr","fromParts","toParts","samePartsLength","outputParts","sep","dirname","dir","basename","ext","extname","str","len","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","timeout","run","Item","fun","noop","nextTick","title","browser","env","argv","versions","addListener","once","removeListener","removeAllListeners","emit","binding","chdir","umask"],"mappings":"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","file":"xxi-svg-map.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"xxi-svg-map\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"xxi-svg-map\"] = factory();\n\telse\n\t\troot[\"xxi-svg-map\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"xxi-svg-map\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"xxi-svg-map\"] = factory();\n\telse\n\t\troot[\"xxi-svg-map\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _d = __webpack_require__(1);\n\t\n\tvar _d2 = _interopRequireDefault(_d);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t__webpack_require__(2)(_d2.default);\n\t// import topojson from 'topojson';\n\t\n\tvar SVGMap = function () {\n\t  function SVGMap(selector, _ref) {\n\t    var file = _ref.file;\n\t    var width = _ref.width;\n\t    var height = _ref.height;\n\t    var _ref$scale = _ref.scale;\n\t    var scale = _ref$scale === undefined ? 135 : _ref$scale;\n\t    var _ref$center = _ref.center;\n\t    var center = _ref$center === undefined ? [70, -35] : _ref$center;\n\t\n\t    var options = _objectWithoutProperties(_ref, ['file', 'width', 'height', 'scale', 'center']);\n\t\n\t    _classCallCheck(this, SVGMap);\n\t\n\t    if (selector === '') {\n\t      throw new Error('There has to be a selector');\n\t    }\n\t\n\t    this._selector = selector;\n\t    this._file = file;\n\t    this._width = width;\n\t    this._height = height;\n\t\n\t    // Creating the base of the projection\n\t    this._projection = _d2.default.geo.bromley().center(center).scale(scale);\n\t\n\t    this._path = _d2.default.geo.path().projection(this.projection);\n\t  }\n\t\n\t  _createClass(SVGMap, [{\n\t    key: 'name',\n\t    get: function get() {\n\t      return this._name;\n\t    }\n\t  }, {\n\t    key: 'width',\n\t    get: function get() {\n\t      return this._width;\n\t    }\n\t  }, {\n\t    key: 'height',\n\t    get: function get() {\n\t      return this._height;\n\t    }\n\t  }, {\n\t    key: 'selector',\n\t    get: function get() {\n\t      return this._selector;\n\t    }\n\t  }, {\n\t    key: 'projection',\n\t    get: function get() {\n\t      return this._projection;\n\t    }\n\t  }]);\n\t\n\t  return SVGMap;\n\t}();\n\n\texports.default = SVGMap;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n\t  var d3 = {\n\t    version: \"3.5.16\"\n\t  };\n\t  var d3_arraySlice = [].slice, d3_array = function(list) {\n\t    return d3_arraySlice.call(list);\n\t  };\n\t  var d3_document = this.document;\n\t  function d3_documentElement(node) {\n\t    return node && (node.ownerDocument || node.document || node).documentElement;\n\t  }\n\t  function d3_window(node) {\n\t    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n\t  }\n\t  if (d3_document) {\n\t    try {\n\t      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n\t    } catch (e) {\n\t      d3_array = function(list) {\n\t        var i = list.length, array = new Array(i);\n\t        while (i--) array[i] = list[i];\n\t        return array;\n\t      };\n\t    }\n\t  }\n\t  if (!Date.now) Date.now = function() {\n\t    return +new Date();\n\t  };\n\t  if (d3_document) {\n\t    try {\n\t      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n\t    } catch (error) {\n\t      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n\t      d3_element_prototype.setAttribute = function(name, value) {\n\t        d3_element_setAttribute.call(this, name, value + \"\");\n\t      };\n\t      d3_element_prototype.setAttributeNS = function(space, local, value) {\n\t        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n\t      };\n\t      d3_style_prototype.setProperty = function(name, value, priority) {\n\t        d3_style_setProperty.call(this, name, value + \"\", priority);\n\t      };\n\t    }\n\t  }\n\t  d3.ascending = d3_ascending;\n\t  function d3_ascending(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  }\n\t  d3.descending = function(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  };\n\t  d3.min = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.max = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.extent = function(array, f) {\n\t    var i = -1, n = array.length, a, b, c;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t    return [ a, c ];\n\t  };\n\t  function d3_number(x) {\n\t    return x === null ? NaN : +x;\n\t  }\n\t  function d3_numeric(x) {\n\t    return !isNaN(x);\n\t  }\n\t  d3.sum = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n\t    }\n\t    return s;\n\t  };\n\t  d3.mean = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1, j = n;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n\t    }\n\t    if (j) return s / j;\n\t  };\n\t  d3.quantile = function(values, p) {\n\t    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n\t    return e ? v + e * (values[h] - v) : v;\n\t  };\n\t  d3.median = function(array, f) {\n\t    var numbers = [], n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n\t    }\n\t    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n\t  };\n\t  d3.variance = function(array, f) {\n\t    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(array[i]))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    }\n\t    if (j > 1) return s / (j - 1);\n\t  };\n\t  d3.deviation = function() {\n\t    var v = d3.variance.apply(this, arguments);\n\t    return v ? Math.sqrt(v) : v;\n\t  };\n\t  function d3_bisector(compare) {\n\t    return {\n\t      left: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n\t        }\n\t        return lo;\n\t      },\n\t      right: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n\t        }\n\t        return lo;\n\t      }\n\t    };\n\t  }\n\t  var d3_bisect = d3_bisector(d3_ascending);\n\t  d3.bisectLeft = d3_bisect.left;\n\t  d3.bisect = d3.bisectRight = d3_bisect.right;\n\t  d3.bisector = function(f) {\n\t    return d3_bisector(f.length === 1 ? function(d, x) {\n\t      return d3_ascending(f(d), x);\n\t    } : f);\n\t  };\n\t  d3.shuffle = function(array, i0, i1) {\n\t    if ((m = arguments.length) < 3) {\n\t      i1 = array.length;\n\t      if (m < 2) i0 = 0;\n\t    }\n\t    var m = i1 - i0, t, i;\n\t    while (m) {\n\t      i = Math.random() * m-- | 0;\n\t      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n\t    }\n\t    return array;\n\t  };\n\t  d3.permute = function(array, indexes) {\n\t    var i = indexes.length, permutes = new Array(i);\n\t    while (i--) permutes[i] = array[indexes[i]];\n\t    return permutes;\n\t  };\n\t  d3.pairs = function(array) {\n\t    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n\t    return pairs;\n\t  };\n\t  d3.transpose = function(matrix) {\n\t    if (!(n = matrix.length)) return [];\n\t    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n\t      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n\t        row[j] = matrix[j][i];\n\t      }\n\t    }\n\t    return transpose;\n\t  };\n\t  function d3_transposeLength(d) {\n\t    return d.length;\n\t  }\n\t  d3.zip = function() {\n\t    return d3.transpose(arguments);\n\t  };\n\t  d3.keys = function(map) {\n\t    var keys = [];\n\t    for (var key in map) keys.push(key);\n\t    return keys;\n\t  };\n\t  d3.values = function(map) {\n\t    var values = [];\n\t    for (var key in map) values.push(map[key]);\n\t    return values;\n\t  };\n\t  d3.entries = function(map) {\n\t    var entries = [];\n\t    for (var key in map) entries.push({\n\t      key: key,\n\t      value: map[key]\n\t    });\n\t    return entries;\n\t  };\n\t  d3.merge = function(arrays) {\n\t    var n = arrays.length, m, i = -1, j = 0, merged, array;\n\t    while (++i < n) j += arrays[i].length;\n\t    merged = new Array(j);\n\t    while (--n >= 0) {\n\t      array = arrays[n];\n\t      m = array.length;\n\t      while (--m >= 0) {\n\t        merged[--j] = array[m];\n\t      }\n\t    }\n\t    return merged;\n\t  };\n\t  var abs = Math.abs;\n\t  d3.range = function(start, stop, step) {\n\t    if (arguments.length < 3) {\n\t      step = 1;\n\t      if (arguments.length < 2) {\n\t        stop = start;\n\t        start = 0;\n\t      }\n\t    }\n\t    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n\t    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n\t    start *= k, stop *= k, step *= k;\n\t    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n\t    return range;\n\t  };\n\t  function d3_range_integerScale(x) {\n\t    var k = 1;\n\t    while (x * k % 1) k *= 10;\n\t    return k;\n\t  }\n\t  function d3_class(ctor, properties) {\n\t    for (var key in properties) {\n\t      Object.defineProperty(ctor.prototype, key, {\n\t        value: properties[key],\n\t        enumerable: false\n\t      });\n\t    }\n\t  }\n\t  d3.map = function(object, f) {\n\t    var map = new d3_Map();\n\t    if (object instanceof d3_Map) {\n\t      object.forEach(function(key, value) {\n\t        map.set(key, value);\n\t      });\n\t    } else if (Array.isArray(object)) {\n\t      var i = -1, n = object.length, o;\n\t      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n\t    } else {\n\t      for (var key in object) map.set(key, object[key]);\n\t    }\n\t    return map;\n\t  };\n\t  function d3_Map() {\n\t    this._ = Object.create(null);\n\t  }\n\t  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n\t  d3_class(d3_Map, {\n\t    has: d3_map_has,\n\t    get: function(key) {\n\t      return this._[d3_map_escape(key)];\n\t    },\n\t    set: function(key, value) {\n\t      return this._[d3_map_escape(key)] = value;\n\t    },\n\t    remove: d3_map_remove,\n\t    keys: d3_map_keys,\n\t    values: function() {\n\t      var values = [];\n\t      for (var key in this._) values.push(this._[key]);\n\t      return values;\n\t    },\n\t    entries: function() {\n\t      var entries = [];\n\t      for (var key in this._) entries.push({\n\t        key: d3_map_unescape(key),\n\t        value: this._[key]\n\t      });\n\t      return entries;\n\t    },\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n\t    }\n\t  });\n\t  function d3_map_escape(key) {\n\t    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n\t  }\n\t  function d3_map_unescape(key) {\n\t    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n\t  }\n\t  function d3_map_has(key) {\n\t    return d3_map_escape(key) in this._;\n\t  }\n\t  function d3_map_remove(key) {\n\t    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n\t  }\n\t  function d3_map_keys() {\n\t    var keys = [];\n\t    for (var key in this._) keys.push(d3_map_unescape(key));\n\t    return keys;\n\t  }\n\t  function d3_map_size() {\n\t    var size = 0;\n\t    for (var key in this._) ++size;\n\t    return size;\n\t  }\n\t  function d3_map_empty() {\n\t    for (var key in this._) return false;\n\t    return true;\n\t  }\n\t  d3.nest = function() {\n\t    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n\t    function map(mapType, array, depth) {\n\t      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n\t      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n\t      while (++i < n) {\n\t        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n\t          values.push(object);\n\t        } else {\n\t          valuesByKey.set(keyValue, [ object ]);\n\t        }\n\t      }\n\t      if (mapType) {\n\t        object = mapType();\n\t        setter = function(keyValue, values) {\n\t          object.set(keyValue, map(mapType, values, depth));\n\t        };\n\t      } else {\n\t        object = {};\n\t        setter = function(keyValue, values) {\n\t          object[keyValue] = map(mapType, values, depth);\n\t        };\n\t      }\n\t      valuesByKey.forEach(setter);\n\t      return object;\n\t    }\n\t    function entries(map, depth) {\n\t      if (depth >= keys.length) return map;\n\t      var array = [], sortKey = sortKeys[depth++];\n\t      map.forEach(function(key, keyMap) {\n\t        array.push({\n\t          key: key,\n\t          values: entries(keyMap, depth)\n\t        });\n\t      });\n\t      return sortKey ? array.sort(function(a, b) {\n\t        return sortKey(a.key, b.key);\n\t      }) : array;\n\t    }\n\t    nest.map = function(array, mapType) {\n\t      return map(mapType, array, 0);\n\t    };\n\t    nest.entries = function(array) {\n\t      return entries(map(d3.map, array, 0), 0);\n\t    };\n\t    nest.key = function(d) {\n\t      keys.push(d);\n\t      return nest;\n\t    };\n\t    nest.sortKeys = function(order) {\n\t      sortKeys[keys.length - 1] = order;\n\t      return nest;\n\t    };\n\t    nest.sortValues = function(order) {\n\t      sortValues = order;\n\t      return nest;\n\t    };\n\t    nest.rollup = function(f) {\n\t      rollup = f;\n\t      return nest;\n\t    };\n\t    return nest;\n\t  };\n\t  d3.set = function(array) {\n\t    var set = new d3_Set();\n\t    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n\t    return set;\n\t  };\n\t  function d3_Set() {\n\t    this._ = Object.create(null);\n\t  }\n\t  d3_class(d3_Set, {\n\t    has: d3_map_has,\n\t    add: function(key) {\n\t      this._[d3_map_escape(key += \"\")] = true;\n\t      return key;\n\t    },\n\t    remove: d3_map_remove,\n\t    values: d3_map_keys,\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key));\n\t    }\n\t  });\n\t  d3.behavior = {};\n\t  function d3_identity(d) {\n\t    return d;\n\t  }\n\t  d3.rebind = function(target, source) {\n\t    var i = 1, n = arguments.length, method;\n\t    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n\t    return target;\n\t  };\n\t  function d3_rebind(target, source, method) {\n\t    return function() {\n\t      var value = method.apply(source, arguments);\n\t      return value === source ? target : value;\n\t    };\n\t  }\n\t  function d3_vendorSymbol(object, name) {\n\t    if (name in object) return name;\n\t    name = name.charAt(0).toUpperCase() + name.slice(1);\n\t    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n\t      var prefixName = d3_vendorPrefixes[i] + name;\n\t      if (prefixName in object) return prefixName;\n\t    }\n\t  }\n\t  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n\t  function d3_noop() {}\n\t  d3.dispatch = function() {\n\t    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    return dispatch;\n\t  };\n\t  function d3_dispatch() {}\n\t  d3_dispatch.prototype.on = function(type, listener) {\n\t    var i = type.indexOf(\".\"), name = \"\";\n\t    if (i >= 0) {\n\t      name = type.slice(i + 1);\n\t      type = type.slice(0, i);\n\t    }\n\t    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\t    if (arguments.length === 2) {\n\t      if (listener == null) for (type in this) {\n\t        if (this.hasOwnProperty(type)) this[type].on(name, null);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t  function d3_dispatch_event(dispatch) {\n\t    var listeners = [], listenerByName = new d3_Map();\n\t    function event() {\n\t      var z = listeners, i = -1, n = z.length, l;\n\t      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n\t      return dispatch;\n\t    }\n\t    event.on = function(name, listener) {\n\t      var l = listenerByName.get(name), i;\n\t      if (arguments.length < 2) return l && l.on;\n\t      if (l) {\n\t        l.on = null;\n\t        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n\t        listenerByName.remove(name);\n\t      }\n\t      if (listener) listeners.push(listenerByName.set(name, {\n\t        on: listener\n\t      }));\n\t      return dispatch;\n\t    };\n\t    return event;\n\t  }\n\t  d3.event = null;\n\t  function d3_eventPreventDefault() {\n\t    d3.event.preventDefault();\n\t  }\n\t  function d3_eventSource() {\n\t    var e = d3.event, s;\n\t    while (s = e.sourceEvent) e = s;\n\t    return e;\n\t  }\n\t  function d3_eventDispatch(target) {\n\t    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    dispatch.of = function(thiz, argumentz) {\n\t      return function(e1) {\n\t        try {\n\t          var e0 = e1.sourceEvent = d3.event;\n\t          e1.target = target;\n\t          d3.event = e1;\n\t          dispatch[e1.type].apply(thiz, argumentz);\n\t        } finally {\n\t          d3.event = e0;\n\t        }\n\t      };\n\t    };\n\t    return dispatch;\n\t  }\n\t  d3.requote = function(s) {\n\t    return s.replace(d3_requote_re, \"\\\\$&\");\n\t  };\n\t  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n\t    object.__proto__ = prototype;\n\t  } : function(object, prototype) {\n\t    for (var property in prototype) object[property] = prototype[property];\n\t  };\n\t  function d3_selection(groups) {\n\t    d3_subclass(groups, d3_selectionPrototype);\n\t    return groups;\n\t  }\n\t  var d3_select = function(s, n) {\n\t    return n.querySelector(s);\n\t  }, d3_selectAll = function(s, n) {\n\t    return n.querySelectorAll(s);\n\t  }, d3_selectMatches = function(n, s) {\n\t    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n\t    d3_selectMatches = function(n, s) {\n\t      return d3_selectMatcher.call(n, s);\n\t    };\n\t    return d3_selectMatches(n, s);\n\t  };\n\t  if (typeof Sizzle === \"function\") {\n\t    d3_select = function(s, n) {\n\t      return Sizzle(s, n)[0] || null;\n\t    };\n\t    d3_selectAll = Sizzle;\n\t    d3_selectMatches = Sizzle.matchesSelector;\n\t  }\n\t  d3.selection = function() {\n\t    return d3.select(d3_document.documentElement);\n\t  };\n\t  var d3_selectionPrototype = d3.selection.prototype = [];\n\t  d3_selectionPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, group, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n\t          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selector(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_select(selector, this);\n\t    };\n\t  }\n\t  d3_selectionPrototype.selectAll = function(selector) {\n\t    var subgroups = [], subgroup, node;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n\t          subgroup.parentNode = node;\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selectorAll(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_selectAll(selector, this);\n\t    };\n\t  }\n\t  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n\t  var d3_nsPrefix = {\n\t    svg: \"http://www.w3.org/2000/svg\",\n\t    xhtml: d3_nsXhtml,\n\t    xlink: \"http://www.w3.org/1999/xlink\",\n\t    xml: \"http://www.w3.org/XML/1998/namespace\",\n\t    xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t  };\n\t  d3.ns = {\n\t    prefix: d3_nsPrefix,\n\t    qualify: function(name) {\n\t      var i = name.indexOf(\":\"), prefix = name;\n\t      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n\t        space: d3_nsPrefix[prefix],\n\t        local: name\n\t      } : name;\n\t    }\n\t  };\n\t  d3_selectionPrototype.attr = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node();\n\t        name = d3.ns.qualify(name);\n\t        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n\t      }\n\t      for (value in name) this.each(d3_selection_attr(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_attr(name, value));\n\t  };\n\t  function d3_selection_attr(name, value) {\n\t    name = d3.ns.qualify(name);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrConstant() {\n\t      this.setAttribute(name, value);\n\t    }\n\t    function attrConstantNS() {\n\t      this.setAttributeNS(name.space, name.local, value);\n\t    }\n\t    function attrFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n\t    }\n\t    function attrFunctionNS() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n\t    }\n\t    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n\t  }\n\t  function d3_collapse(s) {\n\t    return s.trim().replace(/\\s+/g, \" \");\n\t  }\n\t  d3_selectionPrototype.classed = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n\t        if (value = node.classList) {\n\t          while (++i < n) if (!value.contains(name[i])) return false;\n\t        } else {\n\t          value = node.getAttribute(\"class\");\n\t          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n\t        }\n\t        return true;\n\t      }\n\t      for (value in name) this.each(d3_selection_classed(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_classed(name, value));\n\t  };\n\t  function d3_selection_classedRe(name) {\n\t    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n\t  }\n\t  function d3_selection_classes(name) {\n\t    return (name + \"\").trim().split(/^|\\s+/);\n\t  }\n\t  function d3_selection_classed(name, value) {\n\t    name = d3_selection_classes(name).map(d3_selection_classedName);\n\t    var n = name.length;\n\t    function classedConstant() {\n\t      var i = -1;\n\t      while (++i < n) name[i](this, value);\n\t    }\n\t    function classedFunction() {\n\t      var i = -1, x = value.apply(this, arguments);\n\t      while (++i < n) name[i](this, x);\n\t    }\n\t    return typeof value === \"function\" ? classedFunction : classedConstant;\n\t  }\n\t  function d3_selection_classedName(name) {\n\t    var re = d3_selection_classedRe(name);\n\t    return function(node, value) {\n\t      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n\t      var c = node.getAttribute(\"class\") || \"\";\n\t      if (value) {\n\t        re.lastIndex = 0;\n\t        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n\t      } else {\n\t        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n\t      }\n\t    };\n\t  }\n\t  d3_selectionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n\t        return this;\n\t      }\n\t      if (n < 2) {\n\t        var node = this.node();\n\t        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n\t      }\n\t      priority = \"\";\n\t    }\n\t    return this.each(d3_selection_style(name, value, priority));\n\t  };\n\t  function d3_selection_style(name, value, priority) {\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleConstant() {\n\t      this.style.setProperty(name, value, priority);\n\t    }\n\t    function styleFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n\t    }\n\t    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n\t  }\n\t  d3_selectionPrototype.property = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") return this.node()[name];\n\t      for (value in name) this.each(d3_selection_property(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_property(name, value));\n\t  };\n\t  function d3_selection_property(name, value) {\n\t    function propertyNull() {\n\t      delete this[name];\n\t    }\n\t    function propertyConstant() {\n\t      this[name] = value;\n\t    }\n\t    function propertyFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) delete this[name]; else this[name] = x;\n\t    }\n\t    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n\t  }\n\t  d3_selectionPrototype.text = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.textContent = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.textContent = \"\";\n\t    } : function() {\n\t      this.textContent = value;\n\t    }) : this.node().textContent;\n\t  };\n\t  d3_selectionPrototype.html = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.innerHTML = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.innerHTML = \"\";\n\t    } : function() {\n\t      this.innerHTML = value;\n\t    }) : this.node().innerHTML;\n\t  };\n\t  d3_selectionPrototype.append = function(name) {\n\t    name = d3_selection_creator(name);\n\t    return this.select(function() {\n\t      return this.appendChild(name.apply(this, arguments));\n\t    });\n\t  };\n\t  function d3_selection_creator(name) {\n\t    function create() {\n\t      var document = this.ownerDocument, namespace = this.namespaceURI;\n\t      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n\t    }\n\t    function createNS() {\n\t      return this.ownerDocument.createElementNS(name.space, name.local);\n\t    }\n\t    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n\t  }\n\t  d3_selectionPrototype.insert = function(name, before) {\n\t    name = d3_selection_creator(name);\n\t    before = d3_selection_selector(before);\n\t    return this.select(function() {\n\t      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n\t    });\n\t  };\n\t  d3_selectionPrototype.remove = function() {\n\t    return this.each(d3_selectionRemove);\n\t  };\n\t  function d3_selectionRemove() {\n\t    var parent = this.parentNode;\n\t    if (parent) parent.removeChild(this);\n\t  }\n\t  d3_selectionPrototype.data = function(value, key) {\n\t    var i = -1, n = this.length, group, node;\n\t    if (!arguments.length) {\n\t      value = new Array(n = (group = this[0]).length);\n\t      while (++i < n) {\n\t        if (node = group[i]) {\n\t          value[i] = node.__data__;\n\t        }\n\t      }\n\t      return value;\n\t    }\n\t    function bind(group, groupData) {\n\t      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n\t      if (key) {\n\t        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n\t        for (i = -1; ++i < n; ) {\n\t          if (node = group[i]) {\n\t            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n\t              exitNodes[i] = node;\n\t            } else {\n\t              nodeByKeyValue.set(keyValue, node);\n\t            }\n\t            keyValues[i] = keyValue;\n\t          }\n\t        }\n\t        for (i = -1; ++i < m; ) {\n\t          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          } else if (node !== true) {\n\t            updateNodes[i] = node;\n\t            node.__data__ = nodeData;\n\t          }\n\t          nodeByKeyValue.set(keyValue, true);\n\t        }\n\t        for (i = -1; ++i < n; ) {\n\t          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n\t            exitNodes[i] = group[i];\n\t          }\n\t        }\n\t      } else {\n\t        for (i = -1; ++i < n0; ) {\n\t          node = group[i];\n\t          nodeData = groupData[i];\n\t          if (node) {\n\t            node.__data__ = nodeData;\n\t            updateNodes[i] = node;\n\t          } else {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          }\n\t        }\n\t        for (;i < m; ++i) {\n\t          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n\t        }\n\t        for (;i < n; ++i) {\n\t          exitNodes[i] = group[i];\n\t        }\n\t      }\n\t      enterNodes.update = updateNodes;\n\t      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n\t      enter.push(enterNodes);\n\t      update.push(updateNodes);\n\t      exit.push(exitNodes);\n\t    }\n\t    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n\t    if (typeof value === \"function\") {\n\t      while (++i < n) {\n\t        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        bind(group = this[i], value);\n\t      }\n\t    }\n\t    update.enter = function() {\n\t      return enter;\n\t    };\n\t    update.exit = function() {\n\t      return exit;\n\t    };\n\t    return update;\n\t  };\n\t  function d3_selection_dataNode(data) {\n\t    return {\n\t      __data__: data\n\t    };\n\t  }\n\t  d3_selectionPrototype.datum = function(value) {\n\t    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n\t  };\n\t  d3_selectionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_filter(selector) {\n\t    return function() {\n\t      return d3_selectMatches(this, selector);\n\t    };\n\t  }\n\t  d3_selectionPrototype.order = function() {\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n\t        if (node = group[i]) {\n\t          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t          next = node;\n\t        }\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.sort = function(comparator) {\n\t    comparator = d3_selection_sortComparator.apply(this, arguments);\n\t    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n\t    return this.order();\n\t  };\n\t  function d3_selection_sortComparator(comparator) {\n\t    if (!arguments.length) comparator = d3_ascending;\n\t    return function(a, b) {\n\t      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n\t    };\n\t  }\n\t  d3_selectionPrototype.each = function(callback) {\n\t    return d3_selection_each(this, function(node, i, j) {\n\t      callback.call(node, node.__data__, i, j);\n\t    });\n\t  };\n\t  function d3_selection_each(groups, callback) {\n\t    for (var j = 0, m = groups.length; j < m; j++) {\n\t      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n\t        if (node = group[i]) callback(node, i, j);\n\t      }\n\t    }\n\t    return groups;\n\t  }\n\t  d3_selectionPrototype.call = function(callback) {\n\t    var args = d3_array(arguments);\n\t    callback.apply(args[0] = this, args);\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.empty = function() {\n\t    return !this.node();\n\t  };\n\t  d3_selectionPrototype.node = function() {\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        var node = group[i];\n\t        if (node) return node;\n\t      }\n\t    }\n\t    return null;\n\t  };\n\t  d3_selectionPrototype.size = function() {\n\t    var n = 0;\n\t    d3_selection_each(this, function() {\n\t      ++n;\n\t    });\n\t    return n;\n\t  };\n\t  function d3_selection_enter(selection) {\n\t    d3_subclass(selection, d3_selection_enterPrototype);\n\t    return selection;\n\t  }\n\t  var d3_selection_enterPrototype = [];\n\t  d3.selection.enter = d3_selection_enter;\n\t  d3.selection.enter.prototype = d3_selection_enterPrototype;\n\t  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n\t  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n\t  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n\t  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\t  d3_selection_enterPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, upgroup, group, node;\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      upgroup = (group = this[j]).update;\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = group.parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n\t          subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  d3_selection_enterPrototype.insert = function(name, before) {\n\t    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n\t    return d3_selectionPrototype.insert.call(this, name, before);\n\t  };\n\t  function d3_selection_enterInsertBefore(enter) {\n\t    var i0, j0;\n\t    return function(d, i, j) {\n\t      var group = enter[j].update, n = group.length, node;\n\t      if (j != j0) j0 = j, i0 = 0;\n\t      if (i >= i0) i0 = i + 1;\n\t      while (!(node = group[i0]) && ++i0 < n) ;\n\t      return node;\n\t    };\n\t  }\n\t  d3.select = function(node) {\n\t    var group;\n\t    if (typeof node === \"string\") {\n\t      group = [ d3_select(node, d3_document) ];\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = [ node ];\n\t      group.parentNode = d3_documentElement(node);\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3.selectAll = function(nodes) {\n\t    var group;\n\t    if (typeof nodes === \"string\") {\n\t      group = d3_array(d3_selectAll(nodes, d3_document));\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = d3_array(nodes);\n\t      group.parentNode = null;\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3_selectionPrototype.on = function(type, listener, capture) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof type !== \"string\") {\n\t        if (n < 2) listener = false;\n\t        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n\t        return this;\n\t      }\n\t      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n\t      capture = false;\n\t    }\n\t    return this.each(d3_selection_on(type, listener, capture));\n\t  };\n\t  function d3_selection_on(type, listener, capture) {\n\t    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n\t    if (i > 0) type = type.slice(0, i);\n\t    var filter = d3_selection_onFilters.get(type);\n\t    if (filter) type = filter, wrap = d3_selection_onFilter;\n\t    function onRemove() {\n\t      var l = this[name];\n\t      if (l) {\n\t        this.removeEventListener(type, l, l.$);\n\t        delete this[name];\n\t      }\n\t    }\n\t    function onAdd() {\n\t      var l = wrap(listener, d3_array(arguments));\n\t      onRemove.call(this);\n\t      this.addEventListener(type, this[name] = l, l.$ = capture);\n\t      l._ = listener;\n\t    }\n\t    function removeAll() {\n\t      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n\t      for (var name in this) {\n\t        if (match = name.match(re)) {\n\t          var l = this[name];\n\t          this.removeEventListener(match[1], l, l.$);\n\t          delete this[name];\n\t        }\n\t      }\n\t    }\n\t    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n\t  }\n\t  var d3_selection_onFilters = d3.map({\n\t    mouseenter: \"mouseover\",\n\t    mouseleave: \"mouseout\"\n\t  });\n\t  if (d3_document) {\n\t    d3_selection_onFilters.forEach(function(k) {\n\t      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n\t    });\n\t  }\n\t  function d3_selection_onListener(listener, argumentz) {\n\t    return function(e) {\n\t      var o = d3.event;\n\t      d3.event = e;\n\t      argumentz[0] = this.__data__;\n\t      try {\n\t        listener.apply(this, argumentz);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t  }\n\t  function d3_selection_onFilter(listener, argumentz) {\n\t    var l = d3_selection_onListener(listener, argumentz);\n\t    return function(e) {\n\t      var target = this, related = e.relatedTarget;\n\t      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n\t        l.call(target, e);\n\t      }\n\t    };\n\t  }\n\t  var d3_event_dragSelect, d3_event_dragId = 0;\n\t  function d3_event_dragSuppress(node) {\n\t    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\t    if (d3_event_dragSelect == null) {\n\t      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n\t    }\n\t    if (d3_event_dragSelect) {\n\t      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n\t      style[d3_event_dragSelect] = \"none\";\n\t    }\n\t    return function(suppressClick) {\n\t      w.on(name, null);\n\t      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\t      if (suppressClick) {\n\t        var off = function() {\n\t          w.on(click, null);\n\t        };\n\t        w.on(click, function() {\n\t          d3_eventPreventDefault();\n\t          off();\n\t        }, true);\n\t        setTimeout(off, 0);\n\t      }\n\t    };\n\t  }\n\t  d3.mouse = function(container) {\n\t    return d3_mousePoint(container, d3_eventSource());\n\t  };\n\t  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n\t  function d3_mousePoint(container, e) {\n\t    if (e.changedTouches) e = e.changedTouches[0];\n\t    var svg = container.ownerSVGElement || container;\n\t    if (svg.createSVGPoint) {\n\t      var point = svg.createSVGPoint();\n\t      if (d3_mouse_bug44083 < 0) {\n\t        var window = d3_window(container);\n\t        if (window.scrollX || window.scrollY) {\n\t          svg = d3.select(\"body\").append(\"svg\").style({\n\t            position: \"absolute\",\n\t            top: 0,\n\t            left: 0,\n\t            margin: 0,\n\t            padding: 0,\n\t            border: \"none\"\n\t          }, \"important\");\n\t          var ctm = svg[0][0].getScreenCTM();\n\t          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n\t          svg.remove();\n\t        }\n\t      }\n\t      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n\t      point.y = e.clientY;\n\t      point = point.matrixTransform(container.getScreenCTM().inverse());\n\t      return [ point.x, point.y ];\n\t    }\n\t    var rect = container.getBoundingClientRect();\n\t    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n\t  }\n\t  d3.touch = function(container, touches, identifier) {\n\t    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n\t    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n\t      if ((touch = touches[i]).identifier === identifier) {\n\t        return d3_mousePoint(container, touch);\n\t      }\n\t    }\n\t  };\n\t  d3.behavior.drag = function() {\n\t    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n\t    function drag() {\n\t      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n\t    }\n\t    function dragstart(id, position, subject, move, end) {\n\t      return function() {\n\t        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n\t        if (origin) {\n\t          dragOffset = origin.apply(that, arguments);\n\t          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n\t        } else {\n\t          dragOffset = [ 0, 0 ];\n\t        }\n\t        dispatch({\n\t          type: \"dragstart\"\n\t        });\n\t        function moved() {\n\t          var position1 = position(parent, dragId), dx, dy;\n\t          if (!position1) return;\n\t          dx = position1[0] - position0[0];\n\t          dy = position1[1] - position0[1];\n\t          dragged |= dx | dy;\n\t          position0 = position1;\n\t          dispatch({\n\t            type: \"drag\",\n\t            x: position1[0] + dragOffset[0],\n\t            y: position1[1] + dragOffset[1],\n\t            dx: dx,\n\t            dy: dy\n\t          });\n\t        }\n\t        function ended() {\n\t          if (!position(parent, dragId)) return;\n\t          dragSubject.on(move + dragName, null).on(end + dragName, null);\n\t          dragRestore(dragged);\n\t          dispatch({\n\t            type: \"dragend\"\n\t          });\n\t        }\n\t      };\n\t    }\n\t    drag.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return drag;\n\t    };\n\t    return d3.rebind(drag, event, \"on\");\n\t  };\n\t  function d3_behavior_dragTouchId() {\n\t    return d3.event.changedTouches[0].identifier;\n\t  }\n\t  d3.touches = function(container, touches) {\n\t    if (arguments.length < 2) touches = d3_eventSource().touches;\n\t    return touches ? d3_array(touches).map(function(touch) {\n\t      var point = d3_mousePoint(container, touch);\n\t      point.identifier = touch.identifier;\n\t      return point;\n\t    }) : [];\n\t  };\n\t  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n\t  function d3_sgn(x) {\n\t    return x > 0 ? 1 : x < 0 ? -1 : 0;\n\t  }\n\t  function d3_cross2d(a, b, c) {\n\t    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t  }\n\t  function d3_acos(x) {\n\t    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n\t  }\n\t  function d3_asin(x) {\n\t    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n\t  }\n\t  function d3_sinh(x) {\n\t    return ((x = Math.exp(x)) - 1 / x) / 2;\n\t  }\n\t  function d3_cosh(x) {\n\t    return ((x = Math.exp(x)) + 1 / x) / 2;\n\t  }\n\t  function d3_tanh(x) {\n\t    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t  }\n\t  function d3_haversin(x) {\n\t    return (x = Math.sin(x / 2)) * x;\n\t  }\n\t  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n\t  d3.interpolateZoom = function(p0, p1) {\n\t    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n\t    if (d2 < ε2) {\n\t      S = Math.log(w1 / w0) / ρ;\n\t      i = function(t) {\n\t        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n\t      };\n\t    } else {\n\t      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t      S = (r1 - r0) / ρ;\n\t      i = function(t) {\n\t        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n\t        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n\t      };\n\t    }\n\t    i.duration = S * 1e3;\n\t    return i;\n\t  };\n\t  d3.behavior.zoom = function() {\n\t    var view = {\n\t      x: 0,\n\t      y: 0,\n\t      k: 1\n\t    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n\t    if (!d3_behavior_zoomWheel) {\n\t      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n\t      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return d3.event.wheelDelta;\n\t      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.detail;\n\t      }, \"MozMousePixelScroll\");\n\t    }\n\t    function zoom(g) {\n\t      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n\t    }\n\t    zoom.event = function(g) {\n\t      g.each(function() {\n\t        var dispatch = event.of(this, arguments), view1 = view;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.zoom\", function() {\n\t            view = this.__chart__ || {\n\t              x: 0,\n\t              y: 0,\n\t              k: 1\n\t            };\n\t            zoomstarted(dispatch);\n\t          }).tween(\"zoom:zoom\", function() {\n\t            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n\t            return function(t) {\n\t              var l = i(t), k = dx / l[2];\n\t              this.__chart__ = view = {\n\t                x: cx - l[0] * k,\n\t                y: cy - l[1] * k,\n\t                k: k\n\t              };\n\t              zoomed(dispatch);\n\t            };\n\t          }).each(\"interrupt.zoom\", function() {\n\t            zoomended(dispatch);\n\t          }).each(\"end.zoom\", function() {\n\t            zoomended(dispatch);\n\t          });\n\t        } else {\n\t          this.__chart__ = view;\n\t          zoomstarted(dispatch);\n\t          zoomed(dispatch);\n\t          zoomended(dispatch);\n\t        }\n\t      });\n\t    };\n\t    zoom.translate = function(_) {\n\t      if (!arguments.length) return [ view.x, view.y ];\n\t      view = {\n\t        x: +_[0],\n\t        y: +_[1],\n\t        k: view.k\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scale = function(_) {\n\t      if (!arguments.length) return view.k;\n\t      view = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: null\n\t      };\n\t      scaleTo(+_);\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scaleExtent = function(_) {\n\t      if (!arguments.length) return scaleExtent;\n\t      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.center = function(_) {\n\t      if (!arguments.length) return center;\n\t      center = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.duration = function(_) {\n\t      if (!arguments.length) return duration;\n\t      duration = +_;\n\t      return zoom;\n\t    };\n\t    zoom.x = function(z) {\n\t      if (!arguments.length) return x1;\n\t      x1 = z;\n\t      x0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    zoom.y = function(z) {\n\t      if (!arguments.length) return y1;\n\t      y1 = z;\n\t      y0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    function location(p) {\n\t      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n\t    }\n\t    function point(l) {\n\t      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n\t    }\n\t    function scaleTo(s) {\n\t      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n\t    }\n\t    function translateTo(p, l) {\n\t      l = point(l);\n\t      view.x += p[0] - l[0];\n\t      view.y += p[1] - l[1];\n\t    }\n\t    function zoomTo(that, p, l, k) {\n\t      that.__chart__ = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: view.k\n\t      };\n\t      scaleTo(Math.pow(2, k));\n\t      translateTo(center0 = p, l);\n\t      that = d3.select(that);\n\t      if (duration > 0) that = that.transition().duration(duration);\n\t      that.call(zoom.event);\n\t    }\n\t    function rescale() {\n\t      if (x1) x1.domain(x0.range().map(function(x) {\n\t        return (x - view.x) / view.k;\n\t      }).map(x0.invert));\n\t      if (y1) y1.domain(y0.range().map(function(y) {\n\t        return (y - view.y) / view.k;\n\t      }).map(y0.invert));\n\t    }\n\t    function zoomstarted(dispatch) {\n\t      if (!zooming++) dispatch({\n\t        type: \"zoomstart\"\n\t      });\n\t    }\n\t    function zoomed(dispatch) {\n\t      rescale();\n\t      dispatch({\n\t        type: \"zoom\",\n\t        scale: view.k,\n\t        translate: [ view.x, view.y ]\n\t      });\n\t    }\n\t    function zoomended(dispatch) {\n\t      if (!--zooming) dispatch({\n\t        type: \"zoomend\"\n\t      }), center0 = null;\n\t    }\n\t    function mousedowned() {\n\t      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n\t      d3_selection_interrupt.call(that);\n\t      zoomstarted(dispatch);\n\t      function moved() {\n\t        dragged = 1;\n\t        translateTo(d3.mouse(that), location0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        subject.on(mousemove, null).on(mouseup, null);\n\t        dragRestore(dragged);\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function touchstarted() {\n\t      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n\t      started();\n\t      zoomstarted(dispatch);\n\t      subject.on(mousedown, null).on(touchstart, started);\n\t      function relocate() {\n\t        var touches = d3.touches(that);\n\t        scale0 = view.k;\n\t        touches.forEach(function(t) {\n\t          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n\t        });\n\t        return touches;\n\t      }\n\t      function started() {\n\t        var target = d3.event.target;\n\t        d3.select(target).on(touchmove, moved).on(touchend, ended);\n\t        targets.push(target);\n\t        var changed = d3.event.changedTouches;\n\t        for (var i = 0, n = changed.length; i < n; ++i) {\n\t          locations0[changed[i].identifier] = null;\n\t        }\n\t        var touches = relocate(), now = Date.now();\n\t        if (touches.length === 1) {\n\t          if (now - touchtime < 500) {\n\t            var p = touches[0];\n\t            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n\t            d3_eventPreventDefault();\n\t          }\n\t          touchtime = now;\n\t        } else if (touches.length > 1) {\n\t          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n\t          distance0 = dx * dx + dy * dy;\n\t        }\n\t      }\n\t      function moved() {\n\t        var touches = d3.touches(that), p0, l0, p1, l1;\n\t        d3_selection_interrupt.call(that);\n\t        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n\t          p1 = touches[i];\n\t          if (l1 = locations0[p1.identifier]) {\n\t            if (l0) break;\n\t            p0 = p1, l0 = l1;\n\t          }\n\t        }\n\t        if (l1) {\n\t          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n\t          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n\t          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n\t          scaleTo(scale1 * scale0);\n\t        }\n\t        touchtime = null;\n\t        translateTo(p0, l0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        if (d3.event.touches.length) {\n\t          var changed = d3.event.changedTouches;\n\t          for (var i = 0, n = changed.length; i < n; ++i) {\n\t            delete locations0[changed[i].identifier];\n\t          }\n\t          for (var identifier in locations0) {\n\t            return void relocate();\n\t          }\n\t        }\n\t        d3.selectAll(targets).on(zoomName, null);\n\t        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n\t        dragRestore();\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function mousewheeled() {\n\t      var dispatch = event.of(this, arguments);\n\t      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n\t      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n\t      mousewheelTimer = setTimeout(function() {\n\t        mousewheelTimer = null;\n\t        zoomended(dispatch);\n\t      }, 50);\n\t      d3_eventPreventDefault();\n\t      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n\t      translateTo(center0, translate0);\n\t      zoomed(dispatch);\n\t    }\n\t    function dblclicked() {\n\t      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n\t      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n\t    }\n\t    return d3.rebind(zoom, event, \"on\");\n\t  };\n\t  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n\t  d3.color = d3_color;\n\t  function d3_color() {}\n\t  d3_color.prototype.toString = function() {\n\t    return this.rgb() + \"\";\n\t  };\n\t  d3.hsl = d3_hsl;\n\t  function d3_hsl(h, s, l) {\n\t    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n\t  }\n\t  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n\t  d3_hslPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, this.l / k);\n\t  };\n\t  d3_hslPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, k * this.l);\n\t  };\n\t  d3_hslPrototype.rgb = function() {\n\t    return d3_hsl_rgb(this.h, this.s, this.l);\n\t  };\n\t  function d3_hsl_rgb(h, s, l) {\n\t    var m1, m2;\n\t    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n\t    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n\t    l = l < 0 ? 0 : l > 1 ? 1 : l;\n\t    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n\t    m1 = 2 * l - m2;\n\t    function v(h) {\n\t      if (h > 360) h -= 360; else if (h < 0) h += 360;\n\t      if (h < 60) return m1 + (m2 - m1) * h / 60;\n\t      if (h < 180) return m2;\n\t      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n\t      return m1;\n\t    }\n\t    function vv(h) {\n\t      return Math.round(v(h) * 255);\n\t    }\n\t    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n\t  }\n\t  d3.hcl = d3_hcl;\n\t  function d3_hcl(h, c, l) {\n\t    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n\t  }\n\t  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n\t  d3_hclPrototype.brighter = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.darker = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.rgb = function() {\n\t    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n\t  };\n\t  function d3_hcl_lab(h, c, l) {\n\t    if (isNaN(h)) h = 0;\n\t    if (isNaN(c)) c = 0;\n\t    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n\t  }\n\t  d3.lab = d3_lab;\n\t  function d3_lab(l, a, b) {\n\t    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n\t  }\n\t  var d3_lab_K = 18;\n\t  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n\t  var d3_labPrototype = d3_lab.prototype = new d3_color();\n\t  d3_labPrototype.brighter = function(k) {\n\t    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.darker = function(k) {\n\t    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.rgb = function() {\n\t    return d3_lab_rgb(this.l, this.a, this.b);\n\t  };\n\t  function d3_lab_rgb(l, a, b) {\n\t    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n\t    x = d3_lab_xyz(x) * d3_lab_X;\n\t    y = d3_lab_xyz(y) * d3_lab_Y;\n\t    z = d3_lab_xyz(z) * d3_lab_Z;\n\t    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n\t  }\n\t  function d3_lab_hcl(l, a, b) {\n\t    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n\t  }\n\t  function d3_lab_xyz(x) {\n\t    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n\t  }\n\t  function d3_xyz_lab(x) {\n\t    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n\t  }\n\t  function d3_xyz_rgb(r) {\n\t    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n\t  }\n\t  d3.rgb = d3_rgb;\n\t  function d3_rgb(r, g, b) {\n\t    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n\t  }\n\t  function d3_rgbNumber(value) {\n\t    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n\t  }\n\t  function d3_rgbString(value) {\n\t    return d3_rgbNumber(value) + \"\";\n\t  }\n\t  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n\t  d3_rgbPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    var r = this.r, g = this.g, b = this.b, i = 30;\n\t    if (!r && !g && !b) return new d3_rgb(i, i, i);\n\t    if (r && r < i) r = i;\n\t    if (g && g < i) g = i;\n\t    if (b && b < i) b = i;\n\t    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n\t  };\n\t  d3_rgbPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n\t  };\n\t  d3_rgbPrototype.hsl = function() {\n\t    return d3_rgb_hsl(this.r, this.g, this.b);\n\t  };\n\t  d3_rgbPrototype.toString = function() {\n\t    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n\t  };\n\t  function d3_rgb_hex(v) {\n\t    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n\t  }\n\t  function d3_rgb_parse(format, rgb, hsl) {\n\t    var r = 0, g = 0, b = 0, m1, m2, color;\n\t    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n\t    if (m1) {\n\t      m2 = m1[2].split(\",\");\n\t      switch (m1[1]) {\n\t       case \"hsl\":\n\t        {\n\t          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n\t        }\n\t\n\t       case \"rgb\":\n\t        {\n\t          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n\t        }\n\t      }\n\t    }\n\t    if (color = d3_rgb_names.get(format)) {\n\t      return rgb(color.r, color.g, color.b);\n\t    }\n\t    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n\t      if (format.length === 4) {\n\t        r = (color & 3840) >> 4;\n\t        r = r >> 4 | r;\n\t        g = color & 240;\n\t        g = g >> 4 | g;\n\t        b = color & 15;\n\t        b = b << 4 | b;\n\t      } else if (format.length === 7) {\n\t        r = (color & 16711680) >> 16;\n\t        g = (color & 65280) >> 8;\n\t        b = color & 255;\n\t      }\n\t    }\n\t    return rgb(r, g, b);\n\t  }\n\t  function d3_rgb_hsl(r, g, b) {\n\t    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n\t    if (d) {\n\t      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n\t      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n\t      h *= 60;\n\t    } else {\n\t      h = NaN;\n\t      s = l > 0 && l < 1 ? 0 : h;\n\t    }\n\t    return new d3_hsl(h, s, l);\n\t  }\n\t  function d3_rgb_lab(r, g, b) {\n\t    r = d3_rgb_xyz(r);\n\t    g = d3_rgb_xyz(g);\n\t    b = d3_rgb_xyz(b);\n\t    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n\t    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n\t  }\n\t  function d3_rgb_xyz(r) {\n\t    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n\t  }\n\t  function d3_rgb_parseNumber(c) {\n\t    var f = parseFloat(c);\n\t    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n\t  }\n\t  var d3_rgb_names = d3.map({\n\t    aliceblue: 15792383,\n\t    antiquewhite: 16444375,\n\t    aqua: 65535,\n\t    aquamarine: 8388564,\n\t    azure: 15794175,\n\t    beige: 16119260,\n\t    bisque: 16770244,\n\t    black: 0,\n\t    blanchedalmond: 16772045,\n\t    blue: 255,\n\t    blueviolet: 9055202,\n\t    brown: 10824234,\n\t    burlywood: 14596231,\n\t    cadetblue: 6266528,\n\t    chartreuse: 8388352,\n\t    chocolate: 13789470,\n\t    coral: 16744272,\n\t    cornflowerblue: 6591981,\n\t    cornsilk: 16775388,\n\t    crimson: 14423100,\n\t    cyan: 65535,\n\t    darkblue: 139,\n\t    darkcyan: 35723,\n\t    darkgoldenrod: 12092939,\n\t    darkgray: 11119017,\n\t    darkgreen: 25600,\n\t    darkgrey: 11119017,\n\t    darkkhaki: 12433259,\n\t    darkmagenta: 9109643,\n\t    darkolivegreen: 5597999,\n\t    darkorange: 16747520,\n\t    darkorchid: 10040012,\n\t    darkred: 9109504,\n\t    darksalmon: 15308410,\n\t    darkseagreen: 9419919,\n\t    darkslateblue: 4734347,\n\t    darkslategray: 3100495,\n\t    darkslategrey: 3100495,\n\t    darkturquoise: 52945,\n\t    darkviolet: 9699539,\n\t    deeppink: 16716947,\n\t    deepskyblue: 49151,\n\t    dimgray: 6908265,\n\t    dimgrey: 6908265,\n\t    dodgerblue: 2003199,\n\t    firebrick: 11674146,\n\t    floralwhite: 16775920,\n\t    forestgreen: 2263842,\n\t    fuchsia: 16711935,\n\t    gainsboro: 14474460,\n\t    ghostwhite: 16316671,\n\t    gold: 16766720,\n\t    goldenrod: 14329120,\n\t    gray: 8421504,\n\t    green: 32768,\n\t    greenyellow: 11403055,\n\t    grey: 8421504,\n\t    honeydew: 15794160,\n\t    hotpink: 16738740,\n\t    indianred: 13458524,\n\t    indigo: 4915330,\n\t    ivory: 16777200,\n\t    khaki: 15787660,\n\t    lavender: 15132410,\n\t    lavenderblush: 16773365,\n\t    lawngreen: 8190976,\n\t    lemonchiffon: 16775885,\n\t    lightblue: 11393254,\n\t    lightcoral: 15761536,\n\t    lightcyan: 14745599,\n\t    lightgoldenrodyellow: 16448210,\n\t    lightgray: 13882323,\n\t    lightgreen: 9498256,\n\t    lightgrey: 13882323,\n\t    lightpink: 16758465,\n\t    lightsalmon: 16752762,\n\t    lightseagreen: 2142890,\n\t    lightskyblue: 8900346,\n\t    lightslategray: 7833753,\n\t    lightslategrey: 7833753,\n\t    lightsteelblue: 11584734,\n\t    lightyellow: 16777184,\n\t    lime: 65280,\n\t    limegreen: 3329330,\n\t    linen: 16445670,\n\t    magenta: 16711935,\n\t    maroon: 8388608,\n\t    mediumaquamarine: 6737322,\n\t    mediumblue: 205,\n\t    mediumorchid: 12211667,\n\t    mediumpurple: 9662683,\n\t    mediumseagreen: 3978097,\n\t    mediumslateblue: 8087790,\n\t    mediumspringgreen: 64154,\n\t    mediumturquoise: 4772300,\n\t    mediumvioletred: 13047173,\n\t    midnightblue: 1644912,\n\t    mintcream: 16121850,\n\t    mistyrose: 16770273,\n\t    moccasin: 16770229,\n\t    navajowhite: 16768685,\n\t    navy: 128,\n\t    oldlace: 16643558,\n\t    olive: 8421376,\n\t    olivedrab: 7048739,\n\t    orange: 16753920,\n\t    orangered: 16729344,\n\t    orchid: 14315734,\n\t    palegoldenrod: 15657130,\n\t    palegreen: 10025880,\n\t    paleturquoise: 11529966,\n\t    palevioletred: 14381203,\n\t    papayawhip: 16773077,\n\t    peachpuff: 16767673,\n\t    peru: 13468991,\n\t    pink: 16761035,\n\t    plum: 14524637,\n\t    powderblue: 11591910,\n\t    purple: 8388736,\n\t    rebeccapurple: 6697881,\n\t    red: 16711680,\n\t    rosybrown: 12357519,\n\t    royalblue: 4286945,\n\t    saddlebrown: 9127187,\n\t    salmon: 16416882,\n\t    sandybrown: 16032864,\n\t    seagreen: 3050327,\n\t    seashell: 16774638,\n\t    sienna: 10506797,\n\t    silver: 12632256,\n\t    skyblue: 8900331,\n\t    slateblue: 6970061,\n\t    slategray: 7372944,\n\t    slategrey: 7372944,\n\t    snow: 16775930,\n\t    springgreen: 65407,\n\t    steelblue: 4620980,\n\t    tan: 13808780,\n\t    teal: 32896,\n\t    thistle: 14204888,\n\t    tomato: 16737095,\n\t    turquoise: 4251856,\n\t    violet: 15631086,\n\t    wheat: 16113331,\n\t    white: 16777215,\n\t    whitesmoke: 16119285,\n\t    yellow: 16776960,\n\t    yellowgreen: 10145074\n\t  });\n\t  d3_rgb_names.forEach(function(key, value) {\n\t    d3_rgb_names.set(key, d3_rgbNumber(value));\n\t  });\n\t  function d3_functor(v) {\n\t    return typeof v === \"function\" ? v : function() {\n\t      return v;\n\t    };\n\t  }\n\t  d3.functor = d3_functor;\n\t  d3.xhr = d3_xhrType(d3_identity);\n\t  function d3_xhrType(response) {\n\t    return function(url, mimeType, callback) {\n\t      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n\t      mimeType = null;\n\t      return d3_xhr(url, mimeType, response, callback);\n\t    };\n\t  }\n\t  function d3_xhr(url, mimeType, response, callback) {\n\t    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n\t    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\t    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n\t      request.readyState > 3 && respond();\n\t    };\n\t    function respond() {\n\t      var status = request.status, result;\n\t      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n\t        try {\n\t          result = response.call(xhr, request);\n\t        } catch (e) {\n\t          dispatch.error.call(xhr, e);\n\t          return;\n\t        }\n\t        dispatch.load.call(xhr, result);\n\t      } else {\n\t        dispatch.error.call(xhr, request);\n\t      }\n\t    }\n\t    request.onprogress = function(event) {\n\t      var o = d3.event;\n\t      d3.event = event;\n\t      try {\n\t        dispatch.progress.call(xhr, request);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t    xhr.header = function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers[name];\n\t      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.mimeType = function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.responseType = function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return xhr;\n\t    };\n\t    xhr.response = function(value) {\n\t      response = value;\n\t      return xhr;\n\t    };\n\t    [ \"get\", \"post\" ].forEach(function(method) {\n\t      xhr[method] = function() {\n\t        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n\t      };\n\t    });\n\t    xhr.send = function(method, data, callback) {\n\t      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n\t      request.open(method, url, true);\n\t      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n\t      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n\t      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n\t      if (responseType != null) request.responseType = responseType;\n\t      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n\t        callback(null, request);\n\t      });\n\t      dispatch.beforesend.call(xhr, request);\n\t      request.send(data == null ? null : data);\n\t      return xhr;\n\t    };\n\t    xhr.abort = function() {\n\t      request.abort();\n\t      return xhr;\n\t    };\n\t    d3.rebind(xhr, dispatch, \"on\");\n\t    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n\t  }\n\t  function d3_xhr_fixCallback(callback) {\n\t    return callback.length === 1 ? function(error, request) {\n\t      callback(error == null ? request : null);\n\t    } : callback;\n\t  }\n\t  function d3_xhrHasResponse(request) {\n\t    var type = request.responseType;\n\t    return type && type !== \"text\" ? request.response : request.responseText;\n\t  }\n\t  d3.dsv = function(delimiter, mimeType) {\n\t    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n\t    function dsv(url, row, callback) {\n\t      if (arguments.length < 3) callback = row, row = null;\n\t      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\t      xhr.row = function(_) {\n\t        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n\t      };\n\t      return xhr;\n\t    }\n\t    function response(request) {\n\t      return dsv.parse(request.responseText);\n\t    }\n\t    function typedResponse(f) {\n\t      return function(request) {\n\t        return dsv.parse(request.responseText, f);\n\t      };\n\t    }\n\t    dsv.parse = function(text, f) {\n\t      var o;\n\t      return dsv.parseRows(text, function(row, i) {\n\t        if (o) return o(row, i - 1);\n\t        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n\t          return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t        }).join(\",\") + \"}\");\n\t        o = f ? function(row, i) {\n\t          return f(a(row), i);\n\t        } : a;\n\t      });\n\t    };\n\t    dsv.parseRows = function(text, f) {\n\t      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n\t      function token() {\n\t        if (I >= N) return EOF;\n\t        if (eol) return eol = false, EOL;\n\t        var j = I;\n\t        if (text.charCodeAt(j) === 34) {\n\t          var i = j;\n\t          while (i++ < N) {\n\t            if (text.charCodeAt(i) === 34) {\n\t              if (text.charCodeAt(i + 1) !== 34) break;\n\t              ++i;\n\t            }\n\t          }\n\t          I = i + 2;\n\t          var c = text.charCodeAt(i + 1);\n\t          if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(i + 2) === 10) ++I;\n\t          } else if (c === 10) {\n\t            eol = true;\n\t          }\n\t          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n\t        }\n\t        while (I < N) {\n\t          var c = text.charCodeAt(I++), k = 1;\n\t          if (c === 10) eol = true; else if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(I) === 10) ++I, ++k;\n\t          } else if (c !== delimiterCode) continue;\n\t          return text.slice(j, I - k);\n\t        }\n\t        return text.slice(j);\n\t      }\n\t      while ((t = token()) !== EOF) {\n\t        var a = [];\n\t        while (t !== EOL && t !== EOF) {\n\t          a.push(t);\n\t          t = token();\n\t        }\n\t        if (f && (a = f(a, n++)) == null) continue;\n\t        rows.push(a);\n\t      }\n\t      return rows;\n\t    };\n\t    dsv.format = function(rows) {\n\t      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n\t      var fieldSet = new d3_Set(), fields = [];\n\t      rows.forEach(function(row) {\n\t        for (var field in row) {\n\t          if (!fieldSet.has(field)) {\n\t            fields.push(fieldSet.add(field));\n\t          }\n\t        }\n\t      });\n\t      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n\t        return fields.map(function(field) {\n\t          return formatValue(row[field]);\n\t        }).join(delimiter);\n\t      })).join(\"\\n\");\n\t    };\n\t    dsv.formatRows = function(rows) {\n\t      return rows.map(formatRow).join(\"\\n\");\n\t    };\n\t    function formatRow(row) {\n\t      return row.map(formatValue).join(delimiter);\n\t    }\n\t    function formatValue(text) {\n\t      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n\t    }\n\t    return dsv;\n\t  };\n\t  d3.csv = d3.dsv(\",\", \"text/csv\");\n\t  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\t  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n\t    setTimeout(callback, 17);\n\t  };\n\t  d3.timer = function() {\n\t    d3_timer.apply(this, arguments);\n\t  };\n\t  function d3_timer(callback, delay, then) {\n\t    var n = arguments.length;\n\t    if (n < 2) delay = 0;\n\t    if (n < 3) then = Date.now();\n\t    var time = then + delay, timer = {\n\t      c: callback,\n\t      t: time,\n\t      n: null\n\t    };\n\t    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n\t    d3_timer_queueTail = timer;\n\t    if (!d3_timer_interval) {\n\t      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t    return timer;\n\t  }\n\t  function d3_timer_step() {\n\t    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n\t    if (delay > 24) {\n\t      if (isFinite(delay)) {\n\t        clearTimeout(d3_timer_timeout);\n\t        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n\t      }\n\t      d3_timer_interval = 0;\n\t    } else {\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  }\n\t  d3.timer.flush = function() {\n\t    d3_timer_mark();\n\t    d3_timer_sweep();\n\t  };\n\t  function d3_timer_mark() {\n\t    var now = Date.now(), timer = d3_timer_queueHead;\n\t    while (timer) {\n\t      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n\t      timer = timer.n;\n\t    }\n\t    return now;\n\t  }\n\t  function d3_timer_sweep() {\n\t    var t0, t1 = d3_timer_queueHead, time = Infinity;\n\t    while (t1) {\n\t      if (t1.c) {\n\t        if (t1.t < time) time = t1.t;\n\t        t1 = (t0 = t1).n;\n\t      } else {\n\t        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n\t      }\n\t    }\n\t    d3_timer_queueTail = t0;\n\t    return time;\n\t  }\n\t  function d3_format_precision(x, p) {\n\t    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n\t  }\n\t  d3.round = function(x, n) {\n\t    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n\t  };\n\t  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n\t  d3.formatPrefix = function(value, precision) {\n\t    var i = 0;\n\t    if (value = +value) {\n\t      if (value < 0) value *= -1;\n\t      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n\t      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n\t      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n\t    }\n\t    return d3_formatPrefixes[8 + i / 3];\n\t  };\n\t  function d3_formatPrefix(d, i) {\n\t    var k = Math.pow(10, abs(8 - i) * 3);\n\t    return {\n\t      scale: i > 8 ? function(d) {\n\t        return d / k;\n\t      } : function(d) {\n\t        return d * k;\n\t      },\n\t      symbol: d\n\t    };\n\t  }\n\t  function d3_locale_numberFormat(locale) {\n\t    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n\t      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n\t      while (i > 0 && g > 0) {\n\t        if (length + g + 1 > width) g = Math.max(1, width - length);\n\t        t.push(value.substring(i -= g, i + g));\n\t        if ((length += g + 1) > width) break;\n\t        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n\t      }\n\t      return t.reverse().join(locale_thousands);\n\t    } : d3_identity;\n\t    return function(specifier) {\n\t      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n\t      if (precision) precision = +precision.substring(1);\n\t      if (zfill || fill === \"0\" && align === \"=\") {\n\t        zfill = fill = \"0\";\n\t        align = \"=\";\n\t      }\n\t      switch (type) {\n\t       case \"n\":\n\t        comma = true;\n\t        type = \"g\";\n\t        break;\n\t\n\t       case \"%\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"f\";\n\t        break;\n\t\n\t       case \"p\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"r\";\n\t        break;\n\t\n\t       case \"b\":\n\t       case \"o\":\n\t       case \"x\":\n\t       case \"X\":\n\t        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\t\n\t       case \"c\":\n\t        exponent = false;\n\t\n\t       case \"d\":\n\t        integer = true;\n\t        precision = 0;\n\t        break;\n\t\n\t       case \"s\":\n\t        scale = -1;\n\t        type = \"r\";\n\t        break;\n\t      }\n\t      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n\t      if (type == \"r\" && !precision) type = \"g\";\n\t      if (precision != null) {\n\t        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n\t      }\n\t      type = d3_format_types.get(type) || d3_format_typeDefault;\n\t      var zcomma = zfill && comma;\n\t      return function(value) {\n\t        var fullSuffix = suffix;\n\t        if (integer && value % 1) return \"\";\n\t        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n\t        if (scale < 0) {\n\t          var unit = d3.formatPrefix(value, precision);\n\t          value = unit.scale(value);\n\t          fullSuffix = unit.symbol + suffix;\n\t        } else {\n\t          value *= scale;\n\t        }\n\t        value = type(value, precision);\n\t        var i = value.lastIndexOf(\".\"), before, after;\n\t        if (i < 0) {\n\t          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n\t          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n\t        } else {\n\t          before = value.substring(0, i);\n\t          after = locale_decimal + value.substring(i + 1);\n\t        }\n\t        if (!zfill && comma) before = formatGroup(before, Infinity);\n\t        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n\t        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n\t        negative += prefix;\n\t        value = before + after;\n\t        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n\t      };\n\t    };\n\t  }\n\t  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n\t  var d3_format_types = d3.map({\n\t    b: function(x) {\n\t      return x.toString(2);\n\t    },\n\t    c: function(x) {\n\t      return String.fromCharCode(x);\n\t    },\n\t    o: function(x) {\n\t      return x.toString(8);\n\t    },\n\t    x: function(x) {\n\t      return x.toString(16);\n\t    },\n\t    X: function(x) {\n\t      return x.toString(16).toUpperCase();\n\t    },\n\t    g: function(x, p) {\n\t      return x.toPrecision(p);\n\t    },\n\t    e: function(x, p) {\n\t      return x.toExponential(p);\n\t    },\n\t    f: function(x, p) {\n\t      return x.toFixed(p);\n\t    },\n\t    r: function(x, p) {\n\t      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n\t    }\n\t  });\n\t  function d3_format_typeDefault(x) {\n\t    return x + \"\";\n\t  }\n\t  var d3_time = d3.time = {}, d3_date = Date;\n\t  function d3_date_utc() {\n\t    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n\t  }\n\t  d3_date_utc.prototype = {\n\t    getDate: function() {\n\t      return this._.getUTCDate();\n\t    },\n\t    getDay: function() {\n\t      return this._.getUTCDay();\n\t    },\n\t    getFullYear: function() {\n\t      return this._.getUTCFullYear();\n\t    },\n\t    getHours: function() {\n\t      return this._.getUTCHours();\n\t    },\n\t    getMilliseconds: function() {\n\t      return this._.getUTCMilliseconds();\n\t    },\n\t    getMinutes: function() {\n\t      return this._.getUTCMinutes();\n\t    },\n\t    getMonth: function() {\n\t      return this._.getUTCMonth();\n\t    },\n\t    getSeconds: function() {\n\t      return this._.getUTCSeconds();\n\t    },\n\t    getTime: function() {\n\t      return this._.getTime();\n\t    },\n\t    getTimezoneOffset: function() {\n\t      return 0;\n\t    },\n\t    valueOf: function() {\n\t      return this._.valueOf();\n\t    },\n\t    setDate: function() {\n\t      d3_time_prototype.setUTCDate.apply(this._, arguments);\n\t    },\n\t    setDay: function() {\n\t      d3_time_prototype.setUTCDay.apply(this._, arguments);\n\t    },\n\t    setFullYear: function() {\n\t      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n\t    },\n\t    setHours: function() {\n\t      d3_time_prototype.setUTCHours.apply(this._, arguments);\n\t    },\n\t    setMilliseconds: function() {\n\t      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n\t    },\n\t    setMinutes: function() {\n\t      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n\t    },\n\t    setMonth: function() {\n\t      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n\t    },\n\t    setSeconds: function() {\n\t      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n\t    },\n\t    setTime: function() {\n\t      d3_time_prototype.setTime.apply(this._, arguments);\n\t    }\n\t  };\n\t  var d3_time_prototype = Date.prototype;\n\t  function d3_time_interval(local, step, number) {\n\t    function round(date) {\n\t      var d0 = local(date), d1 = offset(d0, 1);\n\t      return date - d0 < d1 - date ? d0 : d1;\n\t    }\n\t    function ceil(date) {\n\t      step(date = local(new d3_date(date - 1)), 1);\n\t      return date;\n\t    }\n\t    function offset(date, k) {\n\t      step(date = new d3_date(+date), k);\n\t      return date;\n\t    }\n\t    function range(t0, t1, dt) {\n\t      var time = ceil(t0), times = [];\n\t      if (dt > 1) {\n\t        while (time < t1) {\n\t          if (!(number(time) % dt)) times.push(new Date(+time));\n\t          step(time, 1);\n\t        }\n\t      } else {\n\t        while (time < t1) times.push(new Date(+time)), step(time, 1);\n\t      }\n\t      return times;\n\t    }\n\t    function range_utc(t0, t1, dt) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = t0;\n\t        return range(utc, t1, dt);\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    }\n\t    local.floor = local;\n\t    local.round = round;\n\t    local.ceil = ceil;\n\t    local.offset = offset;\n\t    local.range = range;\n\t    var utc = local.utc = d3_time_interval_utc(local);\n\t    utc.floor = utc;\n\t    utc.round = d3_time_interval_utc(round);\n\t    utc.ceil = d3_time_interval_utc(ceil);\n\t    utc.offset = d3_time_interval_utc(offset);\n\t    utc.range = range_utc;\n\t    return local;\n\t  }\n\t  function d3_time_interval_utc(method) {\n\t    return function(date, k) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = date;\n\t        return method(utc, k)._;\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    };\n\t  }\n\t  d3_time.year = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setMonth(0, 1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setFullYear(date.getFullYear() + offset);\n\t  }, function(date) {\n\t    return date.getFullYear();\n\t  });\n\t  d3_time.years = d3_time.year.range;\n\t  d3_time.years.utc = d3_time.year.utc.range;\n\t  d3_time.day = d3_time_interval(function(date) {\n\t    var day = new d3_date(2e3, 0);\n\t    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n\t    return day;\n\t  }, function(date, offset) {\n\t    date.setDate(date.getDate() + offset);\n\t  }, function(date) {\n\t    return date.getDate() - 1;\n\t  });\n\t  d3_time.days = d3_time.day.range;\n\t  d3_time.days.utc = d3_time.day.utc.range;\n\t  d3_time.dayOfYear = function(date) {\n\t    var year = d3_time.year(date);\n\t    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n\t  };\n\t  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n\t    i = 7 - i;\n\t    var interval = d3_time[day] = d3_time_interval(function(date) {\n\t      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n\t      return date;\n\t    }, function(date, offset) {\n\t      date.setDate(date.getDate() + Math.floor(offset) * 7);\n\t    }, function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n\t    });\n\t    d3_time[day + \"s\"] = interval.range;\n\t    d3_time[day + \"s\"].utc = interval.utc.range;\n\t    d3_time[day + \"OfYear\"] = function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n\t    };\n\t  });\n\t  d3_time.week = d3_time.sunday;\n\t  d3_time.weeks = d3_time.sunday.range;\n\t  d3_time.weeks.utc = d3_time.sunday.utc.range;\n\t  d3_time.weekOfYear = d3_time.sundayOfYear;\n\t  function d3_locale_timeFormat(locale) {\n\t    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n\t    function d3_time_format(template) {\n\t      var n = template.length;\n\t      function format(date) {\n\t        var string = [], i = -1, j = 0, c, p, f;\n\t        while (++i < n) {\n\t          if (template.charCodeAt(i) === 37) {\n\t            string.push(template.slice(j, i));\n\t            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n\t            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n\t            string.push(c);\n\t            j = i + 1;\n\t          }\n\t        }\n\t        string.push(template.slice(j, i));\n\t        return string.join(\"\");\n\t      }\n\t      format.parse = function(string) {\n\t        var d = {\n\t          y: 1900,\n\t          m: 0,\n\t          d: 1,\n\t          H: 0,\n\t          M: 0,\n\t          S: 0,\n\t          L: 0,\n\t          Z: null\n\t        }, i = d3_time_parse(d, template, string, 0);\n\t        if (i != string.length) return null;\n\t        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n\t        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n\t          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t          date.setFullYear(d.y, 0, 1);\n\t          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n\t        } else date.setFullYear(d.y, d.m, d.d);\n\t        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n\t        return localZ ? date._ : date;\n\t      };\n\t      format.toString = function() {\n\t        return template;\n\t      };\n\t      return format;\n\t    }\n\t    function d3_time_parse(date, template, string, j) {\n\t      var c, p, t, i = 0, n = template.length, m = string.length;\n\t      while (i < n) {\n\t        if (j >= m) return -1;\n\t        c = template.charCodeAt(i++);\n\t        if (c === 37) {\n\t          t = template.charAt(i++);\n\t          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n\t          if (!p || (j = p(date, string, j)) < 0) return -1;\n\t        } else if (c != string.charCodeAt(j++)) {\n\t          return -1;\n\t        }\n\t      }\n\t      return j;\n\t    }\n\t    d3_time_format.utc = function(template) {\n\t      var local = d3_time_format(template);\n\t      function format(date) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var utc = new d3_date();\n\t          utc._ = date;\n\t          return local(utc);\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      }\n\t      format.parse = function(string) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var date = local.parse(string);\n\t          return date && date._;\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      };\n\t      format.toString = local.toString;\n\t      return format;\n\t    };\n\t    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n\t    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n\t    locale_periods.forEach(function(p, i) {\n\t      d3_time_periodLookup.set(p.toLowerCase(), i);\n\t    });\n\t    var d3_time_formats = {\n\t      a: function(d) {\n\t        return locale_shortDays[d.getDay()];\n\t      },\n\t      A: function(d) {\n\t        return locale_days[d.getDay()];\n\t      },\n\t      b: function(d) {\n\t        return locale_shortMonths[d.getMonth()];\n\t      },\n\t      B: function(d) {\n\t        return locale_months[d.getMonth()];\n\t      },\n\t      c: d3_time_format(locale_dateTime),\n\t      d: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      e: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      H: function(d, p) {\n\t        return d3_time_formatPad(d.getHours(), p, 2);\n\t      },\n\t      I: function(d, p) {\n\t        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n\t      },\n\t      j: function(d, p) {\n\t        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n\t      },\n\t      L: function(d, p) {\n\t        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n\t      },\n\t      m: function(d, p) {\n\t        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n\t      },\n\t      M: function(d, p) {\n\t        return d3_time_formatPad(d.getMinutes(), p, 2);\n\t      },\n\t      p: function(d) {\n\t        return locale_periods[+(d.getHours() >= 12)];\n\t      },\n\t      S: function(d, p) {\n\t        return d3_time_formatPad(d.getSeconds(), p, 2);\n\t      },\n\t      U: function(d, p) {\n\t        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n\t      },\n\t      w: function(d) {\n\t        return d.getDay();\n\t      },\n\t      W: function(d, p) {\n\t        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n\t      },\n\t      x: d3_time_format(locale_date),\n\t      X: d3_time_format(locale_time),\n\t      y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n\t      },\n\t      Y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n\t      },\n\t      Z: d3_time_zone,\n\t      \"%\": function() {\n\t        return \"%\";\n\t      }\n\t    };\n\t    var d3_time_parsers = {\n\t      a: d3_time_parseWeekdayAbbrev,\n\t      A: d3_time_parseWeekday,\n\t      b: d3_time_parseMonthAbbrev,\n\t      B: d3_time_parseMonth,\n\t      c: d3_time_parseLocaleFull,\n\t      d: d3_time_parseDay,\n\t      e: d3_time_parseDay,\n\t      H: d3_time_parseHour24,\n\t      I: d3_time_parseHour24,\n\t      j: d3_time_parseDayOfYear,\n\t      L: d3_time_parseMilliseconds,\n\t      m: d3_time_parseMonthNumber,\n\t      M: d3_time_parseMinutes,\n\t      p: d3_time_parseAmPm,\n\t      S: d3_time_parseSeconds,\n\t      U: d3_time_parseWeekNumberSunday,\n\t      w: d3_time_parseWeekdayNumber,\n\t      W: d3_time_parseWeekNumberMonday,\n\t      x: d3_time_parseLocaleDate,\n\t      X: d3_time_parseLocaleTime,\n\t      y: d3_time_parseYear,\n\t      Y: d3_time_parseFullYear,\n\t      Z: d3_time_parseZone,\n\t      \"%\": d3_time_parseLiteralPercent\n\t    };\n\t    function d3_time_parseWeekdayAbbrev(date, string, i) {\n\t      d3_time_dayAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseWeekday(date, string, i) {\n\t      d3_time_dayRe.lastIndex = 0;\n\t      var n = d3_time_dayRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonthAbbrev(date, string, i) {\n\t      d3_time_monthAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonth(date, string, i) {\n\t      d3_time_monthRe.lastIndex = 0;\n\t      var n = d3_time_monthRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseLocaleFull(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleDate(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleTime(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n\t    }\n\t    function d3_time_parseAmPm(date, string, i) {\n\t      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n\t      return n == null ? -1 : (date.p = n, i);\n\t    }\n\t    return d3_time_format;\n\t  }\n\t  var d3_time_formatPads = {\n\t    \"-\": \"\",\n\t    _: \" \",\n\t    \"0\": \"0\"\n\t  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n\t  function d3_time_formatPad(value, fill, width) {\n\t    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n\t    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t  }\n\t  function d3_time_formatRe(names) {\n\t    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n\t  }\n\t  function d3_time_formatLookup(names) {\n\t    var map = new d3_Map(), i = -1, n = names.length;\n\t    while (++i < n) map.set(names[i].toLowerCase(), i);\n\t    return map;\n\t  }\n\t  function d3_time_parseWeekdayNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n\t    return n ? (date.w = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberSunday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.U = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberMonday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.W = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseFullYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n\t    return n ? (date.y = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseZone(date, string, i) {\n\t    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n\t    i + 5) : -1;\n\t  }\n\t  function d3_time_expandYear(d) {\n\t    return d + (d > 68 ? 1900 : 2e3);\n\t  }\n\t  function d3_time_parseMonthNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDay(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.d = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDayOfYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.j = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseHour24(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.H = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMinutes(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.M = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseSeconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.S = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMilliseconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.L = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_zone(d) {\n\t    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n\t    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n\t  }\n\t  function d3_time_parseLiteralPercent(date, string, i) {\n\t    d3_time_percentRe.lastIndex = 0;\n\t    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n\t    return n ? i + n[0].length : -1;\n\t  }\n\t  function d3_time_formatMulti(formats) {\n\t    var n = formats.length, i = -1;\n\t    while (++i < n) formats[i][0] = this(formats[i][0]);\n\t    return function(date) {\n\t      var i = 0, f = formats[i];\n\t      while (!f[1](date)) f = formats[++i];\n\t      return f[0](date);\n\t    };\n\t  }\n\t  d3.locale = function(locale) {\n\t    return {\n\t      numberFormat: d3_locale_numberFormat(locale),\n\t      timeFormat: d3_locale_timeFormat(locale)\n\t    };\n\t  };\n\t  var d3_locale_enUS = d3.locale({\n\t    decimal: \".\",\n\t    thousands: \",\",\n\t    grouping: [ 3 ],\n\t    currency: [ \"$\", \"\" ],\n\t    dateTime: \"%a %b %e %X %Y\",\n\t    date: \"%m/%d/%Y\",\n\t    time: \"%H:%M:%S\",\n\t    periods: [ \"AM\", \"PM\" ],\n\t    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n\t    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n\t    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n\t    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n\t  });\n\t  d3.format = d3_locale_enUS.numberFormat;\n\t  d3.geo = {};\n\t  function d3_adder() {}\n\t  d3_adder.prototype = {\n\t    s: 0,\n\t    t: 0,\n\t    add: function(y) {\n\t      d3_adderSum(y, this.t, d3_adderTemp);\n\t      d3_adderSum(d3_adderTemp.s, this.s, this);\n\t      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n\t    },\n\t    reset: function() {\n\t      this.s = this.t = 0;\n\t    },\n\t    valueOf: function() {\n\t      return this.s;\n\t    }\n\t  };\n\t  var d3_adderTemp = new d3_adder();\n\t  function d3_adderSum(a, b, o) {\n\t    var x = o.s = a + b, bv = x - a, av = x - bv;\n\t    o.t = a - av + (b - bv);\n\t  }\n\t  d3.geo.stream = function(object, listener) {\n\t    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n\t      d3_geo_streamObjectType[object.type](object, listener);\n\t    } else {\n\t      d3_geo_streamGeometry(object, listener);\n\t    }\n\t  };\n\t  function d3_geo_streamGeometry(geometry, listener) {\n\t    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n\t      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n\t    }\n\t  }\n\t  var d3_geo_streamObjectType = {\n\t    Feature: function(feature, listener) {\n\t      d3_geo_streamGeometry(feature.geometry, listener);\n\t    },\n\t    FeatureCollection: function(object, listener) {\n\t      var features = object.features, i = -1, n = features.length;\n\t      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n\t    }\n\t  };\n\t  var d3_geo_streamGeometryType = {\n\t    Sphere: function(object, listener) {\n\t      listener.sphere();\n\t    },\n\t    Point: function(object, listener) {\n\t      object = object.coordinates;\n\t      listener.point(object[0], object[1], object[2]);\n\t    },\n\t    MultiPoint: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n\t    },\n\t    LineString: function(object, listener) {\n\t      d3_geo_streamLine(object.coordinates, listener, 0);\n\t    },\n\t    MultiLineString: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n\t    },\n\t    Polygon: function(object, listener) {\n\t      d3_geo_streamPolygon(object.coordinates, listener);\n\t    },\n\t    MultiPolygon: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n\t    },\n\t    GeometryCollection: function(object, listener) {\n\t      var geometries = object.geometries, i = -1, n = geometries.length;\n\t      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n\t    }\n\t  };\n\t  function d3_geo_streamLine(coordinates, listener, closed) {\n\t    var i = -1, n = coordinates.length - closed, coordinate;\n\t    listener.lineStart();\n\t    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n\t    listener.lineEnd();\n\t  }\n\t  function d3_geo_streamPolygon(coordinates, listener) {\n\t    var i = -1, n = coordinates.length;\n\t    listener.polygonStart();\n\t    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n\t    listener.polygonEnd();\n\t  }\n\t  d3.geo.area = function(object) {\n\t    d3_geo_areaSum = 0;\n\t    d3.geo.stream(object, d3_geo_area);\n\t    return d3_geo_areaSum;\n\t  };\n\t  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n\t  var d3_geo_area = {\n\t    sphere: function() {\n\t      d3_geo_areaSum += 4 * π;\n\t    },\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_areaRingSum.reset();\n\t      d3_geo_area.lineStart = d3_geo_areaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      var area = 2 * d3_geo_areaRingSum;\n\t      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n\t      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n\t    }\n\t  };\n\t  function d3_geo_areaRingStart() {\n\t    var λ00, φ00, λ0, cosφ0, sinφ0;\n\t    d3_geo_area.point = function(λ, φ) {\n\t      d3_geo_area.point = nextPoint;\n\t      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n\t      sinφ0 = Math.sin(φ);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      φ = φ * d3_radians / 2 + π / 4;\n\t      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n\t      d3_geo_areaRingSum.add(Math.atan2(v, u));\n\t      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n\t    }\n\t    d3_geo_area.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t    };\n\t  }\n\t  function d3_geo_cartesian(spherical) {\n\t    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n\t    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n\t  }\n\t  function d3_geo_cartesianDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t  }\n\t  function d3_geo_cartesianCross(a, b) {\n\t    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n\t  }\n\t  function d3_geo_cartesianAdd(a, b) {\n\t    a[0] += b[0];\n\t    a[1] += b[1];\n\t    a[2] += b[2];\n\t  }\n\t  function d3_geo_cartesianScale(vector, k) {\n\t    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n\t  }\n\t  function d3_geo_cartesianNormalize(d) {\n\t    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t    d[0] /= l;\n\t    d[1] /= l;\n\t    d[2] /= l;\n\t  }\n\t  function d3_geo_spherical(cartesian) {\n\t    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n\t  }\n\t  function d3_geo_sphericalEqual(a, b) {\n\t    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n\t  }\n\t  d3.geo.bounds = function() {\n\t    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n\t    var bound = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        bound.point = ringPoint;\n\t        bound.lineStart = ringStart;\n\t        bound.lineEnd = ringEnd;\n\t        dλSum = 0;\n\t        d3_geo_area.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        d3_geo_area.polygonEnd();\n\t        bound.point = point;\n\t        bound.lineStart = lineStart;\n\t        bound.lineEnd = lineEnd;\n\t        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n\t        range[0] = λ0, range[1] = λ1;\n\t      }\n\t    };\n\t    function point(λ, φ) {\n\t      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n\t      if (φ < φ0) φ0 = φ;\n\t      if (φ > φ1) φ1 = φ;\n\t    }\n\t    function linePoint(λ, φ) {\n\t      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n\t      if (p0) {\n\t        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n\t        d3_geo_cartesianNormalize(inflection);\n\t        inflection = d3_geo_spherical(inflection);\n\t        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n\t        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = inflection[1] * d3_degrees;\n\t          if (φi > φ1) φ1 = φi;\n\t        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = -inflection[1] * d3_degrees;\n\t          if (φi < φ0) φ0 = φi;\n\t        } else {\n\t          if (φ < φ0) φ0 = φ;\n\t          if (φ > φ1) φ1 = φ;\n\t        }\n\t        if (antimeridian) {\n\t          if (λ < λ_) {\n\t            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t          } else {\n\t            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t          }\n\t        } else {\n\t          if (λ1 >= λ0) {\n\t            if (λ < λ0) λ0 = λ;\n\t            if (λ > λ1) λ1 = λ;\n\t          } else {\n\t            if (λ > λ_) {\n\t              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t            } else {\n\t              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        point(λ, φ);\n\t      }\n\t      p0 = p, λ_ = λ;\n\t    }\n\t    function lineStart() {\n\t      bound.point = linePoint;\n\t    }\n\t    function lineEnd() {\n\t      range[0] = λ0, range[1] = λ1;\n\t      bound.point = point;\n\t      p0 = null;\n\t    }\n\t    function ringPoint(λ, φ) {\n\t      if (p0) {\n\t        var dλ = λ - λ_;\n\t        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n\t      } else λ__ = λ, φ__ = φ;\n\t      d3_geo_area.point(λ, φ);\n\t      linePoint(λ, φ);\n\t    }\n\t    function ringStart() {\n\t      d3_geo_area.lineStart();\n\t    }\n\t    function ringEnd() {\n\t      ringPoint(λ__, φ__);\n\t      d3_geo_area.lineEnd();\n\t      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n\t      range[0] = λ0, range[1] = λ1;\n\t      p0 = null;\n\t    }\n\t    function angle(λ0, λ1) {\n\t      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n\t    }\n\t    function compareRanges(a, b) {\n\t      return a[0] - b[0];\n\t    }\n\t    function withinRange(x, range) {\n\t      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t    }\n\t    return function(feature) {\n\t      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n\t      ranges = [];\n\t      d3.geo.stream(feature, bound);\n\t      var n = ranges.length;\n\t      if (n) {\n\t        ranges.sort(compareRanges);\n\t        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n\t          b = ranges[i];\n\t          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n\t            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t          } else {\n\t            merged.push(a = b);\n\t          }\n\t        }\n\t        var best = -Infinity, dλ;\n\t        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n\t          b = merged[i];\n\t          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n\t        }\n\t      }\n\t      ranges = range = null;\n\t      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n\t    };\n\t  }();\n\t  d3.geo.centroid = function(object) {\n\t    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t    d3.geo.stream(object, d3_geo_centroid);\n\t    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n\t    if (m < ε2) {\n\t      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n\t      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n\t      m = x * x + y * y + z * z;\n\t      if (m < ε2) return [ NaN, NaN ];\n\t    }\n\t    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n\t  };\n\t  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n\t  var d3_geo_centroid = {\n\t    sphere: d3_noop,\n\t    point: d3_geo_centroidPoint,\n\t    lineStart: d3_geo_centroidLineStart,\n\t    lineEnd: d3_geo_centroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n\t    }\n\t  };\n\t  function d3_geo_centroidPoint(λ, φ) {\n\t    λ *= d3_radians;\n\t    var cosφ = Math.cos(φ *= d3_radians);\n\t    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n\t  }\n\t  function d3_geo_centroidPointXYZ(x, y, z) {\n\t    ++d3_geo_centroidW0;\n\t    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n\t    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n\t    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n\t  }\n\t  function d3_geo_centroidLineStart() {\n\t    var x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroid.point = nextPoint;\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_centroidLineEnd() {\n\t    d3_geo_centroid.point = d3_geo_centroidPoint;\n\t  }\n\t  function d3_geo_centroidRingStart() {\n\t    var λ00, φ00, x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ00 = λ, φ00 = φ;\n\t      d3_geo_centroid.point = nextPoint;\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    d3_geo_centroid.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n\t      d3_geo_centroid.point = d3_geo_centroidPoint;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n\t      d3_geo_centroidX2 += v * cx;\n\t      d3_geo_centroidY2 += v * cy;\n\t      d3_geo_centroidZ2 += v * cz;\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_compose(a, b) {\n\t    function compose(x, y) {\n\t      return x = a(x, y), b(x[0], x[1]);\n\t    }\n\t    if (a.invert && b.invert) compose.invert = function(x, y) {\n\t      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t    };\n\t    return compose;\n\t  }\n\t  function d3_true() {\n\t    return true;\n\t  }\n\t  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n\t    var subject = [], clip = [];\n\t    segments.forEach(function(segment) {\n\t      if ((n = segment.length - 1) <= 0) return;\n\t      var n, p0 = segment[0], p1 = segment[n];\n\t      if (d3_geo_sphericalEqual(p0, p1)) {\n\t        listener.lineStart();\n\t        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n\t        listener.lineEnd();\n\t        return;\n\t      }\n\t      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n\t      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t    });\n\t    clip.sort(compare);\n\t    d3_geo_clipPolygonLinkCircular(subject);\n\t    d3_geo_clipPolygonLinkCircular(clip);\n\t    if (!subject.length) return;\n\t    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n\t      clip[i].e = entry = !entry;\n\t    }\n\t    var start = subject[0], points, point;\n\t    while (1) {\n\t      var current = start, isSubject = true;\n\t      while (current.v) if ((current = current.n) === start) return;\n\t      points = current.z;\n\t      listener.lineStart();\n\t      do {\n\t        current.v = current.o.v = true;\n\t        if (current.e) {\n\t          if (isSubject) {\n\t            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.n.x, 1, listener);\n\t          }\n\t          current = current.n;\n\t        } else {\n\t          if (isSubject) {\n\t            points = current.p.z;\n\t            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.p.x, -1, listener);\n\t          }\n\t          current = current.p;\n\t        }\n\t        current = current.o;\n\t        points = current.z;\n\t        isSubject = !isSubject;\n\t      } while (!current.v);\n\t      listener.lineEnd();\n\t    }\n\t  }\n\t  function d3_geo_clipPolygonLinkCircular(array) {\n\t    if (!(n = array.length)) return;\n\t    var n, i = 0, a = array[0], b;\n\t    while (++i < n) {\n\t      a.n = b = array[i];\n\t      b.p = a;\n\t      a = b;\n\t    }\n\t    a.n = b = array[0];\n\t    b.p = a;\n\t  }\n\t  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n\t    this.x = point;\n\t    this.z = points;\n\t    this.o = other;\n\t    this.e = entry;\n\t    this.v = false;\n\t    this.n = this.p = null;\n\t  }\n\t  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n\t    return function(rotate, listener) {\n\t      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          clip.point = pointRing;\n\t          clip.lineStart = ringStart;\n\t          clip.lineEnd = ringEnd;\n\t          segments = [];\n\t          polygon = [];\n\t        },\n\t        polygonEnd: function() {\n\t          clip.point = point;\n\t          clip.lineStart = lineStart;\n\t          clip.lineEnd = lineEnd;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\t          if (segments.length) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n\t          } else if (clipStartInside) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            interpolate(null, null, 1, listener);\n\t            listener.lineEnd();\n\t          }\n\t          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n\t          segments = polygon = null;\n\t        },\n\t        sphere: function() {\n\t          listener.polygonStart();\n\t          listener.lineStart();\n\t          interpolate(null, null, 1, listener);\n\t          listener.lineEnd();\n\t          listener.polygonEnd();\n\t        }\n\t      };\n\t      function point(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n\t      }\n\t      function pointLine(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        line.point(point[0], point[1]);\n\t      }\n\t      function lineStart() {\n\t        clip.point = pointLine;\n\t        line.lineStart();\n\t      }\n\t      function lineEnd() {\n\t        clip.point = point;\n\t        line.lineEnd();\n\t      }\n\t      var segments;\n\t      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n\t      function pointRing(λ, φ) {\n\t        ring.push([ λ, φ ]);\n\t        var point = rotate(λ, φ);\n\t        ringListener.point(point[0], point[1]);\n\t      }\n\t      function ringStart() {\n\t        ringListener.lineStart();\n\t        ring = [];\n\t      }\n\t      function ringEnd() {\n\t        pointRing(ring[0][0], ring[0][1]);\n\t        ringListener.lineEnd();\n\t        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n\t        ring.pop();\n\t        polygon.push(ring);\n\t        ring = null;\n\t        if (!n) return;\n\t        if (clean & 1) {\n\t          segment = ringSegments[0];\n\t          var n = segment.length - 1, i = -1, point;\n\t          if (n > 0) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n\t            listener.lineEnd();\n\t          }\n\t          return;\n\t        }\n\t        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n\t      }\n\t      return clip;\n\t    };\n\t  }\n\t  function d3_geo_clipSegmentLength1(segment) {\n\t    return segment.length > 1;\n\t  }\n\t  function d3_geo_clipBufferListener() {\n\t    var lines = [], line;\n\t    return {\n\t      lineStart: function() {\n\t        lines.push(line = []);\n\t      },\n\t      point: function(λ, φ) {\n\t        line.push([ λ, φ ]);\n\t      },\n\t      lineEnd: d3_noop,\n\t      buffer: function() {\n\t        var buffer = lines;\n\t        lines = [];\n\t        line = null;\n\t        return buffer;\n\t      },\n\t      rejoin: function() {\n\t        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipSort(a, b) {\n\t    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n\t  }\n\t  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n\t  function d3_geo_clipAntimeridianLine(listener) {\n\t    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n\t    return {\n\t      lineStart: function() {\n\t        listener.lineStart();\n\t        clean = 1;\n\t      },\n\t      point: function(λ1, φ1) {\n\t        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n\t        if (abs(dλ - π) < ε) {\n\t          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          listener.point(λ1, φ0);\n\t          clean = 0;\n\t        } else if (sλ0 !== sλ1 && dλ >= π) {\n\t          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n\t          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n\t          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          clean = 0;\n\t        }\n\t        listener.point(λ0 = λ1, φ0 = φ1);\n\t        sλ0 = sλ1;\n\t      },\n\t      lineEnd: function() {\n\t        listener.lineEnd();\n\t        λ0 = φ0 = NaN;\n\t      },\n\t      clean: function() {\n\t        return 2 - clean;\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n\t    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n\t    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n\t  }\n\t  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n\t    var φ;\n\t    if (from == null) {\n\t      φ = direction * halfπ;\n\t      listener.point(-π, φ);\n\t      listener.point(0, φ);\n\t      listener.point(π, φ);\n\t      listener.point(π, 0);\n\t      listener.point(π, -φ);\n\t      listener.point(0, -φ);\n\t      listener.point(-π, -φ);\n\t      listener.point(-π, 0);\n\t      listener.point(-π, φ);\n\t    } else if (abs(from[0] - to[0]) > ε) {\n\t      var s = from[0] < to[0] ? π : -π;\n\t      φ = direction * s / 2;\n\t      listener.point(-s, φ);\n\t      listener.point(0, φ);\n\t      listener.point(s, φ);\n\t    } else {\n\t      listener.point(to[0], to[1]);\n\t    }\n\t  }\n\t  function d3_geo_pointInPolygon(point, polygon) {\n\t    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n\t    d3_geo_areaRingSum.reset();\n\t    for (var i = 0, n = polygon.length; i < n; ++i) {\n\t      var ring = polygon[i], m = ring.length;\n\t      if (!m) continue;\n\t      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n\t      while (true) {\n\t        if (j === m) j = 0;\n\t        point = ring[j];\n\t        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n\t        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n\t        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\t        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n\t          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n\t          d3_geo_cartesianNormalize(arc);\n\t          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n\t          d3_geo_cartesianNormalize(intersection);\n\t          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\t          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n\t            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n\t          }\n\t        }\n\t        if (!j++) break;\n\t        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n\t      }\n\t    }\n\t    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n\t  }\n\t  function d3_geo_clipCircle(radius) {\n\t    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n\t    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n\t    function visible(λ, φ) {\n\t      return Math.cos(λ) * Math.cos(φ) > cr;\n\t    }\n\t    function clipLine(listener) {\n\t      var point0, c0, v0, v00, clean;\n\t      return {\n\t        lineStart: function() {\n\t          v00 = v0 = false;\n\t          clean = 1;\n\t        },\n\t        point: function(λ, φ) {\n\t          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n\t          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\t          if (v !== v0) {\n\t            point2 = intersect(point0, point1);\n\t            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n\t              point1[0] += ε;\n\t              point1[1] += ε;\n\t              v = visible(point1[0], point1[1]);\n\t            }\n\t          }\n\t          if (v !== v0) {\n\t            clean = 0;\n\t            if (v) {\n\t              listener.lineStart();\n\t              point2 = intersect(point1, point0);\n\t              listener.point(point2[0], point2[1]);\n\t            } else {\n\t              point2 = intersect(point0, point1);\n\t              listener.point(point2[0], point2[1]);\n\t              listener.lineEnd();\n\t            }\n\t            point0 = point2;\n\t          } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t            var t;\n\t            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t              clean = 0;\n\t              if (smallRadius) {\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t              } else {\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t              }\n\t            }\n\t          }\n\t          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n\t            listener.point(point1[0], point1[1]);\n\t          }\n\t          point0 = point1, v0 = v, c0 = c;\n\t        },\n\t        lineEnd: function() {\n\t          if (v0) listener.lineEnd();\n\t          point0 = null;\n\t        },\n\t        clean: function() {\n\t          return clean | (v00 && v0) << 1;\n\t        }\n\t      };\n\t    }\n\t    function intersect(a, b, two) {\n\t      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n\t      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n\t      if (!determinant) return !two && a;\n\t      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n\t      d3_geo_cartesianAdd(A, B);\n\t      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n\t      if (t2 < 0) return;\n\t      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n\t      d3_geo_cartesianAdd(q, A);\n\t      q = d3_geo_spherical(q);\n\t      if (!two) return q;\n\t      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n\t      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n\t      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n\t      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\t      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n\t        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n\t        d3_geo_cartesianAdd(q1, A);\n\t        return [ q, d3_geo_spherical(q1) ];\n\t      }\n\t    }\n\t    function code(λ, φ) {\n\t      var r = smallRadius ? radius : π - radius, code = 0;\n\t      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n\t      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n\t      return code;\n\t    }\n\t  }\n\t  function d3_geom_clipLine(x0, y0, x1, y1) {\n\t    return function(line) {\n\t      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n\t      r = x0 - ax;\n\t      if (!dx && r > 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dx > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = x1 - ax;\n\t      if (!dx && r < 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dx > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      r = y0 - ay;\n\t      if (!dy && r > 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dy > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = y1 - ay;\n\t      if (!dy && r < 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dy > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      if (t0 > 0) line.a = {\n\t        x: ax + t0 * dx,\n\t        y: ay + t0 * dy\n\t      };\n\t      if (t1 < 1) line.b = {\n\t        x: ax + t1 * dx,\n\t        y: ay + t1 * dy\n\t      };\n\t      return line;\n\t    };\n\t  }\n\t  var d3_geo_clipExtentMAX = 1e9;\n\t  d3.geo.clipExtent = function() {\n\t    var x0, y0, x1, y1, stream, clip, clipExtent = {\n\t      stream: function(output) {\n\t        if (stream) stream.valid = false;\n\t        stream = clip(output);\n\t        stream.valid = true;\n\t        return stream;\n\t      },\n\t      extent: function(_) {\n\t        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n\t        if (stream) stream.valid = false, stream = null;\n\t        return clipExtent;\n\t      }\n\t    };\n\t    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n\t  };\n\t  function d3_geo_clipExtent(x0, y0, x1, y1) {\n\t    return function(listener) {\n\t      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          listener = bufferListener;\n\t          segments = [];\n\t          polygon = [];\n\t          clean = true;\n\t        },\n\t        polygonEnd: function() {\n\t          listener = listener_;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n\t          if (inside || visible) {\n\t            listener.polygonStart();\n\t            if (inside) {\n\t              listener.lineStart();\n\t              interpolate(null, null, 1, listener);\n\t              listener.lineEnd();\n\t            }\n\t            if (visible) {\n\t              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n\t            }\n\t            listener.polygonEnd();\n\t          }\n\t          segments = polygon = ring = null;\n\t        }\n\t      };\n\t      function insidePolygon(p) {\n\t        var wn = 0, n = polygon.length, y = p[1];\n\t        for (var i = 0; i < n; ++i) {\n\t          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n\t            b = v[j];\n\t            if (a[1] <= y) {\n\t              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n\t            } else {\n\t              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n\t            }\n\t            a = b;\n\t          }\n\t        }\n\t        return wn !== 0;\n\t      }\n\t      function interpolate(from, to, direction, listener) {\n\t        var a = 0, a1 = 0;\n\t        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n\t          do {\n\t            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t          } while ((a = (a + direction + 4) % 4) !== a1);\n\t        } else {\n\t          listener.point(to[0], to[1]);\n\t        }\n\t      }\n\t      function pointVisible(x, y) {\n\t        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t      }\n\t      function point(x, y) {\n\t        if (pointVisible(x, y)) listener.point(x, y);\n\t      }\n\t      var x__, y__, v__, x_, y_, v_, first, clean;\n\t      function lineStart() {\n\t        clip.point = linePoint;\n\t        if (polygon) polygon.push(ring = []);\n\t        first = true;\n\t        v_ = false;\n\t        x_ = y_ = NaN;\n\t      }\n\t      function lineEnd() {\n\t        if (segments) {\n\t          linePoint(x__, y__);\n\t          if (v__ && v_) bufferListener.rejoin();\n\t          segments.push(bufferListener.buffer());\n\t        }\n\t        clip.point = point;\n\t        if (v_) listener.lineEnd();\n\t      }\n\t      function linePoint(x, y) {\n\t        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n\t        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n\t        var v = pointVisible(x, y);\n\t        if (polygon) ring.push([ x, y ]);\n\t        if (first) {\n\t          x__ = x, y__ = y, v__ = v;\n\t          first = false;\n\t          if (v) {\n\t            listener.lineStart();\n\t            listener.point(x, y);\n\t          }\n\t        } else {\n\t          if (v && v_) listener.point(x, y); else {\n\t            var l = {\n\t              a: {\n\t                x: x_,\n\t                y: y_\n\t              },\n\t              b: {\n\t                x: x,\n\t                y: y\n\t              }\n\t            };\n\t            if (clipLine(l)) {\n\t              if (!v_) {\n\t                listener.lineStart();\n\t                listener.point(l.a.x, l.a.y);\n\t              }\n\t              listener.point(l.b.x, l.b.y);\n\t              if (!v) listener.lineEnd();\n\t              clean = false;\n\t            } else if (v) {\n\t              listener.lineStart();\n\t              listener.point(x, y);\n\t              clean = false;\n\t            }\n\t          }\n\t        }\n\t        x_ = x, y_ = y, v_ = v;\n\t      }\n\t      return clip;\n\t    };\n\t    function corner(p, direction) {\n\t      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n\t    }\n\t    function compare(a, b) {\n\t      return comparePoints(a.x, b.x);\n\t    }\n\t    function comparePoints(a, b) {\n\t      var ca = corner(a, 1), cb = corner(b, 1);\n\t      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n\t    }\n\t  }\n\t  function d3_geo_conic(projectAt) {\n\t    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n\t    p.parallels = function(_) {\n\t      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n\t      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n\t    };\n\t    return p;\n\t  }\n\t  function d3_geo_conicEqualArea(φ0, φ1) {\n\t    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n\t    function forward(λ, φ) {\n\t      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n\t      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = ρ0 - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEqualArea = function() {\n\t    return d3_geo_conic(d3_geo_conicEqualArea);\n\t  }).raw = d3_geo_conicEqualArea;\n\t  d3.geo.albers = function() {\n\t    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n\t  };\n\t  d3.geo.albersUsa = function() {\n\t    var lower48 = d3.geo.albers();\n\t    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n\t    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n\t    var point, pointStream = {\n\t      point: function(x, y) {\n\t        point = [ x, y ];\n\t      }\n\t    }, lower48Point, alaskaPoint, hawaiiPoint;\n\t    function albersUsa(coordinates) {\n\t      var x = coordinates[0], y = coordinates[1];\n\t      point = null;\n\t      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n\t      return point;\n\t    }\n\t    albersUsa.invert = function(coordinates) {\n\t      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n\t      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n\t    };\n\t    albersUsa.stream = function(stream) {\n\t      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n\t      return {\n\t        point: function(x, y) {\n\t          lower48Stream.point(x, y);\n\t          alaskaStream.point(x, y);\n\t          hawaiiStream.point(x, y);\n\t        },\n\t        sphere: function() {\n\t          lower48Stream.sphere();\n\t          alaskaStream.sphere();\n\t          hawaiiStream.sphere();\n\t        },\n\t        lineStart: function() {\n\t          lower48Stream.lineStart();\n\t          alaskaStream.lineStart();\n\t          hawaiiStream.lineStart();\n\t        },\n\t        lineEnd: function() {\n\t          lower48Stream.lineEnd();\n\t          alaskaStream.lineEnd();\n\t          hawaiiStream.lineEnd();\n\t        },\n\t        polygonStart: function() {\n\t          lower48Stream.polygonStart();\n\t          alaskaStream.polygonStart();\n\t          hawaiiStream.polygonStart();\n\t        },\n\t        polygonEnd: function() {\n\t          lower48Stream.polygonEnd();\n\t          alaskaStream.polygonEnd();\n\t          hawaiiStream.polygonEnd();\n\t        }\n\t      };\n\t    };\n\t    albersUsa.precision = function(_) {\n\t      if (!arguments.length) return lower48.precision();\n\t      lower48.precision(_);\n\t      alaska.precision(_);\n\t      hawaii.precision(_);\n\t      return albersUsa;\n\t    };\n\t    albersUsa.scale = function(_) {\n\t      if (!arguments.length) return lower48.scale();\n\t      lower48.scale(_);\n\t      alaska.scale(_ * .35);\n\t      hawaii.scale(_);\n\t      return albersUsa.translate(lower48.translate());\n\t    };\n\t    albersUsa.translate = function(_) {\n\t      if (!arguments.length) return lower48.translate();\n\t      var k = lower48.scale(), x = +_[0], y = +_[1];\n\t      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n\t      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      return albersUsa;\n\t    };\n\t    return albersUsa.scale(1070);\n\t  };\n\t  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_pathAreaPolygon = 0;\n\t      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n\t      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n\t    }\n\t  };\n\t  function d3_geo_pathAreaRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathArea.point = function(x, y) {\n\t      d3_geo_pathArea.point = nextPoint;\n\t      x00 = x0 = x, y00 = y0 = y;\n\t    };\n\t    function nextPoint(x, y) {\n\t      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n\t      x0 = x, y0 = y;\n\t    }\n\t    d3_geo_pathArea.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n\t  var d3_geo_pathBounds = {\n\t    point: d3_geo_pathBoundsPoint,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_pathBoundsPoint(x, y) {\n\t    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n\t    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n\t    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n\t    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n\t  }\n\t  function d3_geo_pathBuffer() {\n\t    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointCircle = d3_geo_pathBufferCircle(_);\n\t        return stream;\n\t      },\n\t      result: function() {\n\t        if (buffer.length) {\n\t          var result = buffer.join(\"\");\n\t          buffer = [];\n\t          return result;\n\t        }\n\t      }\n\t    };\n\t    function point(x, y) {\n\t      buffer.push(\"M\", x, \",\", y, pointCircle);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      buffer.push(\"M\", x, \",\", y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      buffer.push(\"L\", x, \",\", y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      buffer.push(\"Z\");\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_pathBufferCircle(radius) {\n\t    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n\t  }\n\t  var d3_geo_pathCentroid = {\n\t    point: d3_geo_pathCentroidPoint,\n\t    lineStart: d3_geo_pathCentroidLineStart,\n\t    lineEnd: d3_geo_pathCentroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n\t      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n\t    }\n\t  };\n\t  function d3_geo_pathCentroidPoint(x, y) {\n\t    d3_geo_centroidX0 += x;\n\t    d3_geo_centroidY0 += y;\n\t    ++d3_geo_centroidZ0;\n\t  }\n\t  function d3_geo_pathCentroidLineStart() {\n\t    var x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t  }\n\t  function d3_geo_pathCentroidLineEnd() {\n\t    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t  }\n\t  function d3_geo_pathCentroidRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      z = y0 * x - x0 * y;\n\t      d3_geo_centroidX2 += z * (x0 + x);\n\t      d3_geo_centroidY2 += z * (y0 + y);\n\t      d3_geo_centroidZ2 += z * 3;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t    d3_geo_pathCentroid.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  function d3_geo_pathContext(context) {\n\t    var pointRadius = 4.5;\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointRadius = _;\n\t        return stream;\n\t      },\n\t      result: d3_noop\n\t    };\n\t    function point(x, y) {\n\t      context.moveTo(x + pointRadius, y);\n\t      context.arc(x, y, pointRadius, 0, τ);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      context.moveTo(x, y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      context.lineTo(x, y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      context.closePath();\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_resample(project) {\n\t    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n\t    function resample(stream) {\n\t      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n\t    }\n\t    function resampleNone(stream) {\n\t      return d3_geo_transformPoint(stream, function(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      });\n\t    }\n\t    function resampleRecursive(stream) {\n\t      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n\t      var resample = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          stream.polygonStart();\n\t          resample.lineStart = ringStart;\n\t        },\n\t        polygonEnd: function() {\n\t          stream.polygonEnd();\n\t          resample.lineStart = lineStart;\n\t        }\n\t      };\n\t      function point(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      }\n\t      function lineStart() {\n\t        x0 = NaN;\n\t        resample.point = linePoint;\n\t        stream.lineStart();\n\t      }\n\t      function linePoint(λ, φ) {\n\t        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t        stream.point(x0, y0);\n\t      }\n\t      function lineEnd() {\n\t        resample.point = point;\n\t        stream.lineEnd();\n\t      }\n\t      function ringStart() {\n\t        lineStart();\n\t        resample.point = ringPoint;\n\t        resample.lineEnd = ringEnd;\n\t      }\n\t      function ringPoint(λ, φ) {\n\t        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t        resample.point = linePoint;\n\t      }\n\t      function ringEnd() {\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n\t        resample.lineEnd = lineEnd;\n\t        lineEnd();\n\t      }\n\t      return resample;\n\t    }\n\t    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n\t      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n\t      if (d2 > 4 * δ2 && depth--) {\n\t        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n\t        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n\t          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n\t          stream.point(x2, y2);\n\t          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n\t        }\n\t      }\n\t    }\n\t    resample.precision = function(_) {\n\t      if (!arguments.length) return Math.sqrt(δ2);\n\t      maxDepth = (δ2 = _ * _) > 0 && 16;\n\t      return resample;\n\t    };\n\t    return resample;\n\t  }\n\t  d3.geo.path = function() {\n\t    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n\t    function path(object) {\n\t      if (object) {\n\t        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n\t        d3.geo.stream(object, cacheStream);\n\t      }\n\t      return contextStream.result();\n\t    }\n\t    path.area = function(object) {\n\t      d3_geo_pathAreaSum = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n\t      return d3_geo_pathAreaSum;\n\t    };\n\t    path.centroid = function(object) {\n\t      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n\t      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n\t    };\n\t    path.bounds = function(object) {\n\t      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n\t      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n\t      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n\t    };\n\t    path.projection = function(_) {\n\t      if (!arguments.length) return projection;\n\t      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n\t      return reset();\n\t    };\n\t    path.context = function(_) {\n\t      if (!arguments.length) return context;\n\t      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n\t      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t      return reset();\n\t    };\n\t    path.pointRadius = function(_) {\n\t      if (!arguments.length) return pointRadius;\n\t      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t      return path;\n\t    };\n\t    function reset() {\n\t      cacheStream = null;\n\t      return path;\n\t    }\n\t    return path.projection(d3.geo.albersUsa()).context(null);\n\t  };\n\t  function d3_geo_pathProjectStream(project) {\n\t    var resample = d3_geo_resample(function(x, y) {\n\t      return project([ x * d3_degrees, y * d3_degrees ]);\n\t    });\n\t    return function(stream) {\n\t      return d3_geo_projectionRadians(resample(stream));\n\t    };\n\t  }\n\t  d3.geo.transform = function(methods) {\n\t    return {\n\t      stream: function(stream) {\n\t        var transform = new d3_geo_transform(stream);\n\t        for (var k in methods) transform[k] = methods[k];\n\t        return transform;\n\t      }\n\t    };\n\t  };\n\t  function d3_geo_transform(stream) {\n\t    this.stream = stream;\n\t  }\n\t  d3_geo_transform.prototype = {\n\t    point: function(x, y) {\n\t      this.stream.point(x, y);\n\t    },\n\t    sphere: function() {\n\t      this.stream.sphere();\n\t    },\n\t    lineStart: function() {\n\t      this.stream.lineStart();\n\t    },\n\t    lineEnd: function() {\n\t      this.stream.lineEnd();\n\t    },\n\t    polygonStart: function() {\n\t      this.stream.polygonStart();\n\t    },\n\t    polygonEnd: function() {\n\t      this.stream.polygonEnd();\n\t    }\n\t  };\n\t  function d3_geo_transformPoint(stream, point) {\n\t    return {\n\t      point: point,\n\t      sphere: function() {\n\t        stream.sphere();\n\t      },\n\t      lineStart: function() {\n\t        stream.lineStart();\n\t      },\n\t      lineEnd: function() {\n\t        stream.lineEnd();\n\t      },\n\t      polygonStart: function() {\n\t        stream.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        stream.polygonEnd();\n\t      }\n\t    };\n\t  }\n\t  d3.geo.projection = d3_geo_projection;\n\t  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\t  function d3_geo_projection(project) {\n\t    return d3_geo_projectionMutator(function() {\n\t      return project;\n\t    })();\n\t  }\n\t  function d3_geo_projectionMutator(projectAt) {\n\t    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n\t      x = project(x, y);\n\t      return [ x[0] * k + δx, δy - x[1] * k ];\n\t    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n\t    function projection(point) {\n\t      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n\t      return [ point[0] * k + δx, δy - point[1] * k ];\n\t    }\n\t    function invert(point) {\n\t      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n\t      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n\t    }\n\t    projection.stream = function(output) {\n\t      if (stream) stream.valid = false;\n\t      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n\t      stream.valid = true;\n\t      return stream;\n\t    };\n\t    projection.clipAngle = function(_) {\n\t      if (!arguments.length) return clipAngle;\n\t      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n\t      return invalidate();\n\t    };\n\t    projection.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent;\n\t      clipExtent = _;\n\t      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n\t      return invalidate();\n\t    };\n\t    projection.scale = function(_) {\n\t      if (!arguments.length) return k;\n\t      k = +_;\n\t      return reset();\n\t    };\n\t    projection.translate = function(_) {\n\t      if (!arguments.length) return [ x, y ];\n\t      x = +_[0];\n\t      y = +_[1];\n\t      return reset();\n\t    };\n\t    projection.center = function(_) {\n\t      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n\t      λ = _[0] % 360 * d3_radians;\n\t      φ = _[1] % 360 * d3_radians;\n\t      return reset();\n\t    };\n\t    projection.rotate = function(_) {\n\t      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n\t      δλ = _[0] % 360 * d3_radians;\n\t      δφ = _[1] % 360 * d3_radians;\n\t      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n\t      return reset();\n\t    };\n\t    d3.rebind(projection, projectResample, \"precision\");\n\t    function reset() {\n\t      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n\t      var center = project(λ, φ);\n\t      δx = x - center[0] * k;\n\t      δy = y + center[1] * k;\n\t      return invalidate();\n\t    }\n\t    function invalidate() {\n\t      if (stream) stream.valid = false, stream = null;\n\t      return projection;\n\t    }\n\t    return function() {\n\t      project = projectAt.apply(this, arguments);\n\t      projection.invert = project.invert && invert;\n\t      return reset();\n\t    };\n\t  }\n\t  function d3_geo_projectionRadians(stream) {\n\t    return d3_geo_transformPoint(stream, function(x, y) {\n\t      stream.point(x * d3_radians, y * d3_radians);\n\t    });\n\t  }\n\t  function d3_geo_equirectangular(λ, φ) {\n\t    return [ λ, φ ];\n\t  }\n\t  (d3.geo.equirectangular = function() {\n\t    return d3_geo_projection(d3_geo_equirectangular);\n\t  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\t  d3.geo.rotation = function(rotate) {\n\t    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\t    function forward(coordinates) {\n\t      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    }\n\t    forward.invert = function(coordinates) {\n\t      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    };\n\t    return forward;\n\t  };\n\t  function d3_geo_identityRotation(λ, φ) {\n\t    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t  }\n\t  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\t  function d3_geo_rotation(δλ, δφ, δγ) {\n\t    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n\t  }\n\t  function d3_geo_forwardRotationλ(δλ) {\n\t    return function(λ, φ) {\n\t      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t    };\n\t  }\n\t  function d3_geo_rotationλ(δλ) {\n\t    var rotation = d3_geo_forwardRotationλ(δλ);\n\t    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n\t    return rotation;\n\t  }\n\t  function d3_geo_rotationφγ(δφ, δγ) {\n\t    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n\t    function rotation(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n\t      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n\t    }\n\t    rotation.invert = function(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n\t      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n\t    };\n\t    return rotation;\n\t  }\n\t  d3.geo.circle = function() {\n\t    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n\t    function circle() {\n\t      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n\t      interpolate(null, null, 1, {\n\t        point: function(x, y) {\n\t          ring.push(x = rotate(x, y));\n\t          x[0] *= d3_degrees, x[1] *= d3_degrees;\n\t        }\n\t      });\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ ring ]\n\t      };\n\t    }\n\t    circle.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return circle;\n\t    };\n\t    circle.angle = function(x) {\n\t      if (!arguments.length) return angle;\n\t      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n\t      return circle;\n\t    };\n\t    circle.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n\t      return circle;\n\t    };\n\t    return circle.angle(90);\n\t  };\n\t  function d3_geo_circleInterpolate(radius, precision) {\n\t    var cr = Math.cos(radius), sr = Math.sin(radius);\n\t    return function(from, to, direction, listener) {\n\t      var step = direction * precision;\n\t      if (from != null) {\n\t        from = d3_geo_circleAngle(cr, from);\n\t        to = d3_geo_circleAngle(cr, to);\n\t        if (direction > 0 ? from < to : from > to) from += direction * τ;\n\t      } else {\n\t        from = radius + direction * τ;\n\t        to = radius - .5 * step;\n\t      }\n\t      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n\t        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_circleAngle(cr, point) {\n\t    var a = d3_geo_cartesian(point);\n\t    a[0] -= cr;\n\t    d3_geo_cartesianNormalize(a);\n\t    var angle = d3_acos(-a[1]);\n\t    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n\t  }\n\t  d3.geo.distance = function(a, b) {\n\t    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n\t    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n\t  };\n\t  d3.geo.graticule = function() {\n\t    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n\t    function graticule() {\n\t      return {\n\t        type: \"MultiLineString\",\n\t        coordinates: lines()\n\t      };\n\t    }\n\t    function lines() {\n\t      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n\t        return abs(x % DX) > ε;\n\t      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n\t        return abs(y % DY) > ε;\n\t      }).map(y));\n\t    }\n\t    graticule.lines = function() {\n\t      return lines().map(function(coordinates) {\n\t        return {\n\t          type: \"LineString\",\n\t          coordinates: coordinates\n\t        };\n\t      });\n\t    };\n\t    graticule.outline = function() {\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n\t      };\n\t    };\n\t    graticule.extent = function(_) {\n\t      if (!arguments.length) return graticule.minorExtent();\n\t      return graticule.majorExtent(_).minorExtent(_);\n\t    };\n\t    graticule.majorExtent = function(_) {\n\t      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n\t      X0 = +_[0][0], X1 = +_[1][0];\n\t      Y0 = +_[0][1], Y1 = +_[1][1];\n\t      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.minorExtent = function(_) {\n\t      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t      x0 = +_[0][0], x1 = +_[1][0];\n\t      y0 = +_[0][1], y1 = +_[1][1];\n\t      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.step = function(_) {\n\t      if (!arguments.length) return graticule.minorStep();\n\t      return graticule.majorStep(_).minorStep(_);\n\t    };\n\t    graticule.majorStep = function(_) {\n\t      if (!arguments.length) return [ DX, DY ];\n\t      DX = +_[0], DY = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.minorStep = function(_) {\n\t      if (!arguments.length) return [ dx, dy ];\n\t      dx = +_[0], dy = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      precision = +_;\n\t      x = d3_geo_graticuleX(y0, y1, 90);\n\t      y = d3_geo_graticuleY(x0, x1, precision);\n\t      X = d3_geo_graticuleX(Y0, Y1, 90);\n\t      Y = d3_geo_graticuleY(X0, X1, precision);\n\t      return graticule;\n\t    };\n\t    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n\t  };\n\t  function d3_geo_graticuleX(y0, y1, dy) {\n\t    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n\t    return function(x) {\n\t      return y.map(function(y) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_geo_graticuleY(x0, x1, dx) {\n\t    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n\t    return function(y) {\n\t      return x.map(function(x) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_source(d) {\n\t    return d.source;\n\t  }\n\t  function d3_target(d) {\n\t    return d.target;\n\t  }\n\t  d3.geo.greatArc = function() {\n\t    var source = d3_source, source_, target = d3_target, target_;\n\t    function greatArc() {\n\t      return {\n\t        type: \"LineString\",\n\t        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n\t      };\n\t    }\n\t    greatArc.distance = function() {\n\t      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n\t    };\n\t    greatArc.source = function(_) {\n\t      if (!arguments.length) return source;\n\t      source = _, source_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.target = function(_) {\n\t      if (!arguments.length) return target;\n\t      target = _, target_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.precision = function() {\n\t      return arguments.length ? greatArc : 0;\n\t    };\n\t    return greatArc;\n\t  };\n\t  d3.geo.interpolate = function(source, target) {\n\t    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n\t  };\n\t  function d3_geo_interpolate(x0, y0, x1, y1) {\n\t    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n\t    var interpolate = d ? function(t) {\n\t      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n\t      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n\t    } : function() {\n\t      return [ x0 * d3_degrees, y0 * d3_degrees ];\n\t    };\n\t    interpolate.distance = d;\n\t    return interpolate;\n\t  }\n\t  d3.geo.length = function(object) {\n\t    d3_geo_lengthSum = 0;\n\t    d3.geo.stream(object, d3_geo_length);\n\t    return d3_geo_lengthSum;\n\t  };\n\t  var d3_geo_lengthSum;\n\t  var d3_geo_length = {\n\t    sphere: d3_noop,\n\t    point: d3_noop,\n\t    lineStart: d3_geo_lengthLineStart,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_lengthLineStart() {\n\t    var λ0, sinφ0, cosφ0;\n\t    d3_geo_length.point = function(λ, φ) {\n\t      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n\t      d3_geo_length.point = nextPoint;\n\t    };\n\t    d3_geo_length.lineEnd = function() {\n\t      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n\t      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n\t      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n\t    }\n\t  }\n\t  function d3_geo_azimuthal(scale, angle) {\n\t    function azimuthal(λ, φ) {\n\t      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n\t      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n\t    }\n\t    azimuthal.invert = function(x, y) {\n\t      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n\t      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n\t    };\n\t    return azimuthal;\n\t  }\n\t  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return Math.sqrt(2 / (1 + cosλcosφ));\n\t  }, function(ρ) {\n\t    return 2 * Math.asin(ρ / 2);\n\t  });\n\t  (d3.geo.azimuthalEqualArea = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n\t  }).raw = d3_geo_azimuthalEqualArea;\n\t  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n\t    var c = Math.acos(cosλcosφ);\n\t    return c && c / Math.sin(c);\n\t  }, d3_identity);\n\t  (d3.geo.azimuthalEquidistant = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n\t  }).raw = d3_geo_azimuthalEquidistant;\n\t  function d3_geo_conicConformal(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), t = function(φ) {\n\t      return Math.tan(π / 4 + φ / 2);\n\t    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n\t    if (!n) return d3_geo_mercator;\n\t    function forward(λ, φ) {\n\t      if (F > 0) {\n\t        if (φ < -halfπ + ε) φ = -halfπ + ε;\n\t      } else {\n\t        if (φ > halfπ - ε) φ = halfπ - ε;\n\t      }\n\t      var ρ = F / Math.pow(t(φ), n);\n\t      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n\t      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicConformal = function() {\n\t    return d3_geo_conic(d3_geo_conicConformal);\n\t  }).raw = d3_geo_conicConformal;\n\t  function d3_geo_conicEquidistant(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n\t    if (abs(n) < ε) return d3_geo_equirectangular;\n\t    function forward(λ, φ) {\n\t      var ρ = G - φ;\n\t      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = G - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEquidistant = function() {\n\t    return d3_geo_conic(d3_geo_conicEquidistant);\n\t  }).raw = d3_geo_conicEquidistant;\n\t  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / cosλcosφ;\n\t  }, Math.atan);\n\t  (d3.geo.gnomonic = function() {\n\t    return d3_geo_projection(d3_geo_gnomonic);\n\t  }).raw = d3_geo_gnomonic;\n\t  function d3_geo_mercator(λ, φ) {\n\t    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n\t  }\n\t  d3_geo_mercator.invert = function(x, y) {\n\t    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n\t  };\n\t  function d3_geo_mercatorProjection(project) {\n\t    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n\t    m.scale = function() {\n\t      var v = scale.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.translate = function() {\n\t      var v = translate.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.clipExtent = function(_) {\n\t      var v = clipExtent.apply(m, arguments);\n\t      if (v === m) {\n\t        if (clipAuto = _ == null) {\n\t          var k = π * scale(), t = translate();\n\t          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n\t        }\n\t      } else if (clipAuto) {\n\t        v = null;\n\t      }\n\t      return v;\n\t    };\n\t    return m.clipExtent(null);\n\t  }\n\t  (d3.geo.mercator = function() {\n\t    return d3_geo_mercatorProjection(d3_geo_mercator);\n\t  }).raw = d3_geo_mercator;\n\t  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n\t    return 1;\n\t  }, Math.asin);\n\t  (d3.geo.orthographic = function() {\n\t    return d3_geo_projection(d3_geo_orthographic);\n\t  }).raw = d3_geo_orthographic;\n\t  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / (1 + cosλcosφ);\n\t  }, function(ρ) {\n\t    return 2 * Math.atan(ρ);\n\t  });\n\t  (d3.geo.stereographic = function() {\n\t    return d3_geo_projection(d3_geo_stereographic);\n\t  }).raw = d3_geo_stereographic;\n\t  function d3_geo_transverseMercator(λ, φ) {\n\t    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n\t  }\n\t  d3_geo_transverseMercator.invert = function(x, y) {\n\t    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n\t  };\n\t  (d3.geo.transverseMercator = function() {\n\t    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n\t    projection.center = function(_) {\n\t      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n\t    };\n\t    projection.rotate = function(_) {\n\t      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n\t      [ _[0], _[1], _[2] - 90 ]);\n\t    };\n\t    return rotate([ 0, 0, 90 ]);\n\t  }).raw = d3_geo_transverseMercator;\n\t  d3.geom = {};\n\t  function d3_geom_pointX(d) {\n\t    return d[0];\n\t  }\n\t  function d3_geom_pointY(d) {\n\t    return d[1];\n\t  }\n\t  d3.geom.hull = function(vertices) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY;\n\t    if (arguments.length) return hull(vertices);\n\t    function hull(data) {\n\t      if (data.length < 3) return [];\n\t      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n\t      for (i = 0; i < n; i++) {\n\t        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n\t      }\n\t      points.sort(d3_geom_hullOrder);\n\t      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n\t      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n\t      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n\t      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n\t      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n\t      return polygon;\n\t    }\n\t    hull.x = function(_) {\n\t      return arguments.length ? (x = _, hull) : x;\n\t    };\n\t    hull.y = function(_) {\n\t      return arguments.length ? (y = _, hull) : y;\n\t    };\n\t    return hull;\n\t  };\n\t  function d3_geom_hullUpper(points) {\n\t    var n = points.length, hull = [ 0, 1 ], hs = 2;\n\t    for (var i = 2; i < n; i++) {\n\t      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n\t      hull[hs++] = i;\n\t    }\n\t    return hull.slice(0, hs);\n\t  }\n\t  function d3_geom_hullOrder(a, b) {\n\t    return a[0] - b[0] || a[1] - b[1];\n\t  }\n\t  d3.geom.polygon = function(coordinates) {\n\t    d3_subclass(coordinates, d3_geom_polygonPrototype);\n\t    return coordinates;\n\t  };\n\t  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\t  d3_geom_polygonPrototype.area = function() {\n\t    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      area += a[1] * b[0] - a[0] * b[1];\n\t    }\n\t    return area * .5;\n\t  };\n\t  d3_geom_polygonPrototype.centroid = function(k) {\n\t    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n\t    if (!arguments.length) k = -1 / (6 * this.area());\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      c = a[0] * b[1] - b[0] * a[1];\n\t      x += (a[0] + b[0]) * c;\n\t      y += (a[1] + b[1]) * c;\n\t    }\n\t    return [ x * k, y * k ];\n\t  };\n\t  d3_geom_polygonPrototype.clip = function(subject) {\n\t    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n\t    while (++i < n) {\n\t      input = subject.slice();\n\t      subject.length = 0;\n\t      b = this[i];\n\t      c = input[(m = input.length - closed) - 1];\n\t      j = -1;\n\t      while (++j < m) {\n\t        d = input[j];\n\t        if (d3_geom_polygonInside(d, a, b)) {\n\t          if (!d3_geom_polygonInside(c, a, b)) {\n\t            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t          }\n\t          subject.push(d);\n\t        } else if (d3_geom_polygonInside(c, a, b)) {\n\t          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t        }\n\t        c = d;\n\t      }\n\t      if (closed) subject.push(subject[0]);\n\t      a = b;\n\t    }\n\t    return subject;\n\t  };\n\t  function d3_geom_polygonInside(p, a, b) {\n\t    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n\t  }\n\t  function d3_geom_polygonIntersect(c, d, a, b) {\n\t    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n\t    return [ x1 + ua * x21, y1 + ua * y21 ];\n\t  }\n\t  function d3_geom_polygonClosed(coordinates) {\n\t    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n\t    return !(a[0] - b[0] || a[1] - b[1]);\n\t  }\n\t  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n\t  function d3_geom_voronoiBeach() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.edge = this.site = this.circle = null;\n\t  }\n\t  function d3_geom_voronoiCreateBeach(site) {\n\t    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n\t    beach.site = site;\n\t    return beach;\n\t  }\n\t  function d3_geom_voronoiDetachBeach(beach) {\n\t    d3_geom_voronoiDetachCircle(beach);\n\t    d3_geom_voronoiBeaches.remove(beach);\n\t    d3_geom_voronoiBeachPool.push(beach);\n\t    d3_geom_voronoiRedBlackNode(beach);\n\t  }\n\t  function d3_geom_voronoiRemoveBeach(beach) {\n\t    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n\t      x: x,\n\t      y: y\n\t    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n\t    d3_geom_voronoiDetachBeach(beach);\n\t    var lArc = previous;\n\t    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n\t      previous = lArc.P;\n\t      disappearing.unshift(lArc);\n\t      d3_geom_voronoiDetachBeach(lArc);\n\t      lArc = previous;\n\t    }\n\t    disappearing.unshift(lArc);\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    var rArc = next;\n\t    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n\t      next = rArc.N;\n\t      disappearing.push(rArc);\n\t      d3_geom_voronoiDetachBeach(rArc);\n\t      rArc = next;\n\t    }\n\t    disappearing.push(rArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var nArcs = disappearing.length, iArc;\n\t    for (iArc = 1; iArc < nArcs; ++iArc) {\n\t      rArc = disappearing[iArc];\n\t      lArc = disappearing[iArc - 1];\n\t      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t    }\n\t    lArc = disappearing[0];\n\t    rArc = disappearing[nArcs - 1];\n\t    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiAddBeach(site) {\n\t    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n\t    while (node) {\n\t      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n\t      if (dxl > ε) node = node.L; else {\n\t        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\t        if (dxr > ε) {\n\t          if (!node.R) {\n\t            lArc = node;\n\t            break;\n\t          }\n\t          node = node.R;\n\t        } else {\n\t          if (dxl > -ε) {\n\t            lArc = node.P;\n\t            rArc = node;\n\t          } else if (dxr > -ε) {\n\t            lArc = node;\n\t            rArc = node.N;\n\t          } else {\n\t            lArc = rArc = node;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    var newArc = d3_geom_voronoiCreateBeach(site);\n\t    d3_geom_voronoiBeaches.insert(lArc, newArc);\n\t    if (!lArc && !rArc) return;\n\t    if (lArc === rArc) {\n\t      d3_geom_voronoiDetachCircle(lArc);\n\t      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n\t      d3_geom_voronoiBeaches.insert(newArc, rArc);\n\t      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      d3_geom_voronoiAttachCircle(lArc);\n\t      d3_geom_voronoiAttachCircle(rArc);\n\t      return;\n\t    }\n\t    if (!rArc) {\n\t      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      return;\n\t    }\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n\t      x: (cy * hb - by * hc) / d + ax,\n\t      y: (bx * hc - cx * hb) / d + ay\n\t    };\n\t    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n\t    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n\t    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n\t    if (!pby2) return rfocx;\n\t    var lArc = arc.P;\n\t    if (!lArc) return -Infinity;\n\t    site = lArc.site;\n\t    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n\t    if (!plby2) return lfocx;\n\t    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n\t    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t    return (rfocx + lfocx) / 2;\n\t  }\n\t  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n\t    var rArc = arc.N;\n\t    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n\t    var site = arc.site;\n\t    return site.y === directrix ? site.x : Infinity;\n\t  }\n\t  function d3_geom_voronoiCell(site) {\n\t    this.site = site;\n\t    this.edges = [];\n\t  }\n\t  d3_geom_voronoiCell.prototype.prepare = function() {\n\t    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n\t    while (iHalfEdge--) {\n\t      edge = halfEdges[iHalfEdge].edge;\n\t      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n\t    }\n\t    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n\t    return halfEdges.length;\n\t  };\n\t  function d3_geom_voronoiCloseCells(extent) {\n\t    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n\t    while (iCell--) {\n\t      cell = cells[iCell];\n\t      if (!cell || !cell.prepare()) continue;\n\t      halfEdges = cell.edges;\n\t      nHalfEdges = halfEdges.length;\n\t      iHalfEdge = 0;\n\t      while (iHalfEdge < nHalfEdges) {\n\t        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n\t        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\t        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n\t          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n\t            x: x0,\n\t            y: abs(x2 - x0) < ε ? y2 : y1\n\t          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n\t            x: abs(y2 - y1) < ε ? x2 : x1,\n\t            y: y1\n\t          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n\t            x: x1,\n\t            y: abs(x2 - x1) < ε ? y2 : y0\n\t          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n\t            x: abs(y2 - y0) < ε ? x2 : x0,\n\t            y: y0\n\t          } : null), cell.site, null));\n\t          ++nHalfEdges;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n\t    return b.angle - a.angle;\n\t  }\n\t  function d3_geom_voronoiCircle() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.x = this.y = this.arc = this.site = this.cy = null;\n\t  }\n\t  function d3_geom_voronoiAttachCircle(arc) {\n\t    var lArc = arc.P, rArc = arc.N;\n\t    if (!lArc || !rArc) return;\n\t    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n\t    if (lSite === rSite) return;\n\t    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n\t    var d = 2 * (ax * cy - ay * cx);\n\t    if (d >= -ε2) return;\n\t    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n\t    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n\t    circle.arc = arc;\n\t    circle.site = cSite;\n\t    circle.x = x + bx;\n\t    circle.y = cy + Math.sqrt(x * x + y * y);\n\t    circle.cy = cy;\n\t    arc.circle = circle;\n\t    var before = null, node = d3_geom_voronoiCircles._;\n\t    while (node) {\n\t      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n\t        if (node.L) node = node.L; else {\n\t          before = node.P;\n\t          break;\n\t        }\n\t      } else {\n\t        if (node.R) node = node.R; else {\n\t          before = node;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    d3_geom_voronoiCircles.insert(before, circle);\n\t    if (!before) d3_geom_voronoiFirstCircle = circle;\n\t  }\n\t  function d3_geom_voronoiDetachCircle(arc) {\n\t    var circle = arc.circle;\n\t    if (circle) {\n\t      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n\t      d3_geom_voronoiCircles.remove(circle);\n\t      d3_geom_voronoiCirclePool.push(circle);\n\t      d3_geom_voronoiRedBlackNode(circle);\n\t      arc.circle = null;\n\t    }\n\t  }\n\t  function d3_geom_voronoiClipEdges(extent) {\n\t    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n\t    while (i--) {\n\t      e = edges[i];\n\t      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n\t        e.a = e.b = null;\n\t        edges.splice(i, 1);\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiConnectEdge(edge, extent) {\n\t    var vb = edge.b;\n\t    if (vb) return true;\n\t    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n\t    if (ry === ly) {\n\t      if (fx < x0 || fx >= x1) return;\n\t      if (lx > rx) {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y0\n\t        }; else if (va.y >= y1) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y1\n\t        };\n\t      } else {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y1\n\t        }; else if (va.y < y0) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y0\n\t        };\n\t      }\n\t    } else {\n\t      fm = (lx - rx) / (ry - ly);\n\t      fb = fy - fm * fx;\n\t      if (fm < -1 || fm > 1) {\n\t        if (lx > rx) {\n\t          if (!va) va = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          }; else if (va.y >= y1) return;\n\t          vb = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          }; else if (va.y < y0) return;\n\t          vb = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          };\n\t        }\n\t      } else {\n\t        if (ly < ry) {\n\t          if (!va) va = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          }; else if (va.x >= x1) return;\n\t          vb = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          }; else if (va.x < x0) return;\n\t          vb = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          };\n\t        }\n\t      }\n\t    }\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    return true;\n\t  }\n\t  function d3_geom_voronoiEdge(lSite, rSite) {\n\t    this.l = lSite;\n\t    this.r = rSite;\n\t    this.a = this.b = null;\n\t  }\n\t  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n\t    d3_geom_voronoiEdges.push(edge);\n\t    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n\t    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n\t    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n\t    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, null);\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    d3_geom_voronoiEdges.push(edge);\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n\t    if (!edge.a && !edge.b) {\n\t      edge.a = vertex;\n\t      edge.l = lSite;\n\t      edge.r = rSite;\n\t    } else if (edge.l === rSite) {\n\t      edge.b = vertex;\n\t    } else {\n\t      edge.a = vertex;\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n\t    var va = edge.a, vb = edge.b;\n\t    this.edge = edge;\n\t    this.site = lSite;\n\t    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n\t  }\n\t  d3_geom_voronoiHalfEdge.prototype = {\n\t    start: function() {\n\t      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n\t    },\n\t    end: function() {\n\t      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackTree() {\n\t    this._ = null;\n\t  }\n\t  function d3_geom_voronoiRedBlackNode(node) {\n\t    node.U = node.C = node.L = node.R = node.P = node.N = null;\n\t  }\n\t  d3_geom_voronoiRedBlackTree.prototype = {\n\t    insert: function(after, node) {\n\t      var parent, grandpa, uncle;\n\t      if (after) {\n\t        node.P = after;\n\t        node.N = after.N;\n\t        if (after.N) after.N.P = node;\n\t        after.N = node;\n\t        if (after.R) {\n\t          after = after.R;\n\t          while (after.L) after = after.L;\n\t          after.L = node;\n\t        } else {\n\t          after.R = node;\n\t        }\n\t        parent = after;\n\t      } else if (this._) {\n\t        after = d3_geom_voronoiRedBlackFirst(this._);\n\t        node.P = null;\n\t        node.N = after;\n\t        after.P = after.L = node;\n\t        parent = after;\n\t      } else {\n\t        node.P = node.N = null;\n\t        this._ = node;\n\t        parent = null;\n\t      }\n\t      node.L = node.R = null;\n\t      node.U = parent;\n\t      node.C = true;\n\t      after = node;\n\t      while (parent && parent.C) {\n\t        grandpa = parent.U;\n\t        if (parent === grandpa.L) {\n\t          uncle = grandpa.R;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.R) {\n\t              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n\t          }\n\t        } else {\n\t          uncle = grandpa.L;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.L) {\n\t              d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n\t          }\n\t        }\n\t        parent = after.U;\n\t      }\n\t      this._.C = false;\n\t    },\n\t    remove: function(node) {\n\t      if (node.N) node.N.P = node.P;\n\t      if (node.P) node.P.N = node.N;\n\t      node.N = node.P = null;\n\t      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n\t      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n\t      if (parent) {\n\t        if (parent.L === node) parent.L = next; else parent.R = next;\n\t      } else {\n\t        this._ = next;\n\t      }\n\t      if (left && right) {\n\t        red = next.C;\n\t        next.C = node.C;\n\t        next.L = left;\n\t        left.U = next;\n\t        if (next !== right) {\n\t          parent = next.U;\n\t          next.U = node.U;\n\t          node = next.R;\n\t          parent.L = node;\n\t          next.R = right;\n\t          right.U = next;\n\t        } else {\n\t          next.U = parent;\n\t          parent = next;\n\t          node = next.R;\n\t        }\n\t      } else {\n\t        red = node.C;\n\t        node = next;\n\t      }\n\t      if (node) node.U = parent;\n\t      if (red) return;\n\t      if (node && node.C) {\n\t        node.C = false;\n\t        return;\n\t      }\n\t      do {\n\t        if (node === this._) break;\n\t        if (node === parent.L) {\n\t          sibling = parent.R;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            sibling = parent.R;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.R || !sibling.R.C) {\n\t              sibling.L.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n\t              sibling = parent.R;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.R.C = false;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        } else {\n\t          sibling = parent.L;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            sibling = parent.L;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.L || !sibling.L.C) {\n\t              sibling.R.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n\t              sibling = parent.L;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.L.C = false;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        }\n\t        sibling.C = true;\n\t        node = parent;\n\t        parent = parent.U;\n\t      } while (!node.C);\n\t      if (node) node.C = false;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n\t    var p = node, q = node.R, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.R = q.L;\n\t    if (p.R) p.R.U = p;\n\t    q.L = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n\t    var p = node, q = node.L, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.L = q.R;\n\t    if (p.L) p.L.U = p;\n\t    q.R = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackFirst(node) {\n\t    while (node.L) node = node.L;\n\t    return node;\n\t  }\n\t  function d3_geom_voronoi(sites, bbox) {\n\t    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n\t    d3_geom_voronoiEdges = [];\n\t    d3_geom_voronoiCells = new Array(sites.length);\n\t    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n\t    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\t    while (true) {\n\t      circle = d3_geom_voronoiFirstCircle;\n\t      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n\t        if (site.x !== x0 || site.y !== y0) {\n\t          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n\t          d3_geom_voronoiAddBeach(site);\n\t          x0 = site.x, y0 = site.y;\n\t        }\n\t        site = sites.pop();\n\t      } else if (circle) {\n\t        d3_geom_voronoiRemoveBeach(circle.arc);\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n\t    var diagram = {\n\t      cells: d3_geom_voronoiCells,\n\t      edges: d3_geom_voronoiEdges\n\t    };\n\t    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n\t    return diagram;\n\t  }\n\t  function d3_geom_voronoiVertexOrder(a, b) {\n\t    return b.y - a.y || b.x - a.x;\n\t  }\n\t  d3.geom.voronoi = function(points) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n\t    if (points) return voronoi(points);\n\t    function voronoi(data) {\n\t      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n\t      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n\t        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n\t          var s = e.start();\n\t          return [ s.x, s.y ];\n\t        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n\t        polygon.point = data[i];\n\t      });\n\t      return polygons;\n\t    }\n\t    function sites(data) {\n\t      return data.map(function(d, i) {\n\t        return {\n\t          x: Math.round(fx(d, i) / ε) * ε,\n\t          y: Math.round(fy(d, i) / ε) * ε,\n\t          i: i\n\t        };\n\t      });\n\t    }\n\t    voronoi.links = function(data) {\n\t      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n\t        return edge.l && edge.r;\n\t      }).map(function(edge) {\n\t        return {\n\t          source: data[edge.l.i],\n\t          target: data[edge.r.i]\n\t        };\n\t      });\n\t    };\n\t    voronoi.triangles = function(data) {\n\t      var triangles = [];\n\t      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n\t        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n\t        while (++j < m) {\n\t          e0 = e1;\n\t          s0 = s1;\n\t          e1 = edges[j].edge;\n\t          s1 = e1.l === site ? e1.r : e1.l;\n\t          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n\t            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n\t          }\n\t        }\n\t      });\n\t      return triangles;\n\t    };\n\t    voronoi.x = function(_) {\n\t      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n\t    };\n\t    voronoi.y = function(_) {\n\t      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n\t    };\n\t    voronoi.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n\t      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n\t      return voronoi;\n\t    };\n\t    voronoi.size = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n\t      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n\t    };\n\t    return voronoi;\n\t  };\n\t  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n\t  function d3_geom_voronoiTriangleArea(a, b, c) {\n\t    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n\t  }\n\t  d3.geom.delaunay = function(vertices) {\n\t    return d3.geom.voronoi().triangles(vertices);\n\t  };\n\t  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n\t    if (compat = arguments.length) {\n\t      x = d3_geom_quadtreeCompatX;\n\t      y = d3_geom_quadtreeCompatY;\n\t      if (compat === 3) {\n\t        y2 = y1;\n\t        x2 = x1;\n\t        y1 = x1 = 0;\n\t      }\n\t      return quadtree(points);\n\t    }\n\t    function quadtree(data) {\n\t      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n\t      if (x1 != null) {\n\t        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n\t      } else {\n\t        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n\t        xs = [], ys = [];\n\t        n = data.length;\n\t        if (compat) for (i = 0; i < n; ++i) {\n\t          d = data[i];\n\t          if (d.x < x1_) x1_ = d.x;\n\t          if (d.y < y1_) y1_ = d.y;\n\t          if (d.x > x2_) x2_ = d.x;\n\t          if (d.y > y2_) y2_ = d.y;\n\t          xs.push(d.x);\n\t          ys.push(d.y);\n\t        } else for (i = 0; i < n; ++i) {\n\t          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n\t          if (x_ < x1_) x1_ = x_;\n\t          if (y_ < y1_) y1_ = y_;\n\t          if (x_ > x2_) x2_ = x_;\n\t          if (y_ > y2_) y2_ = y_;\n\t          xs.push(x_);\n\t          ys.push(y_);\n\t        }\n\t      }\n\t      var dx = x2_ - x1_, dy = y2_ - y1_;\n\t      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n\t      function insert(n, d, x, y, x1, y1, x2, y2) {\n\t        if (isNaN(x) || isNaN(y)) return;\n\t        if (n.leaf) {\n\t          var nx = n.x, ny = n.y;\n\t          if (nx != null) {\n\t            if (abs(nx - x) + abs(ny - y) < .01) {\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            } else {\n\t              var nPoint = n.point;\n\t              n.x = n.y = n.point = null;\n\t              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            }\n\t          } else {\n\t            n.x = x, n.y = y, n.point = d;\n\t          }\n\t        } else {\n\t          insertChild(n, d, x, y, x1, y1, x2, y2);\n\t        }\n\t      }\n\t      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n\t        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n\t        n.leaf = false;\n\t        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n\t        if (right) x1 = xm; else x2 = xm;\n\t        if (below) y1 = ym; else y2 = ym;\n\t        insert(n, d, x, y, x1, y1, x2, y2);\n\t      }\n\t      var root = d3_geom_quadtreeNode();\n\t      root.add = function(d) {\n\t        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n\t      };\n\t      root.visit = function(f) {\n\t        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n\t      };\n\t      root.find = function(point) {\n\t        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n\t      };\n\t      i = -1;\n\t      if (x1 == null) {\n\t        while (++i < n) {\n\t          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n\t        }\n\t        --i;\n\t      } else data.forEach(root.add);\n\t      xs = ys = data = d = null;\n\t      return root;\n\t    }\n\t    quadtree.x = function(_) {\n\t      return arguments.length ? (x = _, quadtree) : x;\n\t    };\n\t    quadtree.y = function(_) {\n\t      return arguments.length ? (y = _, quadtree) : y;\n\t    };\n\t    quadtree.extent = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n\t      y2 = +_[1][1];\n\t      return quadtree;\n\t    };\n\t    quadtree.size = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n\t      return quadtree;\n\t    };\n\t    return quadtree;\n\t  };\n\t  function d3_geom_quadtreeCompatX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_geom_quadtreeCompatY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_geom_quadtreeNode() {\n\t    return {\n\t      leaf: true,\n\t      nodes: [],\n\t      point: null,\n\t      x: null,\n\t      y: null\n\t    };\n\t  }\n\t  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n\t    if (!f(node, x1, y1, x2, y2)) {\n\t      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n\t      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n\t      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n\t      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n\t      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n\t    }\n\t  }\n\t  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n\t    var minDistance2 = Infinity, closestPoint;\n\t    (function find(node, x1, y1, x2, y2) {\n\t      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\t      if (point = node.point) {\n\t        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n\t        if (distance2 < minDistance2) {\n\t          var distance = Math.sqrt(minDistance2 = distance2);\n\t          x0 = x - distance, y0 = y - distance;\n\t          x3 = x + distance, y3 = y + distance;\n\t          closestPoint = point;\n\t        }\n\t      }\n\t      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n\t      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n\t        if (node = children[i & 3]) switch (i & 3) {\n\t         case 0:\n\t          find(node, x1, y1, xm, ym);\n\t          break;\n\t\n\t         case 1:\n\t          find(node, xm, y1, x2, ym);\n\t          break;\n\t\n\t         case 2:\n\t          find(node, x1, ym, xm, y2);\n\t          break;\n\t\n\t         case 3:\n\t          find(node, xm, ym, x2, y2);\n\t          break;\n\t        }\n\t      }\n\t    })(root, x0, y0, x3, y3);\n\t    return closestPoint;\n\t  }\n\t  d3.interpolateRgb = d3_interpolateRgb;\n\t  function d3_interpolateRgb(a, b) {\n\t    a = d3.rgb(a);\n\t    b = d3.rgb(b);\n\t    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n\t    return function(t) {\n\t      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n\t    };\n\t  }\n\t  d3.interpolateObject = d3_interpolateObject;\n\t  function d3_interpolateObject(a, b) {\n\t    var i = {}, c = {}, k;\n\t    for (k in a) {\n\t      if (k in b) {\n\t        i[k] = d3_interpolate(a[k], b[k]);\n\t      } else {\n\t        c[k] = a[k];\n\t      }\n\t    }\n\t    for (k in b) {\n\t      if (!(k in a)) {\n\t        c[k] = b[k];\n\t      }\n\t    }\n\t    return function(t) {\n\t      for (k in i) c[k] = i[k](t);\n\t      return c;\n\t    };\n\t  }\n\t  d3.interpolateNumber = d3_interpolateNumber;\n\t  function d3_interpolateNumber(a, b) {\n\t    a = +a, b = +b;\n\t    return function(t) {\n\t      return a * (1 - t) + b * t;\n\t    };\n\t  }\n\t  d3.interpolateString = d3_interpolateString;\n\t  function d3_interpolateString(a, b) {\n\t    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n\t    a = a + \"\", b = b + \"\";\n\t    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n\t      if ((bs = bm.index) > bi) {\n\t        bs = b.slice(bi, bs);\n\t        if (s[i]) s[i] += bs; else s[++i] = bs;\n\t      }\n\t      if ((am = am[0]) === (bm = bm[0])) {\n\t        if (s[i]) s[i] += bm; else s[++i] = bm;\n\t      } else {\n\t        s[++i] = null;\n\t        q.push({\n\t          i: i,\n\t          x: d3_interpolateNumber(am, bm)\n\t        });\n\t      }\n\t      bi = d3_interpolate_numberB.lastIndex;\n\t    }\n\t    if (bi < b.length) {\n\t      bs = b.slice(bi);\n\t      if (s[i]) s[i] += bs; else s[++i] = bs;\n\t    }\n\t    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n\t      return b(t) + \"\";\n\t    }) : function() {\n\t      return b;\n\t    } : (b = q.length, function(t) {\n\t      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    });\n\t  }\n\t  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n\t  d3.interpolate = d3_interpolate;\n\t  function d3_interpolate(a, b) {\n\t    var i = d3.interpolators.length, f;\n\t    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n\t    return f;\n\t  }\n\t  d3.interpolators = [ function(a, b) {\n\t    var t = typeof b;\n\t    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n\t  } ];\n\t  d3.interpolateArray = d3_interpolateArray;\n\t  function d3_interpolateArray(a, b) {\n\t    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n\t    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n\t    for (;i < na; ++i) c[i] = a[i];\n\t    for (;i < nb; ++i) c[i] = b[i];\n\t    return function(t) {\n\t      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n\t      return c;\n\t    };\n\t  }\n\t  var d3_ease_default = function() {\n\t    return d3_identity;\n\t  };\n\t  var d3_ease = d3.map({\n\t    linear: d3_ease_default,\n\t    poly: d3_ease_poly,\n\t    quad: function() {\n\t      return d3_ease_quad;\n\t    },\n\t    cubic: function() {\n\t      return d3_ease_cubic;\n\t    },\n\t    sin: function() {\n\t      return d3_ease_sin;\n\t    },\n\t    exp: function() {\n\t      return d3_ease_exp;\n\t    },\n\t    circle: function() {\n\t      return d3_ease_circle;\n\t    },\n\t    elastic: d3_ease_elastic,\n\t    back: d3_ease_back,\n\t    bounce: function() {\n\t      return d3_ease_bounce;\n\t    }\n\t  });\n\t  var d3_ease_mode = d3.map({\n\t    \"in\": d3_identity,\n\t    out: d3_ease_reverse,\n\t    \"in-out\": d3_ease_reflect,\n\t    \"out-in\": function(f) {\n\t      return d3_ease_reflect(d3_ease_reverse(f));\n\t    }\n\t  });\n\t  d3.ease = function(name) {\n\t    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n\t    t = d3_ease.get(t) || d3_ease_default;\n\t    m = d3_ease_mode.get(m) || d3_identity;\n\t    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n\t  };\n\t  function d3_ease_clamp(f) {\n\t    return function(t) {\n\t      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n\t    };\n\t  }\n\t  function d3_ease_reverse(f) {\n\t    return function(t) {\n\t      return 1 - f(1 - t);\n\t    };\n\t  }\n\t  function d3_ease_reflect(f) {\n\t    return function(t) {\n\t      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n\t    };\n\t  }\n\t  function d3_ease_quad(t) {\n\t    return t * t;\n\t  }\n\t  function d3_ease_cubic(t) {\n\t    return t * t * t;\n\t  }\n\t  function d3_ease_cubicInOut(t) {\n\t    if (t <= 0) return 0;\n\t    if (t >= 1) return 1;\n\t    var t2 = t * t, t3 = t2 * t;\n\t    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n\t  }\n\t  function d3_ease_poly(e) {\n\t    return function(t) {\n\t      return Math.pow(t, e);\n\t    };\n\t  }\n\t  function d3_ease_sin(t) {\n\t    return 1 - Math.cos(t * halfπ);\n\t  }\n\t  function d3_ease_exp(t) {\n\t    return Math.pow(2, 10 * (t - 1));\n\t  }\n\t  function d3_ease_circle(t) {\n\t    return 1 - Math.sqrt(1 - t * t);\n\t  }\n\t  function d3_ease_elastic(a, p) {\n\t    var s;\n\t    if (arguments.length < 2) p = .45;\n\t    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n\t    return function(t) {\n\t      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n\t    };\n\t  }\n\t  function d3_ease_back(s) {\n\t    if (!s) s = 1.70158;\n\t    return function(t) {\n\t      return t * t * ((s + 1) * t - s);\n\t    };\n\t  }\n\t  function d3_ease_bounce(t) {\n\t    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n\t  }\n\t  d3.interpolateHcl = d3_interpolateHcl;\n\t  function d3_interpolateHcl(a, b) {\n\t    a = d3.hcl(a);\n\t    b = d3.hcl(b);\n\t    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n\t    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateHsl = d3_interpolateHsl;\n\t  function d3_interpolateHsl(a, b) {\n\t    a = d3.hsl(a);\n\t    b = d3.hsl(b);\n\t    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n\t    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateLab = d3_interpolateLab;\n\t  function d3_interpolateLab(a, b) {\n\t    a = d3.lab(a);\n\t    b = d3.lab(b);\n\t    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n\t    return function(t) {\n\t      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateRound = d3_interpolateRound;\n\t  function d3_interpolateRound(a, b) {\n\t    b -= a;\n\t    return function(t) {\n\t      return Math.round(a + b * t);\n\t    };\n\t  }\n\t  d3.transform = function(string) {\n\t    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n\t    return (d3.transform = function(string) {\n\t      if (string != null) {\n\t        g.setAttribute(\"transform\", string);\n\t        var t = g.transform.baseVal.consolidate();\n\t      }\n\t      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n\t    })(string);\n\t  };\n\t  function d3_transform(m) {\n\t    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\t    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n\t      r0[0] *= -1;\n\t      r0[1] *= -1;\n\t      kx *= -1;\n\t      kz *= -1;\n\t    }\n\t    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n\t    this.translate = [ m.e, m.f ];\n\t    this.scale = [ kx, ky ];\n\t    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n\t  }\n\t  d3_transform.prototype.toString = function() {\n\t    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n\t  };\n\t  function d3_transformDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1];\n\t  }\n\t  function d3_transformNormalize(a) {\n\t    var k = Math.sqrt(d3_transformDot(a, a));\n\t    if (k) {\n\t      a[0] /= k;\n\t      a[1] /= k;\n\t    }\n\t    return k;\n\t  }\n\t  function d3_transformCombine(a, b, k) {\n\t    a[0] += k * b[0];\n\t    a[1] += k * b[1];\n\t    return a;\n\t  }\n\t  var d3_transformIdentity = {\n\t    a: 1,\n\t    b: 0,\n\t    c: 0,\n\t    d: 1,\n\t    e: 0,\n\t    f: 0\n\t  };\n\t  d3.interpolateTransform = d3_interpolateTransform;\n\t  function d3_interpolateTransformPop(s) {\n\t    return s.length ? s.pop() + \",\" : \"\";\n\t  }\n\t  function d3_interpolateTranslate(ta, tb, s, q) {\n\t    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n\t      var i = s.push(\"translate(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: i - 4,\n\t        x: d3_interpolateNumber(ta[0], tb[0])\n\t      }, {\n\t        i: i - 2,\n\t        x: d3_interpolateNumber(ta[1], tb[1])\n\t      });\n\t    } else if (tb[0] || tb[1]) {\n\t      s.push(\"translate(\" + tb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateRotate(ra, rb, s, q) {\n\t    if (ra !== rb) {\n\t      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n\t      q.push({\n\t        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(ra, rb)\n\t      });\n\t    } else if (rb) {\n\t      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateSkew(wa, wb, s, q) {\n\t    if (wa !== wb) {\n\t      q.push({\n\t        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(wa, wb)\n\t      });\n\t    } else if (wb) {\n\t      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateScale(ka, kb, s, q) {\n\t    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n\t      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: i - 4,\n\t        x: d3_interpolateNumber(ka[0], kb[0])\n\t      }, {\n\t        i: i - 2,\n\t        x: d3_interpolateNumber(ka[1], kb[1])\n\t      });\n\t    } else if (kb[0] !== 1 || kb[1] !== 1) {\n\t      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateTransform(a, b) {\n\t    var s = [], q = [];\n\t    a = d3.transform(a), b = d3.transform(b);\n\t    d3_interpolateTranslate(a.translate, b.translate, s, q);\n\t    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n\t    d3_interpolateSkew(a.skew, b.skew, s, q);\n\t    d3_interpolateScale(a.scale, b.scale, s, q);\n\t    a = b = null;\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  }\n\t  function d3_uninterpolateNumber(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return (x - a) / b;\n\t    };\n\t  }\n\t  function d3_uninterpolateClamp(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return Math.max(0, Math.min(1, (x - a) / b));\n\t    };\n\t  }\n\t  d3.layout = {};\n\t  d3.layout.bundle = function() {\n\t    return function(links) {\n\t      var paths = [], i = -1, n = links.length;\n\t      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n\t      return paths;\n\t    };\n\t  };\n\t  function d3_layout_bundlePath(link) {\n\t    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n\t    while (start !== lca) {\n\t      start = start.parent;\n\t      points.push(start);\n\t    }\n\t    var k = points.length;\n\t    while (end !== lca) {\n\t      points.splice(k, 0, end);\n\t      end = end.parent;\n\t    }\n\t    return points;\n\t  }\n\t  function d3_layout_bundleAncestors(node) {\n\t    var ancestors = [], parent = node.parent;\n\t    while (parent != null) {\n\t      ancestors.push(node);\n\t      node = parent;\n\t      parent = parent.parent;\n\t    }\n\t    ancestors.push(node);\n\t    return ancestors;\n\t  }\n\t  function d3_layout_bundleLeastCommonAncestor(a, b) {\n\t    if (a === b) return a;\n\t    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n\t    while (aNode === bNode) {\n\t      sharedNode = aNode;\n\t      aNode = aNodes.pop();\n\t      bNode = bNodes.pop();\n\t    }\n\t    return sharedNode;\n\t  }\n\t  d3.layout.chord = function() {\n\t    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n\t    function relayout() {\n\t      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n\t      chords = [];\n\t      groups = [];\n\t      k = 0, i = -1;\n\t      while (++i < n) {\n\t        x = 0, j = -1;\n\t        while (++j < n) {\n\t          x += matrix[i][j];\n\t        }\n\t        groupSums.push(x);\n\t        subgroupIndex.push(d3.range(n));\n\t        k += x;\n\t      }\n\t      if (sortGroups) {\n\t        groupIndex.sort(function(a, b) {\n\t          return sortGroups(groupSums[a], groupSums[b]);\n\t        });\n\t      }\n\t      if (sortSubgroups) {\n\t        subgroupIndex.forEach(function(d, i) {\n\t          d.sort(function(a, b) {\n\t            return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t          });\n\t        });\n\t      }\n\t      k = (τ - padding * n) / k;\n\t      x = 0, i = -1;\n\t      while (++i < n) {\n\t        x0 = x, j = -1;\n\t        while (++j < n) {\n\t          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n\t          subgroups[di + \"-\" + dj] = {\n\t            index: di,\n\t            subindex: dj,\n\t            startAngle: a0,\n\t            endAngle: a1,\n\t            value: v\n\t          };\n\t        }\n\t        groups[di] = {\n\t          index: di,\n\t          startAngle: x0,\n\t          endAngle: x,\n\t          value: groupSums[di]\n\t        };\n\t        x += padding;\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        j = i - 1;\n\t        while (++j < n) {\n\t          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n\t          if (source.value || target.value) {\n\t            chords.push(source.value < target.value ? {\n\t              source: target,\n\t              target: source\n\t            } : {\n\t              source: source,\n\t              target: target\n\t            });\n\t          }\n\t        }\n\t      }\n\t      if (sortChords) resort();\n\t    }\n\t    function resort() {\n\t      chords.sort(function(a, b) {\n\t        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n\t      });\n\t    }\n\t    chord.matrix = function(x) {\n\t      if (!arguments.length) return matrix;\n\t      n = (matrix = x) && matrix.length;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      padding = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortGroups = function(x) {\n\t      if (!arguments.length) return sortGroups;\n\t      sortGroups = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortSubgroups = function(x) {\n\t      if (!arguments.length) return sortSubgroups;\n\t      sortSubgroups = x;\n\t      chords = null;\n\t      return chord;\n\t    };\n\t    chord.sortChords = function(x) {\n\t      if (!arguments.length) return sortChords;\n\t      sortChords = x;\n\t      if (chords) resort();\n\t      return chord;\n\t    };\n\t    chord.chords = function() {\n\t      if (!chords) relayout();\n\t      return chords;\n\t    };\n\t    chord.groups = function() {\n\t      if (!groups) relayout();\n\t      return groups;\n\t    };\n\t    return chord;\n\t  };\n\t  d3.layout.force = function() {\n\t    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n\t    function repulse(node) {\n\t      return function(quad, x1, _, x2) {\n\t        if (quad.point !== node) {\n\t          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n\t          if (dw * dw / theta2 < dn) {\n\t            if (dn < chargeDistance2) {\n\t              var k = quad.charge / dn;\n\t              node.px -= dx * k;\n\t              node.py -= dy * k;\n\t            }\n\t            return true;\n\t          }\n\t          if (quad.point && dn && dn < chargeDistance2) {\n\t            var k = quad.pointCharge / dn;\n\t            node.px -= dx * k;\n\t            node.py -= dy * k;\n\t          }\n\t        }\n\t        return !quad.charge;\n\t      };\n\t    }\n\t    force.tick = function() {\n\t      if ((alpha *= .99) < .005) {\n\t        timer = null;\n\t        event.end({\n\t          type: \"end\",\n\t          alpha: alpha = 0\n\t        });\n\t        return true;\n\t      }\n\t      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        s = o.source;\n\t        t = o.target;\n\t        x = t.x - s.x;\n\t        y = t.y - s.y;\n\t        if (l = x * x + y * y) {\n\t          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n\t          x *= l;\n\t          y *= l;\n\t          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n\t          t.y -= y * k;\n\t          s.x += x * (k = 1 - k);\n\t          s.y += y * k;\n\t        }\n\t      }\n\t      if (k = alpha * gravity) {\n\t        x = size[0] / 2;\n\t        y = size[1] / 2;\n\t        i = -1;\n\t        if (k) while (++i < n) {\n\t          o = nodes[i];\n\t          o.x += (x - o.x) * k;\n\t          o.y += (y - o.y) * k;\n\t        }\n\t      }\n\t      if (charge) {\n\t        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n\t        i = -1;\n\t        while (++i < n) {\n\t          if (!(o = nodes[i]).fixed) {\n\t            q.visit(repulse(o));\n\t          }\n\t        }\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        o = nodes[i];\n\t        if (o.fixed) {\n\t          o.x = o.px;\n\t          o.y = o.py;\n\t        } else {\n\t          o.x -= (o.px - (o.px = o.x)) * friction;\n\t          o.y -= (o.py - (o.py = o.y)) * friction;\n\t        }\n\t      }\n\t      event.tick({\n\t        type: \"tick\",\n\t        alpha: alpha\n\t      });\n\t    };\n\t    force.nodes = function(x) {\n\t      if (!arguments.length) return nodes;\n\t      nodes = x;\n\t      return force;\n\t    };\n\t    force.links = function(x) {\n\t      if (!arguments.length) return links;\n\t      links = x;\n\t      return force;\n\t    };\n\t    force.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return force;\n\t    };\n\t    force.linkDistance = function(x) {\n\t      if (!arguments.length) return linkDistance;\n\t      linkDistance = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.distance = force.linkDistance;\n\t    force.linkStrength = function(x) {\n\t      if (!arguments.length) return linkStrength;\n\t      linkStrength = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.friction = function(x) {\n\t      if (!arguments.length) return friction;\n\t      friction = +x;\n\t      return force;\n\t    };\n\t    force.charge = function(x) {\n\t      if (!arguments.length) return charge;\n\t      charge = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.chargeDistance = function(x) {\n\t      if (!arguments.length) return Math.sqrt(chargeDistance2);\n\t      chargeDistance2 = x * x;\n\t      return force;\n\t    };\n\t    force.gravity = function(x) {\n\t      if (!arguments.length) return gravity;\n\t      gravity = +x;\n\t      return force;\n\t    };\n\t    force.theta = function(x) {\n\t      if (!arguments.length) return Math.sqrt(theta2);\n\t      theta2 = x * x;\n\t      return force;\n\t    };\n\t    force.alpha = function(x) {\n\t      if (!arguments.length) return alpha;\n\t      x = +x;\n\t      if (alpha) {\n\t        if (x > 0) {\n\t          alpha = x;\n\t        } else {\n\t          timer.c = null, timer.t = NaN, timer = null;\n\t          event.end({\n\t            type: \"end\",\n\t            alpha: alpha = 0\n\t          });\n\t        }\n\t      } else if (x > 0) {\n\t        event.start({\n\t          type: \"start\",\n\t          alpha: alpha = x\n\t        });\n\t        timer = d3_timer(force.tick);\n\t      }\n\t      return force;\n\t    };\n\t    force.start = function() {\n\t      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n\t      for (i = 0; i < n; ++i) {\n\t        (o = nodes[i]).index = i;\n\t        o.weight = 0;\n\t      }\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        if (typeof o.source == \"number\") o.source = nodes[o.source];\n\t        if (typeof o.target == \"number\") o.target = nodes[o.target];\n\t        ++o.source.weight;\n\t        ++o.target.weight;\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        o = nodes[i];\n\t        if (isNaN(o.x)) o.x = position(\"x\", w);\n\t        if (isNaN(o.y)) o.y = position(\"y\", h);\n\t        if (isNaN(o.px)) o.px = o.x;\n\t        if (isNaN(o.py)) o.py = o.y;\n\t      }\n\t      distances = [];\n\t      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n\t      strengths = [];\n\t      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n\t      charges = [];\n\t      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n\t      function position(dimension, size) {\n\t        if (!neighbors) {\n\t          neighbors = new Array(n);\n\t          for (j = 0; j < n; ++j) {\n\t            neighbors[j] = [];\n\t          }\n\t          for (j = 0; j < m; ++j) {\n\t            var o = links[j];\n\t            neighbors[o.source.index].push(o.target);\n\t            neighbors[o.target.index].push(o.source);\n\t          }\n\t        }\n\t        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n\t        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n\t        return Math.random() * size;\n\t      }\n\t      return force.resume();\n\t    };\n\t    force.resume = function() {\n\t      return force.alpha(.1);\n\t    };\n\t    force.stop = function() {\n\t      return force.alpha(0);\n\t    };\n\t    force.drag = function() {\n\t      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n\t      if (!arguments.length) return drag;\n\t      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n\t    };\n\t    function dragmove(d) {\n\t      d.px = d3.event.x, d.py = d3.event.y;\n\t      force.resume();\n\t    }\n\t    return d3.rebind(force, event, \"on\");\n\t  };\n\t  function d3_layout_forceDragstart(d) {\n\t    d.fixed |= 2;\n\t  }\n\t  function d3_layout_forceDragend(d) {\n\t    d.fixed &= ~6;\n\t  }\n\t  function d3_layout_forceMouseover(d) {\n\t    d.fixed |= 4;\n\t    d.px = d.x, d.py = d.y;\n\t  }\n\t  function d3_layout_forceMouseout(d) {\n\t    d.fixed &= ~4;\n\t  }\n\t  function d3_layout_forceAccumulate(quad, alpha, charges) {\n\t    var cx = 0, cy = 0;\n\t    quad.charge = 0;\n\t    if (!quad.leaf) {\n\t      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n\t      while (++i < n) {\n\t        c = nodes[i];\n\t        if (c == null) continue;\n\t        d3_layout_forceAccumulate(c, alpha, charges);\n\t        quad.charge += c.charge;\n\t        cx += c.charge * c.cx;\n\t        cy += c.charge * c.cy;\n\t      }\n\t    }\n\t    if (quad.point) {\n\t      if (!quad.leaf) {\n\t        quad.point.x += Math.random() - .5;\n\t        quad.point.y += Math.random() - .5;\n\t      }\n\t      var k = alpha * charges[quad.point.index];\n\t      quad.charge += quad.pointCharge = k;\n\t      cx += k * quad.point.x;\n\t      cy += k * quad.point.y;\n\t    }\n\t    quad.cx = cx / quad.charge;\n\t    quad.cy = cy / quad.charge;\n\t  }\n\t  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n\t  d3.layout.hierarchy = function() {\n\t    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n\t    function hierarchy(root) {\n\t      var stack = [ root ], nodes = [], node;\n\t      root.depth = 0;\n\t      while ((node = stack.pop()) != null) {\n\t        nodes.push(node);\n\t        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n\t          var n, childs, child;\n\t          while (--n >= 0) {\n\t            stack.push(child = childs[n]);\n\t            child.parent = node;\n\t            child.depth = node.depth + 1;\n\t          }\n\t          if (value) node.value = 0;\n\t          node.children = childs;\n\t        } else {\n\t          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          delete node.children;\n\t        }\n\t      }\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var childs, parent;\n\t        if (sort && (childs = node.children)) childs.sort(sort);\n\t        if (value && (parent = node.parent)) parent.value += node.value;\n\t      });\n\t      return nodes;\n\t    }\n\t    hierarchy.sort = function(x) {\n\t      if (!arguments.length) return sort;\n\t      sort = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.children = function(x) {\n\t      if (!arguments.length) return children;\n\t      children = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.value = function(x) {\n\t      if (!arguments.length) return value;\n\t      value = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.revalue = function(root) {\n\t      if (value) {\n\t        d3_layout_hierarchyVisitBefore(root, function(node) {\n\t          if (node.children) node.value = 0;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, function(node) {\n\t          var parent;\n\t          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          if (parent = node.parent) parent.value += node.value;\n\t        });\n\t      }\n\t      return root;\n\t    };\n\t    return hierarchy;\n\t  };\n\t  function d3_layout_hierarchyRebind(object, hierarchy) {\n\t    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n\t    object.nodes = object;\n\t    object.links = d3_layout_hierarchyLinks;\n\t    return object;\n\t  }\n\t  function d3_layout_hierarchyVisitBefore(node, callback) {\n\t    var nodes = [ node ];\n\t    while ((node = nodes.pop()) != null) {\n\t      callback(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var n, children;\n\t        while (--n >= 0) nodes.push(children[n]);\n\t      }\n\t    }\n\t  }\n\t  function d3_layout_hierarchyVisitAfter(node, callback) {\n\t    var nodes = [ node ], nodes2 = [];\n\t    while ((node = nodes.pop()) != null) {\n\t      nodes2.push(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var i = -1, n, children;\n\t        while (++i < n) nodes.push(children[i]);\n\t      }\n\t    }\n\t    while ((node = nodes2.pop()) != null) {\n\t      callback(node);\n\t    }\n\t  }\n\t  function d3_layout_hierarchyChildren(d) {\n\t    return d.children;\n\t  }\n\t  function d3_layout_hierarchyValue(d) {\n\t    return d.value;\n\t  }\n\t  function d3_layout_hierarchySort(a, b) {\n\t    return b.value - a.value;\n\t  }\n\t  function d3_layout_hierarchyLinks(nodes) {\n\t    return d3.merge(nodes.map(function(parent) {\n\t      return (parent.children || []).map(function(child) {\n\t        return {\n\t          source: parent,\n\t          target: child\n\t        };\n\t      });\n\t    }));\n\t  }\n\t  d3.layout.partition = function() {\n\t    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n\t    function position(node, x, dx, dy) {\n\t      var children = node.children;\n\t      node.x = x;\n\t      node.y = node.depth * dy;\n\t      node.dx = dx;\n\t      node.dy = dy;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n, c, d;\n\t        dx = node.value ? dx / node.value : 0;\n\t        while (++i < n) {\n\t          position(c = children[i], x, d = c.value * dx, dy);\n\t          x += d;\n\t        }\n\t      }\n\t    }\n\t    function depth(node) {\n\t      var children = node.children, d = 0;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n;\n\t        while (++i < n) d = Math.max(d, depth(children[i]));\n\t      }\n\t      return 1 + d;\n\t    }\n\t    function partition(d, i) {\n\t      var nodes = hierarchy.call(this, d, i);\n\t      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n\t      return nodes;\n\t    }\n\t    partition.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return partition;\n\t    };\n\t    return d3_layout_hierarchyRebind(partition, hierarchy);\n\t  };\n\t  d3.layout.pie = function() {\n\t    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n\t    function pie(data) {\n\t      var n = data.length, values = data.map(function(d, i) {\n\t        return +value.call(pie, d, i);\n\t      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n\t      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n\t        return values[j] - values[i];\n\t      } : function(i, j) {\n\t        return sort(data[i], data[j]);\n\t      });\n\t      index.forEach(function(i) {\n\t        arcs[i] = {\n\t          data: data[i],\n\t          value: v = values[i],\n\t          startAngle: a,\n\t          endAngle: a += v * k + pa,\n\t          padAngle: p\n\t        };\n\t      });\n\t      return arcs;\n\t    }\n\t    pie.value = function(_) {\n\t      if (!arguments.length) return value;\n\t      value = _;\n\t      return pie;\n\t    };\n\t    pie.sort = function(_) {\n\t      if (!arguments.length) return sort;\n\t      sort = _;\n\t      return pie;\n\t    };\n\t    pie.startAngle = function(_) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = _;\n\t      return pie;\n\t    };\n\t    pie.endAngle = function(_) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = _;\n\t      return pie;\n\t    };\n\t    pie.padAngle = function(_) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = _;\n\t      return pie;\n\t    };\n\t    return pie;\n\t  };\n\t  var d3_layout_pieSortByValue = {};\n\t  d3.layout.stack = function() {\n\t    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n\t    function stack(data, index) {\n\t      if (!(n = data.length)) return data;\n\t      var series = data.map(function(d, i) {\n\t        return values.call(stack, d, i);\n\t      });\n\t      var points = series.map(function(d) {\n\t        return d.map(function(v, i) {\n\t          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n\t        });\n\t      });\n\t      var orders = order.call(stack, points, index);\n\t      series = d3.permute(series, orders);\n\t      points = d3.permute(points, orders);\n\t      var offsets = offset.call(stack, points, index);\n\t      var m = series[0].length, n, i, j, o;\n\t      for (j = 0; j < m; ++j) {\n\t        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\t        for (i = 1; i < n; ++i) {\n\t          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t    stack.values = function(x) {\n\t      if (!arguments.length) return values;\n\t      values = x;\n\t      return stack;\n\t    };\n\t    stack.order = function(x) {\n\t      if (!arguments.length) return order;\n\t      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n\t      return stack;\n\t    };\n\t    stack.offset = function(x) {\n\t      if (!arguments.length) return offset;\n\t      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n\t      return stack;\n\t    };\n\t    stack.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      return stack;\n\t    };\n\t    stack.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      return stack;\n\t    };\n\t    stack.out = function(z) {\n\t      if (!arguments.length) return out;\n\t      out = z;\n\t      return stack;\n\t    };\n\t    return stack;\n\t  };\n\t  function d3_layout_stackX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_layout_stackY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_layout_stackOut(d, y0, y) {\n\t    d.y0 = y0;\n\t    d.y = y;\n\t  }\n\t  var d3_layout_stackOrders = d3.map({\n\t    \"inside-out\": function(data) {\n\t      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n\t        return max[a] - max[b];\n\t      }), top = 0, bottom = 0, tops = [], bottoms = [];\n\t      for (i = 0; i < n; ++i) {\n\t        j = index[i];\n\t        if (top < bottom) {\n\t          top += sums[j];\n\t          tops.push(j);\n\t        } else {\n\t          bottom += sums[j];\n\t          bottoms.push(j);\n\t        }\n\t      }\n\t      return bottoms.reverse().concat(tops);\n\t    },\n\t    reverse: function(data) {\n\t      return d3.range(data.length).reverse();\n\t    },\n\t    \"default\": d3_layout_stackOrderDefault\n\t  });\n\t  var d3_layout_stackOffsets = d3.map({\n\t    silhouette: function(data) {\n\t      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o > max) max = o;\n\t        sums.push(o);\n\t      }\n\t      for (j = 0; j < m; ++j) {\n\t        y0[j] = (max - sums[j]) / 2;\n\t      }\n\t      return y0;\n\t    },\n\t    wiggle: function(data) {\n\t      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n\t      y0[0] = o = o0 = 0;\n\t      for (j = 1; j < m; ++j) {\n\t        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n\t        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n\t          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n\t            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n\t          }\n\t          s2 += s3 * data[i][j][1];\n\t        }\n\t        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n\t        if (o < o0) o0 = o;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] -= o0;\n\t      return y0;\n\t    },\n\t    expand: function(data) {\n\t      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] = 0;\n\t      return y0;\n\t    },\n\t    zero: d3_layout_stackOffsetZero\n\t  });\n\t  function d3_layout_stackOrderDefault(data) {\n\t    return d3.range(data.length);\n\t  }\n\t  function d3_layout_stackOffsetZero(data) {\n\t    var j = -1, m = data[0].length, y0 = [];\n\t    while (++j < m) y0[j] = 0;\n\t    return y0;\n\t  }\n\t  function d3_layout_stackMaxIndex(array) {\n\t    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n\t    for (;i < n; ++i) {\n\t      if ((k = array[i][1]) > v) {\n\t        j = i;\n\t        v = k;\n\t      }\n\t    }\n\t    return j;\n\t  }\n\t  function d3_layout_stackReduceSum(d) {\n\t    return d.reduce(d3_layout_stackSum, 0);\n\t  }\n\t  function d3_layout_stackSum(p, d) {\n\t    return p + d[1];\n\t  }\n\t  d3.layout.histogram = function() {\n\t    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n\t    function histogram(data, i) {\n\t      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n\t      while (++i < m) {\n\t        bin = bins[i] = [];\n\t        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n\t        bin.y = 0;\n\t      }\n\t      if (m > 0) {\n\t        i = -1;\n\t        while (++i < n) {\n\t          x = values[i];\n\t          if (x >= range[0] && x <= range[1]) {\n\t            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n\t            bin.y += k;\n\t            bin.push(data[i]);\n\t          }\n\t        }\n\t      }\n\t      return bins;\n\t    }\n\t    histogram.value = function(x) {\n\t      if (!arguments.length) return valuer;\n\t      valuer = x;\n\t      return histogram;\n\t    };\n\t    histogram.range = function(x) {\n\t      if (!arguments.length) return ranger;\n\t      ranger = d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.bins = function(x) {\n\t      if (!arguments.length) return binner;\n\t      binner = typeof x === \"number\" ? function(range) {\n\t        return d3_layout_histogramBinFixed(range, x);\n\t      } : d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.frequency = function(x) {\n\t      if (!arguments.length) return frequency;\n\t      frequency = !!x;\n\t      return histogram;\n\t    };\n\t    return histogram;\n\t  };\n\t  function d3_layout_histogramBinSturges(range, values) {\n\t    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n\t  }\n\t  function d3_layout_histogramBinFixed(range, n) {\n\t    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n\t    while (++x <= n) f[x] = m * x + b;\n\t    return f;\n\t  }\n\t  function d3_layout_histogramRange(values) {\n\t    return [ d3.min(values), d3.max(values) ];\n\t  }\n\t  d3.layout.pack = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n\t    function pack(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n\t        return radius;\n\t      };\n\t      root.x = root.y = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(d) {\n\t        d.r = +r(d.value);\n\t      });\n\t      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t      if (padding) {\n\t        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r += dr;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r -= dr;\n\t        });\n\t      }\n\t      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n\t      return nodes;\n\t    }\n\t    pack.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _;\n\t      return pack;\n\t    };\n\t    pack.radius = function(_) {\n\t      if (!arguments.length) return radius;\n\t      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n\t      return pack;\n\t    };\n\t    pack.padding = function(_) {\n\t      if (!arguments.length) return padding;\n\t      padding = +_;\n\t      return pack;\n\t    };\n\t    return d3_layout_hierarchyRebind(pack, hierarchy);\n\t  };\n\t  function d3_layout_packSort(a, b) {\n\t    return a.value - b.value;\n\t  }\n\t  function d3_layout_packInsert(a, b) {\n\t    var c = a._pack_next;\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t    b._pack_next = c;\n\t    c._pack_prev = b;\n\t  }\n\t  function d3_layout_packSplice(a, b) {\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t  }\n\t  function d3_layout_packIntersects(a, b) {\n\t    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n\t    return .999 * dr * dr > dx * dx + dy * dy;\n\t  }\n\t  function d3_layout_packSiblings(node) {\n\t    if (!(nodes = node.children) || !(n = nodes.length)) return;\n\t    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n\t    function bound(node) {\n\t      xMin = Math.min(node.x - node.r, xMin);\n\t      xMax = Math.max(node.x + node.r, xMax);\n\t      yMin = Math.min(node.y - node.r, yMin);\n\t      yMax = Math.max(node.y + node.r, yMax);\n\t    }\n\t    nodes.forEach(d3_layout_packLink);\n\t    a = nodes[0];\n\t    a.x = -a.r;\n\t    a.y = 0;\n\t    bound(a);\n\t    if (n > 1) {\n\t      b = nodes[1];\n\t      b.x = b.r;\n\t      b.y = 0;\n\t      bound(b);\n\t      if (n > 2) {\n\t        c = nodes[2];\n\t        d3_layout_packPlace(a, b, c);\n\t        bound(c);\n\t        d3_layout_packInsert(a, c);\n\t        a._pack_prev = c;\n\t        d3_layout_packInsert(c, b);\n\t        b = a._pack_next;\n\t        for (i = 3; i < n; i++) {\n\t          d3_layout_packPlace(a, b, c = nodes[i]);\n\t          var isect = 0, s1 = 1, s2 = 1;\n\t          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n\t            if (d3_layout_packIntersects(j, c)) {\n\t              isect = 1;\n\t              break;\n\t            }\n\t          }\n\t          if (isect == 1) {\n\t            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n\t              if (d3_layout_packIntersects(k, c)) {\n\t                break;\n\t              }\n\t            }\n\t          }\n\t          if (isect) {\n\t            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n\t            i--;\n\t          } else {\n\t            d3_layout_packInsert(a, c);\n\t            b = c;\n\t            bound(c);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n\t    for (i = 0; i < n; i++) {\n\t      c = nodes[i];\n\t      c.x -= cx;\n\t      c.y -= cy;\n\t      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n\t    }\n\t    node.r = cr;\n\t    nodes.forEach(d3_layout_packUnlink);\n\t  }\n\t  function d3_layout_packLink(node) {\n\t    node._pack_next = node._pack_prev = node;\n\t  }\n\t  function d3_layout_packUnlink(node) {\n\t    delete node._pack_next;\n\t    delete node._pack_prev;\n\t  }\n\t  function d3_layout_packTransform(node, x, y, k) {\n\t    var children = node.children;\n\t    node.x = x += k * node.x;\n\t    node.y = y += k * node.y;\n\t    node.r *= k;\n\t    if (children) {\n\t      var i = -1, n = children.length;\n\t      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n\t    }\n\t  }\n\t  function d3_layout_packPlace(a, b, c) {\n\t    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n\t    if (db && (dx || dy)) {\n\t      var da = b.r + c.r, dc = dx * dx + dy * dy;\n\t      da *= da;\n\t      db *= db;\n\t      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t      c.x = a.x + x * dx + y * dy;\n\t      c.y = a.y + x * dy - y * dx;\n\t    } else {\n\t      c.x = a.x + db;\n\t      c.y = a.y;\n\t    }\n\t  }\n\t  d3.layout.tree = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n\t    function tree(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n\t      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n\t      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n\t      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n\t        var left = root0, right = root0, bottom = root0;\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          if (node.x < left.x) left = node;\n\t          if (node.x > right.x) right = node;\n\t          if (node.depth > bottom.depth) bottom = node;\n\t        });\n\t        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          node.x = (node.x + tx) * kx;\n\t          node.y = node.depth * ky;\n\t        });\n\t      }\n\t      return nodes;\n\t    }\n\t    function wrapTree(root0) {\n\t      var root1 = {\n\t        A: null,\n\t        children: [ root0 ]\n\t      }, queue = [ root1 ], node1;\n\t      while ((node1 = queue.pop()) != null) {\n\t        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n\t          queue.push((children[i] = child = {\n\t            _: children[i],\n\t            parent: node1,\n\t            children: (child = children[i].children) && child.slice() || [],\n\t            A: null,\n\t            a: null,\n\t            z: 0,\n\t            m: 0,\n\t            c: 0,\n\t            s: 0,\n\t            t: null,\n\t            i: i\n\t          }).a = child);\n\t        }\n\t      }\n\t      return root1.children[0];\n\t    }\n\t    function firstWalk(v) {\n\t      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n\t      if (children.length) {\n\t        d3_layout_treeShift(v);\n\t        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t        if (w) {\n\t          v.z = w.z + separation(v._, w._);\n\t          v.m = v.z - midpoint;\n\t        } else {\n\t          v.z = midpoint;\n\t        }\n\t      } else if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t      }\n\t      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t    }\n\t    function secondWalk(v) {\n\t      v._.x = v.z + v.parent.m;\n\t      v.m += v.parent.m;\n\t    }\n\t    function apportion(v, w, ancestor) {\n\t      if (w) {\n\t        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n\t        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n\t          vom = d3_layout_treeLeft(vom);\n\t          vop = d3_layout_treeRight(vop);\n\t          vop.a = v;\n\t          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t          if (shift > 0) {\n\t            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n\t            sip += shift;\n\t            sop += shift;\n\t          }\n\t          sim += vim.m;\n\t          sip += vip.m;\n\t          som += vom.m;\n\t          sop += vop.m;\n\t        }\n\t        if (vim && !d3_layout_treeRight(vop)) {\n\t          vop.t = vim;\n\t          vop.m += sim - sop;\n\t        }\n\t        if (vip && !d3_layout_treeLeft(vom)) {\n\t          vom.t = vip;\n\t          vom.m += sip - som;\n\t          ancestor = v;\n\t        }\n\t      }\n\t      return ancestor;\n\t    }\n\t    function sizeNode(node) {\n\t      node.x *= size[0];\n\t      node.y = node.depth * size[1];\n\t    }\n\t    tree.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return tree;\n\t    };\n\t    tree.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null ? sizeNode : null;\n\t      return tree;\n\t    };\n\t    tree.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) == null ? null : sizeNode;\n\t      return tree;\n\t    };\n\t    return d3_layout_hierarchyRebind(tree, hierarchy);\n\t  };\n\t  function d3_layout_treeSeparation(a, b) {\n\t    return a.parent == b.parent ? 1 : 2;\n\t  }\n\t  function d3_layout_treeLeft(v) {\n\t    var children = v.children;\n\t    return children.length ? children[0] : v.t;\n\t  }\n\t  function d3_layout_treeRight(v) {\n\t    var children = v.children, n;\n\t    return (n = children.length) ? children[n - 1] : v.t;\n\t  }\n\t  function d3_layout_treeMove(wm, wp, shift) {\n\t    var change = shift / (wp.i - wm.i);\n\t    wp.c -= change;\n\t    wp.s += shift;\n\t    wm.c += change;\n\t    wp.z += shift;\n\t    wp.m += shift;\n\t  }\n\t  function d3_layout_treeShift(v) {\n\t    var shift = 0, change = 0, children = v.children, i = children.length, w;\n\t    while (--i >= 0) {\n\t      w = children[i];\n\t      w.z += shift;\n\t      w.m += shift;\n\t      shift += w.s + (change += w.c);\n\t    }\n\t  }\n\t  function d3_layout_treeAncestor(vim, v, ancestor) {\n\t    return vim.a.parent === v.parent ? vim.a : ancestor;\n\t  }\n\t  d3.layout.cluster = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n\t    function cluster(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var children = node.children;\n\t        if (children && children.length) {\n\t          node.x = d3_layout_clusterX(children);\n\t          node.y = d3_layout_clusterY(children);\n\t        } else {\n\t          node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t          node.y = 0;\n\t          previousNode = node;\n\t        }\n\t      });\n\t      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n\t      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n\t        node.x = (node.x - root.x) * size[0];\n\t        node.y = (root.y - node.y) * size[1];\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * size[0];\n\t        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n\t      });\n\t      return nodes;\n\t    }\n\t    cluster.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return cluster;\n\t    };\n\t    cluster.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null;\n\t      return cluster;\n\t    };\n\t    cluster.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) != null;\n\t      return cluster;\n\t    };\n\t    return d3_layout_hierarchyRebind(cluster, hierarchy);\n\t  };\n\t  function d3_layout_clusterY(children) {\n\t    return 1 + d3.max(children, function(child) {\n\t      return child.y;\n\t    });\n\t  }\n\t  function d3_layout_clusterX(children) {\n\t    return children.reduce(function(x, child) {\n\t      return x + child.x;\n\t    }, 0) / children.length;\n\t  }\n\t  function d3_layout_clusterLeft(node) {\n\t    var children = node.children;\n\t    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n\t  }\n\t  function d3_layout_clusterRight(node) {\n\t    var children = node.children, n;\n\t    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n\t  }\n\t  d3.layout.treemap = function() {\n\t    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n\t    function scale(children, k) {\n\t      var i = -1, n = children.length, child, area;\n\t      while (++i < n) {\n\t        area = (child = children[i]).value * (k < 0 ? 0 : k);\n\t        child.area = isNaN(area) || area <= 0 ? 0 : area;\n\t      }\n\t    }\n\t    function squarify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while ((n = remaining.length) > 0) {\n\t          row.push(child = remaining[n - 1]);\n\t          row.area += child.area;\n\t          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n\t            remaining.pop();\n\t            best = score;\n\t          } else {\n\t            row.area -= row.pop().area;\n\t            position(row, u, rect, false);\n\t            u = Math.min(rect.dx, rect.dy);\n\t            row.length = row.area = 0;\n\t            best = Infinity;\n\t          }\n\t        }\n\t        if (row.length) {\n\t          position(row, u, rect, true);\n\t          row.length = row.area = 0;\n\t        }\n\t        children.forEach(squarify);\n\t      }\n\t    }\n\t    function stickify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), remaining = children.slice(), child, row = [];\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while (child = remaining.pop()) {\n\t          row.push(child);\n\t          row.area += child.area;\n\t          if (child.z != null) {\n\t            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n\t            row.length = row.area = 0;\n\t          }\n\t        }\n\t        children.forEach(stickify);\n\t      }\n\t    }\n\t    function worst(row, u) {\n\t      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n\t      while (++i < n) {\n\t        if (!(r = row[i].area)) continue;\n\t        if (r < rmin) rmin = r;\n\t        if (r > rmax) rmax = r;\n\t      }\n\t      s *= s;\n\t      u *= u;\n\t      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n\t    }\n\t    function position(row, u, rect, flush) {\n\t      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n\t      if (u == rect.dx) {\n\t        if (flush || v > rect.dy) v = rect.dy;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dy = v;\n\t          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = true;\n\t        o.dx += rect.x + rect.dx - x;\n\t        rect.y += v;\n\t        rect.dy -= v;\n\t      } else {\n\t        if (flush || v > rect.dx) v = rect.dx;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dx = v;\n\t          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = false;\n\t        o.dy += rect.y + rect.dy - y;\n\t        rect.x += v;\n\t        rect.dx -= v;\n\t      }\n\t    }\n\t    function treemap(d) {\n\t      var nodes = stickies || hierarchy(d), root = nodes[0];\n\t      root.x = root.y = 0;\n\t      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n\t      if (stickies) hierarchy.revalue(root);\n\t      scale([ root ], root.dx * root.dy / root.value);\n\t      (stickies ? stickify : squarify)(root);\n\t      if (sticky) stickies = nodes;\n\t      return nodes;\n\t    }\n\t    treemap.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return treemap;\n\t    };\n\t    treemap.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      function padFunction(node) {\n\t        var p = x.call(treemap, node, node.depth);\n\t        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n\t      }\n\t      function padConstant(node) {\n\t        return d3_layout_treemapPad(node, x);\n\t      }\n\t      var type;\n\t      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n\t      padConstant) : padConstant;\n\t      return treemap;\n\t    };\n\t    treemap.round = function(x) {\n\t      if (!arguments.length) return round != Number;\n\t      round = x ? Math.round : Number;\n\t      return treemap;\n\t    };\n\t    treemap.sticky = function(x) {\n\t      if (!arguments.length) return sticky;\n\t      sticky = x;\n\t      stickies = null;\n\t      return treemap;\n\t    };\n\t    treemap.ratio = function(x) {\n\t      if (!arguments.length) return ratio;\n\t      ratio = x;\n\t      return treemap;\n\t    };\n\t    treemap.mode = function(x) {\n\t      if (!arguments.length) return mode;\n\t      mode = x + \"\";\n\t      return treemap;\n\t    };\n\t    return d3_layout_hierarchyRebind(treemap, hierarchy);\n\t  };\n\t  function d3_layout_treemapPadNull(node) {\n\t    return {\n\t      x: node.x,\n\t      y: node.y,\n\t      dx: node.dx,\n\t      dy: node.dy\n\t    };\n\t  }\n\t  function d3_layout_treemapPad(node, padding) {\n\t    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n\t    if (dx < 0) {\n\t      x += dx / 2;\n\t      dx = 0;\n\t    }\n\t    if (dy < 0) {\n\t      y += dy / 2;\n\t      dy = 0;\n\t    }\n\t    return {\n\t      x: x,\n\t      y: y,\n\t      dx: dx,\n\t      dy: dy\n\t    };\n\t  }\n\t  d3.random = {\n\t    normal: function(µ, σ) {\n\t      var n = arguments.length;\n\t      if (n < 2) σ = 1;\n\t      if (n < 1) µ = 0;\n\t      return function() {\n\t        var x, y, r;\n\t        do {\n\t          x = Math.random() * 2 - 1;\n\t          y = Math.random() * 2 - 1;\n\t          r = x * x + y * y;\n\t        } while (!r || r > 1);\n\t        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n\t      };\n\t    },\n\t    logNormal: function() {\n\t      var random = d3.random.normal.apply(d3, arguments);\n\t      return function() {\n\t        return Math.exp(random());\n\t      };\n\t    },\n\t    bates: function(m) {\n\t      var random = d3.random.irwinHall(m);\n\t      return function() {\n\t        return random() / m;\n\t      };\n\t    },\n\t    irwinHall: function(m) {\n\t      return function() {\n\t        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n\t        return s;\n\t      };\n\t    }\n\t  };\n\t  d3.scale = {};\n\t  function d3_scaleExtent(domain) {\n\t    var start = domain[0], stop = domain[domain.length - 1];\n\t    return start < stop ? [ start, stop ] : [ stop, start ];\n\t  }\n\t  function d3_scaleRange(scale) {\n\t    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n\t  }\n\t  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n\t    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n\t    return function(x) {\n\t      return i(u(x));\n\t    };\n\t  }\n\t  function d3_scale_nice(domain, nice) {\n\t    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n\t    if (x1 < x0) {\n\t      dx = i0, i0 = i1, i1 = dx;\n\t      dx = x0, x0 = x1, x1 = dx;\n\t    }\n\t    domain[i0] = nice.floor(x0);\n\t    domain[i1] = nice.ceil(x1);\n\t    return domain;\n\t  }\n\t  function d3_scale_niceStep(step) {\n\t    return step ? {\n\t      floor: function(x) {\n\t        return Math.floor(x / step) * step;\n\t      },\n\t      ceil: function(x) {\n\t        return Math.ceil(x / step) * step;\n\t      }\n\t    } : d3_scale_niceIdentity;\n\t  }\n\t  var d3_scale_niceIdentity = {\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n\t    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n\t    if (domain[k] < domain[0]) {\n\t      domain = domain.slice().reverse();\n\t      range = range.slice().reverse();\n\t    }\n\t    while (++j <= k) {\n\t      u.push(uninterpolate(domain[j - 1], domain[j]));\n\t      i.push(interpolate(range[j - 1], range[j]));\n\t    }\n\t    return function(x) {\n\t      var j = d3.bisect(domain, x, 1, k) - 1;\n\t      return i[j](u[j](x));\n\t    };\n\t  }\n\t  d3.scale.linear = function() {\n\t    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n\t  };\n\t  function d3_scale_linear(domain, range, interpolate, clamp) {\n\t    var output, input;\n\t    function rescale() {\n\t      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n\t      output = linear(domain, range, uninterpolate, interpolate);\n\t      input = linear(range, domain, uninterpolate, d3_interpolate);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      return output(x);\n\t    }\n\t    scale.invert = function(y) {\n\t      return input(y);\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(Number);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.rangeRound = function(x) {\n\t      return scale.range(x).interpolate(d3_interpolateRound);\n\t    };\n\t    scale.clamp = function(x) {\n\t      if (!arguments.length) return clamp;\n\t      clamp = x;\n\t      return rescale();\n\t    };\n\t    scale.interpolate = function(x) {\n\t      if (!arguments.length) return interpolate;\n\t      interpolate = x;\n\t      return rescale();\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      d3_scale_linearNice(domain, m);\n\t      return rescale();\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_linear(domain, range, interpolate, clamp);\n\t    };\n\t    return rescale();\n\t  }\n\t  function d3_scale_linearRebind(scale, linear) {\n\t    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n\t  }\n\t  function d3_scale_linearNice(domain, m) {\n\t    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t    return domain;\n\t  }\n\t  function d3_scale_linearTickRange(domain, m) {\n\t    if (m == null) m = 10;\n\t    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n\t    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n\t    extent[0] = Math.ceil(extent[0] / step) * step;\n\t    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n\t    extent[2] = step;\n\t    return extent;\n\t  }\n\t  function d3_scale_linearTicks(domain, m) {\n\t    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n\t  }\n\t  function d3_scale_linearTickFormat(domain, m, format) {\n\t    var range = d3_scale_linearTickRange(domain, m);\n\t    if (format) {\n\t      var match = d3_format_re.exec(format);\n\t      match.shift();\n\t      if (match[8] === \"s\") {\n\t        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n\t        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n\t        match[8] = \"f\";\n\t        format = d3.format(match.join(\"\"));\n\t        return function(d) {\n\t          return format(prefix.scale(d)) + prefix.symbol;\n\t        };\n\t      }\n\t      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n\t      format = match.join(\"\");\n\t    } else {\n\t      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n\t    }\n\t    return d3.format(format);\n\t  }\n\t  var d3_scale_linearFormatSignificant = {\n\t    s: 1,\n\t    g: 1,\n\t    p: 1,\n\t    r: 1,\n\t    e: 1\n\t  };\n\t  function d3_scale_linearPrecision(value) {\n\t    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n\t  }\n\t  function d3_scale_linearFormatPrecision(type, range) {\n\t    var p = d3_scale_linearPrecision(range[2]);\n\t    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n\t  }\n\t  d3.scale.log = function() {\n\t    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n\t  };\n\t  function d3_scale_log(linear, base, positive, domain) {\n\t    function log(x) {\n\t      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n\t    }\n\t    function pow(x) {\n\t      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n\t    }\n\t    function scale(x) {\n\t      return linear(log(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return pow(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      positive = x[0] >= 0;\n\t      linear.domain((domain = x.map(Number)).map(log));\n\t      return scale;\n\t    };\n\t    scale.base = function(_) {\n\t      if (!arguments.length) return base;\n\t      base = +_;\n\t      linear.domain(domain.map(log));\n\t      return scale;\n\t    };\n\t    scale.nice = function() {\n\t      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n\t      linear.domain(niced);\n\t      domain = niced.map(pow);\n\t      return scale;\n\t    };\n\t    scale.ticks = function() {\n\t      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n\t      if (isFinite(j - i)) {\n\t        if (positive) {\n\t          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n\t          ticks.push(pow(i));\n\t        } else {\n\t          ticks.push(pow(i));\n\t          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n\t        }\n\t        for (i = 0; ticks[i] < u; i++) {}\n\t        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\t        ticks = ticks.slice(i, j);\n\t      }\n\t      return ticks;\n\t    };\n\t    scale.tickFormat = function(n, format) {\n\t      if (!arguments.length) return d3_scale_logFormat;\n\t      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n\t      var k = Math.max(1, base * n / scale.ticks().length);\n\t      return function(d) {\n\t        var i = d / pow(Math.round(log(d)));\n\t        if (i * base < base - .5) i *= base;\n\t        return i <= k ? format(d) : \"\";\n\t      };\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_log(linear.copy(), base, positive, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n\t    floor: function(x) {\n\t      return -Math.ceil(-x);\n\t    },\n\t    ceil: function(x) {\n\t      return -Math.floor(-x);\n\t    }\n\t  };\n\t  d3.scale.pow = function() {\n\t    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_pow(linear, exponent, domain) {\n\t    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n\t    function scale(x) {\n\t      return linear(powp(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return powb(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      linear.domain((domain = x.map(Number)).map(powp));\n\t      return scale;\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      return scale.domain(d3_scale_linearNice(domain, m));\n\t    };\n\t    scale.exponent = function(x) {\n\t      if (!arguments.length) return exponent;\n\t      powp = d3_scale_powPow(exponent = x);\n\t      powb = d3_scale_powPow(1 / exponent);\n\t      linear.domain(domain.map(powp));\n\t      return scale;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_pow(linear.copy(), exponent, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_scale_powPow(e) {\n\t    return function(x) {\n\t      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n\t    };\n\t  }\n\t  d3.scale.sqrt = function() {\n\t    return d3.scale.pow().exponent(.5);\n\t  };\n\t  d3.scale.ordinal = function() {\n\t    return d3_scale_ordinal([], {\n\t      t: \"range\",\n\t      a: [ [] ]\n\t    });\n\t  };\n\t  function d3_scale_ordinal(domain, ranger) {\n\t    var index, range, rangeBand;\n\t    function scale(x) {\n\t      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n\t    }\n\t    function steps(start, step) {\n\t      return d3.range(domain.length).map(function(i) {\n\t        return start + step * i;\n\t      });\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = [];\n\t      index = new d3_Map();\n\t      var i = -1, n = x.length, xi;\n\t      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n\t      return scale[ranger.t].apply(scale, ranger.a);\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"range\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangePoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n\t      0) : (stop - start) / (domain.length - 1 + padding);\n\t      range = steps(start + step * padding / 2, step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangePoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundPoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n\t      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n\t      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangeRoundPoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n\t      range = steps(start + step * outerPadding, step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = step * (1 - padding);\n\t      ranger = {\n\t        t: \"rangeBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n\t      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = Math.round(step * (1 - padding));\n\t      ranger = {\n\t        t: \"rangeRoundBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBand = function() {\n\t      return rangeBand;\n\t    };\n\t    scale.rangeExtent = function() {\n\t      return d3_scaleExtent(ranger.a[0]);\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_ordinal(domain, ranger);\n\t    };\n\t    return scale.domain(domain);\n\t  }\n\t  d3.scale.category10 = function() {\n\t    return d3.scale.ordinal().range(d3_category10);\n\t  };\n\t  d3.scale.category20 = function() {\n\t    return d3.scale.ordinal().range(d3_category20);\n\t  };\n\t  d3.scale.category20b = function() {\n\t    return d3.scale.ordinal().range(d3_category20b);\n\t  };\n\t  d3.scale.category20c = function() {\n\t    return d3.scale.ordinal().range(d3_category20c);\n\t  };\n\t  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n\t  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n\t  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n\t  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n\t  d3.scale.quantile = function() {\n\t    return d3_scale_quantile([], []);\n\t  };\n\t  function d3_scale_quantile(domain, range) {\n\t    var thresholds;\n\t    function rescale() {\n\t      var k = 0, q = range.length;\n\t      thresholds = [];\n\t      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.quantiles = function() {\n\t      return thresholds;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantile(domain, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.quantize = function() {\n\t    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_quantize(x0, x1, range) {\n\t    var kx, i;\n\t    function scale(x) {\n\t      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n\t    }\n\t    function rescale() {\n\t      kx = range.length / (x1 - x0);\n\t      i = range.length - 1;\n\t      return scale;\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return [ x0, x1 ];\n\t      x0 = +x[0];\n\t      x1 = +x[x.length - 1];\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      y = y < 0 ? NaN : y / kx + x0;\n\t      return [ y, y + 1 / kx ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantize(x0, x1, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.threshold = function() {\n\t    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n\t  };\n\t  function d3_scale_threshold(domain, range) {\n\t    function scale(x) {\n\t      if (x <= x) return range[d3.bisect(domain, x)];\n\t    }\n\t    scale.domain = function(_) {\n\t      if (!arguments.length) return domain;\n\t      domain = _;\n\t      return scale;\n\t    };\n\t    scale.range = function(_) {\n\t      if (!arguments.length) return range;\n\t      range = _;\n\t      return scale;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return [ domain[y - 1], domain[y] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_threshold(domain, range);\n\t    };\n\t    return scale;\n\t  }\n\t  d3.scale.identity = function() {\n\t    return d3_scale_identity([ 0, 1 ]);\n\t  };\n\t  function d3_scale_identity(domain) {\n\t    function identity(x) {\n\t      return +x;\n\t    }\n\t    identity.invert = identity;\n\t    identity.domain = identity.range = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(identity);\n\t      return identity;\n\t    };\n\t    identity.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    identity.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    identity.copy = function() {\n\t      return d3_scale_identity(domain);\n\t    };\n\t    return identity;\n\t  }\n\t  d3.svg = {};\n\t  function d3_zero() {\n\t    return 0;\n\t  }\n\t  d3.svg.arc = function() {\n\t    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n\t    function arc() {\n\t      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n\t      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n\t      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n\t      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n\t      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n\t        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n\t        if (!cw) p1 *= -1;\n\t        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n\t        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n\t      }\n\t      if (r1) {\n\t        x0 = r1 * Math.cos(a0 + p1);\n\t        y0 = r1 * Math.sin(a0 + p1);\n\t        x1 = r1 * Math.cos(a1 - p1);\n\t        y1 = r1 * Math.sin(a1 - p1);\n\t        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n\t        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n\t          var h1 = (a0 + a1) / 2;\n\t          x0 = r1 * Math.cos(h1);\n\t          y0 = r1 * Math.sin(h1);\n\t          x1 = y1 = null;\n\t        }\n\t      } else {\n\t        x0 = y0 = 0;\n\t      }\n\t      if (r0) {\n\t        x2 = r0 * Math.cos(a1 - p0);\n\t        y2 = r0 * Math.sin(a1 - p0);\n\t        x3 = r0 * Math.cos(a0 + p0);\n\t        y3 = r0 * Math.sin(a0 + p0);\n\t        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n\t        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n\t          var h0 = (a0 + a1) / 2;\n\t          x2 = r0 * Math.cos(h0);\n\t          y2 = r0 * Math.sin(h0);\n\t          x3 = y3 = null;\n\t        }\n\t      } else {\n\t        x2 = y2 = 0;\n\t      }\n\t      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n\t        cr = r0 < r1 ^ cw ? 0 : 1;\n\t        var rc1 = rc, rc0 = rc;\n\t        if (da < π) {\n\t          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t        if (x1 != null) {\n\t          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n\t          if (rc === rc1) {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n\t          } else {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n\t          }\n\t        } else {\n\t          path.push(\"M\", x0, \",\", y0);\n\t        }\n\t        if (x3 != null) {\n\t          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n\t          if (rc === rc0) {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          } else {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          }\n\t        } else {\n\t          path.push(\"L\", x2, \",\", y2);\n\t        }\n\t      } else {\n\t        path.push(\"M\", x0, \",\", y0);\n\t        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n\t        path.push(\"L\", x2, \",\", y2);\n\t        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n\t      }\n\t      path.push(\"Z\");\n\t      return path.join(\"\");\n\t    }\n\t    function circleSegment(r1, cw) {\n\t      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n\t    }\n\t    arc.innerRadius = function(v) {\n\t      if (!arguments.length) return innerRadius;\n\t      innerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.outerRadius = function(v) {\n\t      if (!arguments.length) return outerRadius;\n\t      outerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.cornerRadius = function(v) {\n\t      if (!arguments.length) return cornerRadius;\n\t      cornerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padRadius = function(v) {\n\t      if (!arguments.length) return padRadius;\n\t      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padAngle = function(v) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.centroid = function() {\n\t      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n\t      return [ Math.cos(a) * r, Math.sin(a) * r ];\n\t    };\n\t    return arc;\n\t  };\n\t  var d3_svg_arcAuto = \"auto\";\n\t  function d3_svg_arcInnerRadius(d) {\n\t    return d.innerRadius;\n\t  }\n\t  function d3_svg_arcOuterRadius(d) {\n\t    return d.outerRadius;\n\t  }\n\t  function d3_svg_arcStartAngle(d) {\n\t    return d.startAngle;\n\t  }\n\t  function d3_svg_arcEndAngle(d) {\n\t    return d.endAngle;\n\t  }\n\t  function d3_svg_arcPadAngle(d) {\n\t    return d && d.padAngle;\n\t  }\n\t  function d3_svg_arcSweep(x0, y0, x1, y1) {\n\t    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n\t  }\n\t  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n\t    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n\t    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n\t  }\n\t  function d3_svg_line(projection) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n\t    function line(data) {\n\t      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points), tension));\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n\t        } else if (points.length) {\n\t          segment();\n\t          points = [];\n\t        }\n\t      }\n\t      if (points.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    line.x = function(_) {\n\t      if (!arguments.length) return x;\n\t      x = _;\n\t      return line;\n\t    };\n\t    line.y = function(_) {\n\t      if (!arguments.length) return y;\n\t      y = _;\n\t      return line;\n\t    };\n\t    line.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return line;\n\t    };\n\t    line.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      return line;\n\t    };\n\t    line.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return line;\n\t    };\n\t    return line;\n\t  }\n\t  d3.svg.line = function() {\n\t    return d3_svg_line(d3_identity);\n\t  };\n\t  var d3_svg_lineInterpolators = d3.map({\n\t    linear: d3_svg_lineLinear,\n\t    \"linear-closed\": d3_svg_lineLinearClosed,\n\t    step: d3_svg_lineStep,\n\t    \"step-before\": d3_svg_lineStepBefore,\n\t    \"step-after\": d3_svg_lineStepAfter,\n\t    basis: d3_svg_lineBasis,\n\t    \"basis-open\": d3_svg_lineBasisOpen,\n\t    \"basis-closed\": d3_svg_lineBasisClosed,\n\t    bundle: d3_svg_lineBundle,\n\t    cardinal: d3_svg_lineCardinal,\n\t    \"cardinal-open\": d3_svg_lineCardinalOpen,\n\t    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n\t    monotone: d3_svg_lineMonotone\n\t  });\n\t  d3_svg_lineInterpolators.forEach(function(key, value) {\n\t    value.key = key;\n\t    value.closed = /-closed$/.test(key);\n\t  });\n\t  function d3_svg_lineLinear(points) {\n\t    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n\t  }\n\t  function d3_svg_lineLinearClosed(points) {\n\t    return points.join(\"L\") + \"Z\";\n\t  }\n\t  function d3_svg_lineStep(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n\t    if (n > 1) path.push(\"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepBefore(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepAfter(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineCardinalOpen(points, tension) {\n\t    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineCardinalClosed(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n\t    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n\t  }\n\t  function d3_svg_lineCardinal(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineHermite(points, tangents) {\n\t    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n\t      return d3_svg_lineLinear(points);\n\t    }\n\t    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n\t    if (quad) {\n\t      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n\t      p0 = points[1];\n\t      pi = 2;\n\t    }\n\t    if (tangents.length > 1) {\n\t      t = tangents[1];\n\t      p = points[pi];\n\t      pi++;\n\t      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      for (var i = 2; i < tangents.length; i++, pi++) {\n\t        p = points[pi];\n\t        t = tangents[i];\n\t        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      }\n\t    }\n\t    if (quad) {\n\t      var lp = points[pi];\n\t      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n\t    }\n\t    return path;\n\t  }\n\t  function d3_svg_lineCardinalTangents(points, tension) {\n\t    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n\t    while (++i < n) {\n\t      p0 = p1;\n\t      p1 = p2;\n\t      p2 = points[i];\n\t      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineBasis(points) {\n\t    if (points.length < 3) return d3_svg_lineLinear(points);\n\t    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    points.push(points[n - 1]);\n\t    while (++i <= n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    points.pop();\n\t    path.push(\"L\", pi);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisOpen(points) {\n\t    if (points.length < 4) return d3_svg_lineLinear(points);\n\t    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n\t    while (++i < 3) {\n\t      pi = points[i];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n\t    --i;\n\t    while (++i < n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisClosed(points) {\n\t    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n\t    while (++i < 4) {\n\t      pi = points[i % n];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    --i;\n\t    while (++i < m) {\n\t      pi = points[i % n];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBundle(points, tension) {\n\t    var n = points.length - 1;\n\t    if (n) {\n\t      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n\t      while (++i <= n) {\n\t        p = points[i];\n\t        t = i / n;\n\t        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n\t        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n\t      }\n\t    }\n\t    return d3_svg_lineBasis(points);\n\t  }\n\t  function d3_svg_lineDot4(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n\t  }\n\t  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n\t  function d3_svg_lineBasisBezier(path, x, y) {\n\t    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n\t  }\n\t  function d3_svg_lineSlope(p0, p1) {\n\t    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n\t  }\n\t  function d3_svg_lineFiniteDifferences(points) {\n\t    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n\t    while (++i < j) {\n\t      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n\t    }\n\t    m[i] = d;\n\t    return m;\n\t  }\n\t  function d3_svg_lineMonotoneTangents(points) {\n\t    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n\t    while (++i < j) {\n\t      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\t      if (abs(d) < ε) {\n\t        m[i] = m[i + 1] = 0;\n\t      } else {\n\t        a = m[i] / d;\n\t        b = m[i + 1] / d;\n\t        s = a * a + b * b;\n\t        if (s > 9) {\n\t          s = d * 3 / Math.sqrt(s);\n\t          m[i] = s * a;\n\t          m[i + 1] = s * b;\n\t        }\n\t      }\n\t    }\n\t    i = -1;\n\t    while (++i <= j) {\n\t      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n\t      tangents.push([ s || 0, m[i] * s || 0 ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineMonotone(points) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n\t  }\n\t  d3.svg.line.radial = function() {\n\t    var line = d3_svg_line(d3_svg_lineRadial);\n\t    line.radius = line.x, delete line.x;\n\t    line.angle = line.y, delete line.y;\n\t    return line;\n\t  };\n\t  function d3_svg_lineRadial(points) {\n\t    var point, i = -1, n = points.length, r, a;\n\t    while (++i < n) {\n\t      point = points[i];\n\t      r = point[0];\n\t      a = point[1] - halfπ;\n\t      point[0] = r * Math.cos(a);\n\t      point[1] = r * Math.sin(a);\n\t    }\n\t    return points;\n\t  }\n\t  function d3_svg_area(projection) {\n\t    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n\t    function area(data) {\n\t      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n\t        return x;\n\t      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n\t        return y;\n\t      } : d3_functor(y1), x, y;\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n\t          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n\t        } else if (points0.length) {\n\t          segment();\n\t          points0 = [];\n\t          points1 = [];\n\t        }\n\t      }\n\t      if (points0.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    area.x = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x0 = x1 = _;\n\t      return area;\n\t    };\n\t    area.x0 = function(_) {\n\t      if (!arguments.length) return x0;\n\t      x0 = _;\n\t      return area;\n\t    };\n\t    area.x1 = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x1 = _;\n\t      return area;\n\t    };\n\t    area.y = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y0 = y1 = _;\n\t      return area;\n\t    };\n\t    area.y0 = function(_) {\n\t      if (!arguments.length) return y0;\n\t      y0 = _;\n\t      return area;\n\t    };\n\t    area.y1 = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y1 = _;\n\t      return area;\n\t    };\n\t    area.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return area;\n\t    };\n\t    area.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      interpolateReverse = interpolate.reverse || interpolate;\n\t      L = interpolate.closed ? \"M\" : \"L\";\n\t      return area;\n\t    };\n\t    area.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return area;\n\t    };\n\t    return area;\n\t  }\n\t  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n\t  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\t  d3.svg.area = function() {\n\t    return d3_svg_area(d3_identity);\n\t  };\n\t  d3.svg.area.radial = function() {\n\t    var area = d3_svg_area(d3_svg_lineRadial);\n\t    area.radius = area.x, delete area.x;\n\t    area.innerRadius = area.x0, delete area.x0;\n\t    area.outerRadius = area.x1, delete area.x1;\n\t    area.angle = area.y, delete area.y;\n\t    area.startAngle = area.y0, delete area.y0;\n\t    area.endAngle = area.y1, delete area.y1;\n\t    return area;\n\t  };\n\t  d3.svg.chord = function() {\n\t    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\t    function chord(d, i) {\n\t      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n\t      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n\t    }\n\t    function subgroup(self, f, d, i) {\n\t      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n\t      return {\n\t        r: r,\n\t        a0: a0,\n\t        a1: a1,\n\t        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n\t        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n\t      };\n\t    }\n\t    function equals(a, b) {\n\t      return a.a0 == b.a0 && a.a1 == b.a1;\n\t    }\n\t    function arc(r, p, a) {\n\t      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n\t    }\n\t    function curve(r0, p0, r1, p1) {\n\t      return \"Q 0,0 \" + p1;\n\t    }\n\t    chord.radius = function(v) {\n\t      if (!arguments.length) return radius;\n\t      radius = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.source = function(v) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.target = function(v) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    return chord;\n\t  };\n\t  function d3_svg_chordRadius(d) {\n\t    return d.radius;\n\t  }\n\t  d3.svg.diagonal = function() {\n\t    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n\t    function diagonal(d, i) {\n\t      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n\t        x: p0.x,\n\t        y: m\n\t      }, {\n\t        x: p3.x,\n\t        y: m\n\t      }, p3 ];\n\t      p = p.map(projection);\n\t      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n\t    }\n\t    diagonal.source = function(x) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.target = function(x) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.projection = function(x) {\n\t      if (!arguments.length) return projection;\n\t      projection = x;\n\t      return diagonal;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalProjection(d) {\n\t    return [ d.x, d.y ];\n\t  }\n\t  d3.svg.diagonal.radial = function() {\n\t    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n\t    diagonal.projection = function(x) {\n\t      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalRadialProjection(projection) {\n\t    return function() {\n\t      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n\t      return [ r * Math.cos(a), r * Math.sin(a) ];\n\t    };\n\t  }\n\t  d3.svg.symbol = function() {\n\t    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n\t    function symbol(d, i) {\n\t      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n\t    }\n\t    symbol.type = function(x) {\n\t      if (!arguments.length) return type;\n\t      type = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    symbol.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    return symbol;\n\t  };\n\t  function d3_svg_symbolSize() {\n\t    return 64;\n\t  }\n\t  function d3_svg_symbolType() {\n\t    return \"circle\";\n\t  }\n\t  function d3_svg_symbolCircle(size) {\n\t    var r = Math.sqrt(size / π);\n\t    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n\t  }\n\t  var d3_svg_symbols = d3.map({\n\t    circle: d3_svg_symbolCircle,\n\t    cross: function(size) {\n\t      var r = Math.sqrt(size / 5) / 2;\n\t      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n\t    },\n\t    diamond: function(size) {\n\t      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n\t    },\n\t    square: function(size) {\n\t      var r = Math.sqrt(size) / 2;\n\t      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n\t    },\n\t    \"triangle-down\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n\t    },\n\t    \"triangle-up\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n\t    }\n\t  });\n\t  d3.svg.symbolTypes = d3_svg_symbols.keys();\n\t  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\t  d3_selectionPrototype.transition = function(name) {\n\t    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n\t      time: Date.now(),\n\t      ease: d3_ease_cubicInOut,\n\t      delay: 0,\n\t      duration: 250\n\t    };\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_selectionPrototype.interrupt = function(name) {\n\t    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n\t  };\n\t  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n\t  function d3_selection_interruptNS(ns) {\n\t    return function() {\n\t      var lock, activeId, active;\n\t      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n\t        active.timer.c = null;\n\t        active.timer.t = NaN;\n\t        if (--lock.count) delete lock[activeId]; else delete this[ns];\n\t        lock.active += .5;\n\t        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n\t      }\n\t    };\n\t  }\n\t  function d3_transition(groups, ns, id) {\n\t    d3_subclass(groups, d3_transitionPrototype);\n\t    groups.namespace = ns;\n\t    groups.id = id;\n\t    return groups;\n\t  }\n\t  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n\t  d3_transitionPrototype.call = d3_selectionPrototype.call;\n\t  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_transitionPrototype.node = d3_selectionPrototype.node;\n\t  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\t  d3.transition = function(selection, name) {\n\t    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n\t  };\n\t  d3.transition.prototype = d3_transitionPrototype;\n\t  d3_transitionPrototype.select = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n\t          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n\t          subgroup.push(subnode);\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.selectAll = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id];\n\t          subnodes = selector.call(node, node.__data__, i, j);\n\t          subgroups.push(subgroup = []);\n\t          for (var k = -1, o = subnodes.length; ++k < o; ) {\n\t            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n\t            subgroup.push(subnode);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, this.namespace, this.id);\n\t  };\n\t  d3_transitionPrototype.tween = function(name, tween) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n\t    return d3_selection_each(this, tween == null ? function(node) {\n\t      node[ns][id].tween.remove(name);\n\t    } : function(node) {\n\t      node[ns][id].tween.set(name, tween);\n\t    });\n\t  };\n\t  function d3_transition_tween(groups, name, value, tween) {\n\t    var id = groups.id, ns = groups.namespace;\n\t    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n\t    } : (value = tween(value), function(node) {\n\t      node[ns][id].tween.set(name, value);\n\t    }));\n\t  }\n\t  d3_transitionPrototype.attr = function(nameNS, value) {\n\t    if (arguments.length < 2) {\n\t      for (value in nameNS) this.attr(value, nameNS[value]);\n\t      return this;\n\t    }\n\t    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrTween(b) {\n\t      return b == null ? attrNull : (b += \"\", function() {\n\t        var a = this.getAttribute(name), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttribute(name, i(t));\n\t        });\n\t      });\n\t    }\n\t    function attrTweenNS(b) {\n\t      return b == null ? attrNullNS : (b += \"\", function() {\n\t        var a = this.getAttributeNS(name.space, name.local), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttributeNS(name.space, name.local, i(t));\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n\t    var name = d3.ns.qualify(nameNS);\n\t    function attrTween(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttribute(name));\n\t      return f && function(t) {\n\t        this.setAttribute(name, f(t));\n\t      };\n\t    }\n\t    function attrTweenNS(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n\t      return f && function(t) {\n\t        this.setAttributeNS(name.space, name.local, f(t));\n\t      };\n\t    }\n\t    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.style(priority, name[priority], value);\n\t        return this;\n\t      }\n\t      priority = \"\";\n\t    }\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleString(b) {\n\t      return b == null ? styleNull : (b += \"\", function() {\n\t        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n\t        return a !== b && (i = d3_interpolate(a, b), function(t) {\n\t          this.style.setProperty(name, i(t), priority);\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n\t  };\n\t  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n\t    if (arguments.length < 3) priority = \"\";\n\t    function styleTween(d, i) {\n\t      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n\t      return f && function(t) {\n\t        this.style.setProperty(name, f(t), priority);\n\t      };\n\t    }\n\t    return this.tween(\"style.\" + name, styleTween);\n\t  };\n\t  d3_transitionPrototype.text = function(value) {\n\t    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n\t  };\n\t  function d3_transition_text(b) {\n\t    if (b == null) b = \"\";\n\t    return function() {\n\t      this.textContent = b;\n\t    };\n\t  }\n\t  d3_transitionPrototype.remove = function() {\n\t    var ns = this.namespace;\n\t    return this.each(\"end.transition\", function() {\n\t      var p;\n\t      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n\t    });\n\t  };\n\t  d3_transitionPrototype.ease = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].ease;\n\t    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n\t    return d3_selection_each(this, function(node) {\n\t      node[ns][id].ease = value;\n\t    });\n\t  };\n\t  d3_transitionPrototype.delay = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].delay;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n\t    } : (value = +value, function(node) {\n\t      node[ns][id].delay = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.duration = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].duration;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n\t    } : (value = Math.max(1, value), function(node) {\n\t      node[ns][id].duration = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.each = function(type, listener) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) {\n\t      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n\t      try {\n\t        d3_transitionInheritId = id;\n\t        d3_selection_each(this, function(node, i, j) {\n\t          d3_transitionInherit = node[ns][id];\n\t          type.call(node, node.__data__, i, j);\n\t        });\n\t      } finally {\n\t        d3_transitionInherit = inherit;\n\t        d3_transitionInheritId = inheritId;\n\t      }\n\t    } else {\n\t      d3_selection_each(this, function(node) {\n\t        var transition = node[ns][id];\n\t        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n\t      });\n\t    }\n\t    return this;\n\t  };\n\t  d3_transitionPrototype.transition = function() {\n\t    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id0];\n\t          d3_transitionNode(node, i, ns, id1, {\n\t            time: transition.time,\n\t            ease: transition.ease,\n\t            delay: transition.delay + transition.duration,\n\t            duration: transition.duration\n\t          });\n\t        }\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id1);\n\t  };\n\t  function d3_transitionNamespace(name) {\n\t    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n\t  }\n\t  function d3_transitionNode(node, i, ns, id, inherit) {\n\t    var lock = node[ns] || (node[ns] = {\n\t      active: 0,\n\t      count: 0\n\t    }), transition = lock[id], time, timer, duration, ease, tweens;\n\t    function schedule(elapsed) {\n\t      var delay = transition.delay;\n\t      timer.t = delay + time;\n\t      if (delay <= elapsed) return start(elapsed - delay);\n\t      timer.c = start;\n\t    }\n\t    function start(elapsed) {\n\t      var activeId = lock.active, active = lock[activeId];\n\t      if (active) {\n\t        active.timer.c = null;\n\t        active.timer.t = NaN;\n\t        --lock.count;\n\t        delete lock[activeId];\n\t        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n\t      }\n\t      for (var cancelId in lock) {\n\t        if (+cancelId < id) {\n\t          var cancel = lock[cancelId];\n\t          cancel.timer.c = null;\n\t          cancel.timer.t = NaN;\n\t          --lock.count;\n\t          delete lock[cancelId];\n\t        }\n\t      }\n\t      timer.c = tick;\n\t      d3_timer(function() {\n\t        if (timer.c && tick(elapsed || 1)) {\n\t          timer.c = null;\n\t          timer.t = NaN;\n\t        }\n\t        return 1;\n\t      }, 0, time);\n\t      lock.active = id;\n\t      transition.event && transition.event.start.call(node, node.__data__, i);\n\t      tweens = [];\n\t      transition.tween.forEach(function(key, value) {\n\t        if (value = value.call(node, node.__data__, i)) {\n\t          tweens.push(value);\n\t        }\n\t      });\n\t      ease = transition.ease;\n\t      duration = transition.duration;\n\t    }\n\t    function tick(elapsed) {\n\t      var t = elapsed / duration, e = ease(t), n = tweens.length;\n\t      while (n > 0) {\n\t        tweens[--n].call(node, e);\n\t      }\n\t      if (t >= 1) {\n\t        transition.event && transition.event.end.call(node, node.__data__, i);\n\t        if (--lock.count) delete lock[id]; else delete node[ns];\n\t        return 1;\n\t      }\n\t    }\n\t    if (!transition) {\n\t      time = inherit.time;\n\t      timer = d3_timer(schedule, 0, time);\n\t      transition = lock[id] = {\n\t        tween: new d3_Map(),\n\t        time: time,\n\t        timer: timer,\n\t        delay: inherit.delay,\n\t        duration: inherit.duration,\n\t        ease: inherit.ease,\n\t        index: i\n\t      };\n\t      inherit = null;\n\t      ++lock.count;\n\t    }\n\t  }\n\t  d3.svg.axis = function() {\n\t    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n\t    function axis(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this);\n\t        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n\t        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n\t        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n\t        d3.transition(path));\n\t        tickEnter.append(\"line\");\n\t        tickEnter.append(\"text\");\n\t        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n\t        if (orient === \"bottom\" || orient === \"top\") {\n\t          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n\t          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n\t          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n\t        } else {\n\t          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n\t          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n\t          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n\t        }\n\t        lineEnter.attr(y2, sign * innerTickSize);\n\t        textEnter.attr(y1, sign * tickSpacing);\n\t        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n\t        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n\t        if (scale1.rangeBand) {\n\t          var x = scale1, dx = x.rangeBand() / 2;\n\t          scale0 = scale1 = function(d) {\n\t            return x(d) + dx;\n\t          };\n\t        } else if (scale0.rangeBand) {\n\t          scale0 = scale1;\n\t        } else {\n\t          tickExit.call(tickTransform, scale1, scale0);\n\t        }\n\t        tickEnter.call(tickTransform, scale0, scale1);\n\t        tickUpdate.call(tickTransform, scale1, scale1);\n\t      });\n\t    }\n\t    axis.scale = function(x) {\n\t      if (!arguments.length) return scale;\n\t      scale = x;\n\t      return axis;\n\t    };\n\t    axis.orient = function(x) {\n\t      if (!arguments.length) return orient;\n\t      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n\t      return axis;\n\t    };\n\t    axis.ticks = function() {\n\t      if (!arguments.length) return tickArguments_;\n\t      tickArguments_ = d3_array(arguments);\n\t      return axis;\n\t    };\n\t    axis.tickValues = function(x) {\n\t      if (!arguments.length) return tickValues;\n\t      tickValues = x;\n\t      return axis;\n\t    };\n\t    axis.tickFormat = function(x) {\n\t      if (!arguments.length) return tickFormat_;\n\t      tickFormat_ = x;\n\t      return axis;\n\t    };\n\t    axis.tickSize = function(x) {\n\t      var n = arguments.length;\n\t      if (!n) return innerTickSize;\n\t      innerTickSize = +x;\n\t      outerTickSize = +arguments[n - 1];\n\t      return axis;\n\t    };\n\t    axis.innerTickSize = function(x) {\n\t      if (!arguments.length) return innerTickSize;\n\t      innerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.outerTickSize = function(x) {\n\t      if (!arguments.length) return outerTickSize;\n\t      outerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.tickPadding = function(x) {\n\t      if (!arguments.length) return tickPadding;\n\t      tickPadding = +x;\n\t      return axis;\n\t    };\n\t    axis.tickSubdivide = function() {\n\t      return arguments.length && axis;\n\t    };\n\t    return axis;\n\t  };\n\t  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n\t    top: 1,\n\t    right: 1,\n\t    bottom: 1,\n\t    left: 1\n\t  };\n\t  function d3_svg_axisX(selection, x0, x1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = x0(d);\n\t      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n\t    });\n\t  }\n\t  function d3_svg_axisY(selection, y0, y1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = y0(d);\n\t      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n\t    });\n\t  }\n\t  d3.svg.brush = function() {\n\t    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n\t    function brush(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n\t        var background = g.selectAll(\".background\").data([ 0 ]);\n\t        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n\t        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n\t        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n\t        resize.exit().remove();\n\t        resize.enter().append(\"g\").attr(\"class\", function(d) {\n\t          return \"resize \" + d;\n\t        }).style(\"cursor\", function(d) {\n\t          return d3_svg_brushCursor[d];\n\t        }).append(\"rect\").attr(\"x\", function(d) {\n\t          return /[ew]$/.test(d) ? -3 : null;\n\t        }).attr(\"y\", function(d) {\n\t          return /^[ns]/.test(d) ? -3 : null;\n\t        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n\t        resize.style(\"display\", brush.empty() ? \"none\" : null);\n\t        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n\t        if (x) {\n\t          range = d3_scaleRange(x);\n\t          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n\t          redrawX(gUpdate);\n\t        }\n\t        if (y) {\n\t          range = d3_scaleRange(y);\n\t          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n\t          redrawY(gUpdate);\n\t        }\n\t        redraw(gUpdate);\n\t      });\n\t    }\n\t    brush.event = function(g) {\n\t      g.each(function() {\n\t        var event_ = event.of(this, arguments), extent1 = {\n\t          x: xExtent,\n\t          y: yExtent,\n\t          i: xExtentDomain,\n\t          j: yExtentDomain\n\t        }, extent0 = this.__chart__ || extent1;\n\t        this.__chart__ = extent1;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.brush\", function() {\n\t            xExtentDomain = extent0.i;\n\t            yExtentDomain = extent0.j;\n\t            xExtent = extent0.x;\n\t            yExtent = extent0.y;\n\t            event_({\n\t              type: \"brushstart\"\n\t            });\n\t          }).tween(\"brush:brush\", function() {\n\t            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n\t            xExtentDomain = yExtentDomain = null;\n\t            return function(t) {\n\t              xExtent = extent1.x = xi(t);\n\t              yExtent = extent1.y = yi(t);\n\t              event_({\n\t                type: \"brush\",\n\t                mode: \"resize\"\n\t              });\n\t            };\n\t          }).each(\"end.brush\", function() {\n\t            xExtentDomain = extent1.i;\n\t            yExtentDomain = extent1.j;\n\t            event_({\n\t              type: \"brush\",\n\t              mode: \"resize\"\n\t            });\n\t            event_({\n\t              type: \"brushend\"\n\t            });\n\t          });\n\t        } else {\n\t          event_({\n\t            type: \"brushstart\"\n\t          });\n\t          event_({\n\t            type: \"brush\",\n\t            mode: \"resize\"\n\t          });\n\t          event_({\n\t            type: \"brushend\"\n\t          });\n\t        }\n\t      });\n\t    };\n\t    function redraw(g) {\n\t      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n\t        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n\t      });\n\t    }\n\t    function redrawX(g) {\n\t      g.select(\".extent\").attr(\"x\", xExtent[0]);\n\t      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n\t    }\n\t    function redrawY(g) {\n\t      g.select(\".extent\").attr(\"y\", yExtent[0]);\n\t      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n\t    }\n\t    function brushstart() {\n\t      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n\t      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\t      if (d3.event.changedTouches) {\n\t        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n\t      } else {\n\t        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n\t      }\n\t      g.interrupt().selectAll(\"*\").interrupt();\n\t      if (dragging) {\n\t        origin[0] = xExtent[0] - origin[0];\n\t        origin[1] = yExtent[0] - origin[1];\n\t      } else if (resizing) {\n\t        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n\t        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n\t        origin[0] = xExtent[ex];\n\t        origin[1] = yExtent[ey];\n\t      } else if (d3.event.altKey) center = origin.slice();\n\t      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n\t      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n\t      event_({\n\t        type: \"brushstart\"\n\t      });\n\t      brushmove();\n\t      function keydown() {\n\t        if (d3.event.keyCode == 32) {\n\t          if (!dragging) {\n\t            center = null;\n\t            origin[0] -= xExtent[1];\n\t            origin[1] -= yExtent[1];\n\t            dragging = 2;\n\t          }\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function keyup() {\n\t        if (d3.event.keyCode == 32 && dragging == 2) {\n\t          origin[0] += xExtent[1];\n\t          origin[1] += yExtent[1];\n\t          dragging = 0;\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function brushmove() {\n\t        var point = d3.mouse(target), moved = false;\n\t        if (offset) {\n\t          point[0] += offset[0];\n\t          point[1] += offset[1];\n\t        }\n\t        if (!dragging) {\n\t          if (d3.event.altKey) {\n\t            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n\t            origin[0] = xExtent[+(point[0] < center[0])];\n\t            origin[1] = yExtent[+(point[1] < center[1])];\n\t          } else center = null;\n\t        }\n\t        if (resizingX && move1(point, x, 0)) {\n\t          redrawX(g);\n\t          moved = true;\n\t        }\n\t        if (resizingY && move1(point, y, 1)) {\n\t          redrawY(g);\n\t          moved = true;\n\t        }\n\t        if (moved) {\n\t          redraw(g);\n\t          event_({\n\t            type: \"brush\",\n\t            mode: dragging ? \"move\" : \"resize\"\n\t          });\n\t        }\n\t      }\n\t      function move1(point, scale, i) {\n\t        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n\t        if (dragging) {\n\t          r0 -= position;\n\t          r1 -= size + position;\n\t        }\n\t        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\t        if (dragging) {\n\t          max = (min += position) + size;\n\t        } else {\n\t          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\t          if (position < min) {\n\t            max = min;\n\t            min = position;\n\t          } else {\n\t            max = position;\n\t          }\n\t        }\n\t        if (extent[0] != min || extent[1] != max) {\n\t          if (i) yExtentDomain = null; else xExtentDomain = null;\n\t          extent[0] = min;\n\t          extent[1] = max;\n\t          return true;\n\t        }\n\t      }\n\t      function brushend() {\n\t        brushmove();\n\t        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n\t        d3.select(\"body\").style(\"cursor\", null);\n\t        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n\t        dragRestore();\n\t        event_({\n\t          type: \"brushend\"\n\t        });\n\t      }\n\t    }\n\t    brush.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.clamp = function(z) {\n\t      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n\t      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n\t      return brush;\n\t    };\n\t    brush.extent = function(z) {\n\t      var x0, x1, y0, y1, t;\n\t      if (!arguments.length) {\n\t        if (x) {\n\t          if (xExtentDomain) {\n\t            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n\t          } else {\n\t            x0 = xExtent[0], x1 = xExtent[1];\n\t            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n\t            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t          }\n\t        }\n\t        if (y) {\n\t          if (yExtentDomain) {\n\t            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n\t          } else {\n\t            y0 = yExtent[0], y1 = yExtent[1];\n\t            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n\t            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t          }\n\t        }\n\t        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n\t      }\n\t      if (x) {\n\t        x0 = z[0], x1 = z[1];\n\t        if (y) x0 = x0[0], x1 = x1[0];\n\t        xExtentDomain = [ x0, x1 ];\n\t        if (x.invert) x0 = x(x0), x1 = x(x1);\n\t        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n\t      }\n\t      if (y) {\n\t        y0 = z[0], y1 = z[1];\n\t        if (x) y0 = y0[1], y1 = y1[1];\n\t        yExtentDomain = [ y0, y1 ];\n\t        if (y.invert) y0 = y(y0), y1 = y(y1);\n\t        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n\t      }\n\t      return brush;\n\t    };\n\t    brush.clear = function() {\n\t      if (!brush.empty()) {\n\t        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n\t        xExtentDomain = yExtentDomain = null;\n\t      }\n\t      return brush;\n\t    };\n\t    brush.empty = function() {\n\t      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n\t    };\n\t    return d3.rebind(brush, event, \"on\");\n\t  };\n\t  var d3_svg_brushCursor = {\n\t    n: \"ns-resize\",\n\t    e: \"ew-resize\",\n\t    s: \"ns-resize\",\n\t    w: \"ew-resize\",\n\t    nw: \"nwse-resize\",\n\t    ne: \"nesw-resize\",\n\t    se: \"nwse-resize\",\n\t    sw: \"nesw-resize\"\n\t  };\n\t  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n\t  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n\t  var d3_time_formatUtc = d3_time_format.utc;\n\t  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n\t  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\t  function d3_time_formatIsoNative(date) {\n\t    return date.toISOString();\n\t  }\n\t  d3_time_formatIsoNative.parse = function(string) {\n\t    var date = new Date(string);\n\t    return isNaN(date) ? null : date;\n\t  };\n\t  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n\t  d3_time.second = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 1e3) * 1e3);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n\t  }, function(date) {\n\t    return date.getSeconds();\n\t  });\n\t  d3_time.seconds = d3_time.second.range;\n\t  d3_time.seconds.utc = d3_time.second.utc.range;\n\t  d3_time.minute = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 6e4) * 6e4);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n\t  }, function(date) {\n\t    return date.getMinutes();\n\t  });\n\t  d3_time.minutes = d3_time.minute.range;\n\t  d3_time.minutes.utc = d3_time.minute.utc.range;\n\t  d3_time.hour = d3_time_interval(function(date) {\n\t    var timezone = date.getTimezoneOffset() / 60;\n\t    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n\t  }, function(date) {\n\t    return date.getHours();\n\t  });\n\t  d3_time.hours = d3_time.hour.range;\n\t  d3_time.hours.utc = d3_time.hour.utc.range;\n\t  d3_time.month = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setDate(1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setMonth(date.getMonth() + offset);\n\t  }, function(date) {\n\t    return date.getMonth();\n\t  });\n\t  d3_time.months = d3_time.month.range;\n\t  d3_time.months.utc = d3_time.month.utc.range;\n\t  function d3_time_scale(linear, methods, format) {\n\t    function scale(x) {\n\t      return linear(x);\n\t    }\n\t    scale.invert = function(x) {\n\t      return d3_time_scaleDate(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n\t      linear.domain(x);\n\t      return scale;\n\t    };\n\t    function tickMethod(extent, count) {\n\t      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n\t      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n\t        return d / 31536e6;\n\t      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n\t    }\n\t    scale.nice = function(interval, skip) {\n\t      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n\t      if (method) interval = method[0], skip = method[1];\n\t      function skipped(date) {\n\t        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n\t      }\n\t      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n\t        floor: function(date) {\n\t          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n\t          return date;\n\t        },\n\t        ceil: function(date) {\n\t          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n\t          return date;\n\t        }\n\t      } : interval));\n\t    };\n\t    scale.ticks = function(interval, skip) {\n\t      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n\t        range: interval\n\t      }, skip ];\n\t      if (method) interval = method[0], skip = method[1];\n\t      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n\t    };\n\t    scale.tickFormat = function() {\n\t      return format;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_time_scale(linear.copy(), methods, format);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_time_scaleDate(t) {\n\t    return new Date(t);\n\t  }\n\t  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n\t  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n\t  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n\t    return d.getMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getDay() && d.getDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  var d3_time_scaleMilliseconds = {\n\t    range: function(start, stop, step) {\n\t      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n\t    },\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  d3_time_scaleLocalMethods.year = d3_time.year;\n\t  d3_time.scale = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n\t  };\n\t  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n\t    return [ m[0].utc, m[1] ];\n\t  });\n\t  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n\t    return d.getUTCMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getUTCSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getUTCMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getUTCHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getUTCDay() && d.getUTCDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getUTCDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getUTCMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\t  d3_time.scale.utc = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n\t  };\n\t  d3.text = d3_xhrType(function(request) {\n\t    return request.responseText;\n\t  });\n\t  d3.json = function(url, callback) {\n\t    return d3_xhr(url, \"application/json\", d3_json, callback);\n\t  };\n\t  function d3_json(request) {\n\t    return JSON.parse(request.responseText);\n\t  }\n\t  d3.html = function(url, callback) {\n\t    return d3_xhr(url, \"text/html\", d3_html, callback);\n\t  };\n\t  function d3_html(request) {\n\t    var range = d3_document.createRange();\n\t    range.selectNode(d3_document.body);\n\t    return range.createContextualFragment(request.responseText);\n\t  }\n\t  d3.xml = d3_xhrType(function(request) {\n\t    return request.responseXML;\n\t  });\n\t  if (true) this.d3 = d3, !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n\t}();\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(__dirname) {var fs = __webpack_require__(3);\n\tvar path = __webpack_require__(4);\n\t\n\tmodule.exports = new Function(\"d3\", fs.readFileSync(path.join(__dirname, \"d3.geo.projection.js\"), \"utf-8\"));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, \"/\"))\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t// resolves . and .. elements in a path array with directory names there\n\t// must be no slashes, empty elements, or device names (c:\\) in the array\n\t// (so also no leading and trailing slashes - it does not distinguish\n\t// relative and absolute paths)\n\tfunction normalizeArray(parts, allowAboveRoot) {\n\t  // if the path tries to go above the root, `up` ends up > 0\n\t  var up = 0;\n\t  for (var i = parts.length - 1; i >= 0; i--) {\n\t    var last = parts[i];\n\t    if (last === '.') {\n\t      parts.splice(i, 1);\n\t    } else if (last === '..') {\n\t      parts.splice(i, 1);\n\t      up++;\n\t    } else if (up) {\n\t      parts.splice(i, 1);\n\t      up--;\n\t    }\n\t  }\n\t\n\t  // if the path is allowed to go above the root, restore leading ..s\n\t  if (allowAboveRoot) {\n\t    for (; up--; up) {\n\t      parts.unshift('..');\n\t    }\n\t  }\n\t\n\t  return parts;\n\t}\n\t\n\t// Split a filename into [root, dir, basename, ext], unix version\n\t// 'root' is just a slash, or nothing.\n\tvar splitPathRe =\n\t    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n\tvar splitPath = function(filename) {\n\t  return splitPathRe.exec(filename).slice(1);\n\t};\n\t\n\t// path.resolve([from ...], to)\n\t// posix version\n\texports.resolve = function() {\n\t  var resolvedPath = '',\n\t      resolvedAbsolute = false;\n\t\n\t  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n\t    var path = (i >= 0) ? arguments[i] : process.cwd();\n\t\n\t    // Skip empty and invalid entries\n\t    if (typeof path !== 'string') {\n\t      throw new TypeError('Arguments to path.resolve must be strings');\n\t    } else if (!path) {\n\t      continue;\n\t    }\n\t\n\t    resolvedPath = path + '/' + resolvedPath;\n\t    resolvedAbsolute = path.charAt(0) === '/';\n\t  }\n\t\n\t  // At this point the path should be resolved to a full absolute path, but\n\t  // handle relative paths to be safe (might happen when process.cwd() fails)\n\t\n\t  // Normalize the path\n\t  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n\t    return !!p;\n\t  }), !resolvedAbsolute).join('/');\n\t\n\t  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n\t};\n\t\n\t// path.normalize(path)\n\t// posix version\n\texports.normalize = function(path) {\n\t  var isAbsolute = exports.isAbsolute(path),\n\t      trailingSlash = substr(path, -1) === '/';\n\t\n\t  // Normalize the path\n\t  path = normalizeArray(filter(path.split('/'), function(p) {\n\t    return !!p;\n\t  }), !isAbsolute).join('/');\n\t\n\t  if (!path && !isAbsolute) {\n\t    path = '.';\n\t  }\n\t  if (path && trailingSlash) {\n\t    path += '/';\n\t  }\n\t\n\t  return (isAbsolute ? '/' : '') + path;\n\t};\n\t\n\t// posix version\n\texports.isAbsolute = function(path) {\n\t  return path.charAt(0) === '/';\n\t};\n\t\n\t// posix version\n\texports.join = function() {\n\t  var paths = Array.prototype.slice.call(arguments, 0);\n\t  return exports.normalize(filter(paths, function(p, index) {\n\t    if (typeof p !== 'string') {\n\t      throw new TypeError('Arguments to path.join must be strings');\n\t    }\n\t    return p;\n\t  }).join('/'));\n\t};\n\t\n\t\n\t// path.relative(from, to)\n\t// posix version\n\texports.relative = function(from, to) {\n\t  from = exports.resolve(from).substr(1);\n\t  to = exports.resolve(to).substr(1);\n\t\n\t  function trim(arr) {\n\t    var start = 0;\n\t    for (; start < arr.length; start++) {\n\t      if (arr[start] !== '') break;\n\t    }\n\t\n\t    var end = arr.length - 1;\n\t    for (; end >= 0; end--) {\n\t      if (arr[end] !== '') break;\n\t    }\n\t\n\t    if (start > end) return [];\n\t    return arr.slice(start, end - start + 1);\n\t  }\n\t\n\t  var fromParts = trim(from.split('/'));\n\t  var toParts = trim(to.split('/'));\n\t\n\t  var length = Math.min(fromParts.length, toParts.length);\n\t  var samePartsLength = length;\n\t  for (var i = 0; i < length; i++) {\n\t    if (fromParts[i] !== toParts[i]) {\n\t      samePartsLength = i;\n\t      break;\n\t    }\n\t  }\n\t\n\t  var outputParts = [];\n\t  for (var i = samePartsLength; i < fromParts.length; i++) {\n\t    outputParts.push('..');\n\t  }\n\t\n\t  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\t\n\t  return outputParts.join('/');\n\t};\n\t\n\texports.sep = '/';\n\texports.delimiter = ':';\n\t\n\texports.dirname = function(path) {\n\t  var result = splitPath(path),\n\t      root = result[0],\n\t      dir = result[1];\n\t\n\t  if (!root && !dir) {\n\t    // No dirname whatsoever\n\t    return '.';\n\t  }\n\t\n\t  if (dir) {\n\t    // It has a dirname, strip trailing slash\n\t    dir = dir.substr(0, dir.length - 1);\n\t  }\n\t\n\t  return root + dir;\n\t};\n\t\n\t\n\texports.basename = function(path, ext) {\n\t  var f = splitPath(path)[2];\n\t  // TODO: make this comparison case-insensitive on windows?\n\t  if (ext && f.substr(-1 * ext.length) === ext) {\n\t    f = f.substr(0, f.length - ext.length);\n\t  }\n\t  return f;\n\t};\n\t\n\t\n\texports.extname = function(path) {\n\t  return splitPath(path)[3];\n\t};\n\t\n\tfunction filter (xs, f) {\n\t    if (xs.filter) return xs.filter(f);\n\t    var res = [];\n\t    for (var i = 0; i < xs.length; i++) {\n\t        if (f(xs[i], i, xs)) res.push(xs[i]);\n\t    }\n\t    return res;\n\t}\n\t\n\t// String.prototype.substr - negative index don't work in IE8\n\tvar substr = 'ab'.substr(-1) === 'b'\n\t    ? function (str, start, len) { return str.substr(start, len) }\n\t    : function (str, start, len) {\n\t        if (start < 0) start = str.length + start;\n\t        return str.substr(start, len);\n\t    }\n\t;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\t\n\tvar process = module.exports = {};\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = setTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    clearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        setTimeout(drainQueue, 0);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** xxi-svg-map.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 015c8351b2b82c9f161f\n **/","import d3 from 'd3';\nrequire('d3-geo-projection')(d3);\n// import topojson from 'topojson';\n\nexport default class SVGMap {\n\n  constructor(selector, {\n        file,\n        width,\n        height,\n        scale = 135,\n        center = [70, -35],\n        ...options}) {\n\n    if (selector === '') {\n      throw new Error('There has to be a selector');\n    }\n\n    this._selector = selector;\n    this._file = file;\n    this._width = width;\n    this._height = height;\n\n    // Creating the base of the projection\n    this._projection = d3.geo.bromley()\n                            .center(center)\n                            .scale(scale);\n\n    this._path = d3.geo.path().projection(this.projection);\n\n  }\n\n  get name() { return this._name; }\n  get width() { return this._width; }\n  get height() { return this._height; }\n  get selector() { return this._selector; }\n  get projection() { return this._projection; }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","!function() {\n  var d3 = {\n    version: \"3.5.16\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/d3/d3.js\n ** module id = 1\n ** module chunks = 0\n **/","var fs = require(\"fs\");\nvar path = require(\"path\");\n\nmodule.exports = new Function(\"d3\", fs.readFileSync(path.join(__dirname, \"d3.geo.projection.js\"), \"utf-8\"));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/d3-geo-projection/index.js\n ** module id = 2\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/path-browserify/index.js\n ** module id = 4\n ** module chunks = 0\n **/","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/process/browser.js\n ** module id = 5\n ** module chunks = 0\n **/"],"sourceRoot":""}