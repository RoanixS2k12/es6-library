{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///xxi-svg-map.min.js","webpack:///webpack/bootstrap a9a88b4db0acbad72b7e","webpack:///./src/index.js","webpack:///./~/d3/d3.js","webpack:///./~/topojson/build/topojson.js","webpack:///./~/d3-geo-projection/index.js","webpack:///./~/path-browserify/index.js","webpack:///./~/process/browser.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_objectWithoutProperties","keys","target","i","indexOf","Object","prototype","hasOwnProperty","_classCallCheck","instance","Constructor","TypeError","setupMap","object","width","height","Promise","resolve","reject","svg","append","attr","defineProperty","value","_createClass","defineProperties","props","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","_d","_d2","_topojson","_topojson2","SVGMap","_ref","file","_ref$scale","scale","undefined","_ref$center","center","Error","_object","_file","_width","_height","_projection","geo","bromley","_path","path","projection","createSVG","bind","_this","then","_this2","world","_this3","g","selectAll","data","feature","objects","countries","features","enter","d","map","get","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3_documentElement","node","ownerDocument","document","documentElement","d3_window","defaultView","d3_ascending","a","b","NaN","d3_number","x","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","arguments","mid","right","d3_transposeLength","d3_range_integerScale","k","d3_class","ctor","properties","d3_Map","_","create","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","slice","d3_map_has","d3_map_remove","d3_map_keys","push","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","source","method","apply","d3_vendorSymbol","name","charAt","toUpperCase","n","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","l","z","listeners","on","listenerByName","listener","concat","remove","set","d3_eventPreventDefault","d3","preventDefault","d3_eventSource","s","e","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","type","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","replace","d3_selection_classedRe","RegExp","requote","d3_selection_classes","split","d3_selection_classed","classedConstant","classedFunction","d3_selection_classedName","re","classList","add","getAttribute","lastIndex","test","d3_selection_style","priority","styleNull","style","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","d3_nsXhtml","createElement","createElementNS","createNS","d3_selectionRemove","parent","parentNode","removeChild","d3_selection_dataNode","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","callback","j","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","i0","j0","update","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","wrap","d3_array","addEventListener","removeAll","match","d3_selection_onListener","filter","d3_selection_onFilters","d3_selection_onFilter","o","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","select","d3_event_dragSelect","suppressClick","off","setTimeout","d3_mousePoint","container","changedTouches","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","window","scrollX","scrollY","position","top","margin","padding","border","ctm","getScreenCTM","f","pageX","y","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","Math","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","v","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","r","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","max","toString","min","format","hsl","color","exec","toLowerCase","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","result","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","forEach","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer","delay","Date","now","time","timer","t","d3_timer_queueTail","d3_timer_queueHead","d3_timer_interval","d3_timer_timeout","clearTimeout","d3_timer_frame","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","Infinity","d3_format_precision","ceil","log","LN10","d3_formatPrefix","abs","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","substring","reverse","join","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","prefix","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","after","lastIndexOf","Array","d3_date_utc","UTC","d3_time_interval","step","number","date","d0","d1","offset","d3_date","range","dt","times","range_utc","utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","names","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","sort","d3_geo_clipPolygonLinkCircular","entry","points","start","current","isSubject","array","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","intersection","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","splice","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","closestPoint","minDistance2","find","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransformPop","d3_interpolateTranslate","ta","tb","d3_interpolateRotate","ra","rb","d3_interpolateSkew","wa","wb","d3_interpolateScale","ka","kb","d3_interpolateTransform","transform","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","values","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","linear","input","Number","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","has","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","activeId","active","count","interrupt","d3_transition","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","schedule","elapsed","transition","cancelId","cancel","tick","tweens","ease","duration","d3_svg_axisX","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","list","childNodes","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","transpose","matrix","row","zip","entries","arrays","merged","isArray","empty","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","__proto__","property","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","text","html","innerHTML","appendChild","insertBefore","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","datum","nextSibling","args","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","correspondingElement","origin","τε","SQRT2","ρ2","ρ4","interpolateZoom","ux0","uy0","w0","ux1","uy1","w1","coshr0","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","Function","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","flush","d3_formatPrefixes","String","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTime","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","d3_adderTemp","d3_geo_streamObjectType","Feature","FeatureCollection","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","partition","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","bottom","tops","bottoms","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","rc1","rc0","oc","kc","lc","t30","t12","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","self","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML","global","noop","absolute","relative","topology","feature$1","absolute$$","geometryType","stitchArcs","ends","dp","fragmentByEnd","fragmentByStart","stitchedArcs","fragments","emptyIndex","fg","gf","mesh","meshArcs","geomsByArc","geoms","triangle","mergeArcs","register","ring$$","polygonsByArc","exterior","components","component","sgn","indexesByArc","ij","ik","compareArea","minAreaHeap","up","down","heap","removed","presimplify","triangleArea","relative$$","maxArea","__dirname","fs","readFileSync","process","normalizeArray","parts","allowAboveRoot","last","res","splitPathRe","splitPath","filename","resolvedPath","resolvedAbsolute","cwd","normalize","isAbsolute","trailingSlash","substr","arr","fromParts","toParts","samePartsLength","outputParts","sep","dirname","dir","basename","ext","extname","str","len","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","timeout","run","Item","fun","nextTick","title","browser","env","argv","versions","addListener","once","removeListener","removeAllListeners","emit","binding","chdir","umask"],"mappings":"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","file":"xxi-svg-map.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"xxi-svg-map\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"xxi-svg-map\"] = factory();\n\telse\n\t\troot[\"xxi-svg-map\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"xxi-svg-map\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"xxi-svg-map\"] = factory();\n\telse\n\t\troot[\"xxi-svg-map\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _d = __webpack_require__(1);\n\t\n\tvar _d2 = _interopRequireDefault(_d);\n\t\n\tvar _topojson = __webpack_require__(2);\n\t\n\tvar _topojson2 = _interopRequireDefault(_topojson);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t__webpack_require__(3)(_d2.default);\n\t\n\t\n\tfunction setupMap(object, width, height) {\n\t\n\t  return new Promise(function (resolve, reject) {\n\t\n\t    var svg = object.append('svg').attr('width', width).attr('height', height);\n\t\n\t    resolve(svg);\n\t  });\n\t}\n\t\n\tvar SVGMap = function () {\n\t  function SVGMap(object, _ref) {\n\t    var file = _ref.file;\n\t    var width = _ref.width;\n\t    var height = _ref.height;\n\t    var _ref$scale = _ref.scale;\n\t    var scale = _ref$scale === undefined ? 135 : _ref$scale;\n\t    var _ref$center = _ref.center;\n\t    var center = _ref$center === undefined ? [70, -35] : _ref$center;\n\t\n\t    var options = _objectWithoutProperties(_ref, ['file', 'width', 'height', 'scale', 'center']);\n\t\n\t    _classCallCheck(this, SVGMap);\n\t\n\t    if (object === undefined || object === '') {\n\t      throw new Error('There has to be a selector');\n\t    }\n\t\n\t    if (file === undefined || file === '') {\n\t      throw new Error('You did not specified a data file');\n\t    }\n\t\n\t    this._object = object;\n\t    this._file = file;\n\t    this._width = width;\n\t    this._height = height;\n\t\n\t    // Creating the base of the projection\n\t    this._projection = _d2.default.geo.bromley().center(center).scale(scale);\n\t\n\t    this._path = _d2.default.geo.path().projection(this.projection);\n\t    this.createSVG = this.createSVG.bind(this);\n\t  }\n\t\n\t  _createClass(SVGMap, [{\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this = this;\n\t\n\t      return setupMap(this.object, this.width, this.height).then(function (svg) {\n\t        _this.svg = svg;\n\t        return svg;\n\t      });\n\t    }\n\t  }, {\n\t    key: 'fetchData',\n\t    value: function fetchData() {\n\t      var _this2 = this;\n\t\n\t      return new Promise(function (resolve, reject) {\n\t        resolve(_this2.file);\n\t      });\n\t    }\n\t  }, {\n\t    key: 'createSVG',\n\t    value: function createSVG(world) {\n\t      var _this3 = this;\n\t\n\t      var g = this.svg.append('g');\n\t\n\t      return new Promise(function (resolve, reject) {\n\t        // resolve(world);\n\t        g.selectAll('path').data(_topojson2.default.feature(world, world.objects.countries).features).enter().append('path').attr('class', function (d) {\n\t          return 'country country-' + d.id % 2;\n\t        }).attr('d', _this3.path);\n\t\n\t        resolve({ map: _this3, svg: _this3.svg });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'width',\n\t    get: function get() {\n\t      return this._width;\n\t    }\n\t  }, {\n\t    key: 'height',\n\t    get: function get() {\n\t      return this._height;\n\t    }\n\t  }, {\n\t    key: 'object',\n\t    get: function get() {\n\t      return this._object;\n\t    }\n\t  }, {\n\t    key: 'projection',\n\t    get: function get() {\n\t      return this._projection;\n\t    }\n\t  }, {\n\t    key: 'file',\n\t    get: function get() {\n\t      return this._file;\n\t    }\n\t  }]);\n\t\n\t  return SVGMap;\n\t}();\n\n\texports.default = SVGMap;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n\t  var d3 = {\n\t    version: \"3.5.16\"\n\t  };\n\t  var d3_arraySlice = [].slice, d3_array = function(list) {\n\t    return d3_arraySlice.call(list);\n\t  };\n\t  var d3_document = this.document;\n\t  function d3_documentElement(node) {\n\t    return node && (node.ownerDocument || node.document || node).documentElement;\n\t  }\n\t  function d3_window(node) {\n\t    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n\t  }\n\t  if (d3_document) {\n\t    try {\n\t      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n\t    } catch (e) {\n\t      d3_array = function(list) {\n\t        var i = list.length, array = new Array(i);\n\t        while (i--) array[i] = list[i];\n\t        return array;\n\t      };\n\t    }\n\t  }\n\t  if (!Date.now) Date.now = function() {\n\t    return +new Date();\n\t  };\n\t  if (d3_document) {\n\t    try {\n\t      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n\t    } catch (error) {\n\t      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n\t      d3_element_prototype.setAttribute = function(name, value) {\n\t        d3_element_setAttribute.call(this, name, value + \"\");\n\t      };\n\t      d3_element_prototype.setAttributeNS = function(space, local, value) {\n\t        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n\t      };\n\t      d3_style_prototype.setProperty = function(name, value, priority) {\n\t        d3_style_setProperty.call(this, name, value + \"\", priority);\n\t      };\n\t    }\n\t  }\n\t  d3.ascending = d3_ascending;\n\t  function d3_ascending(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  }\n\t  d3.descending = function(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  };\n\t  d3.min = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.max = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.extent = function(array, f) {\n\t    var i = -1, n = array.length, a, b, c;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t    return [ a, c ];\n\t  };\n\t  function d3_number(x) {\n\t    return x === null ? NaN : +x;\n\t  }\n\t  function d3_numeric(x) {\n\t    return !isNaN(x);\n\t  }\n\t  d3.sum = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n\t    }\n\t    return s;\n\t  };\n\t  d3.mean = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1, j = n;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n\t    }\n\t    if (j) return s / j;\n\t  };\n\t  d3.quantile = function(values, p) {\n\t    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n\t    return e ? v + e * (values[h] - v) : v;\n\t  };\n\t  d3.median = function(array, f) {\n\t    var numbers = [], n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n\t    }\n\t    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n\t  };\n\t  d3.variance = function(array, f) {\n\t    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(array[i]))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    }\n\t    if (j > 1) return s / (j - 1);\n\t  };\n\t  d3.deviation = function() {\n\t    var v = d3.variance.apply(this, arguments);\n\t    return v ? Math.sqrt(v) : v;\n\t  };\n\t  function d3_bisector(compare) {\n\t    return {\n\t      left: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n\t        }\n\t        return lo;\n\t      },\n\t      right: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n\t        }\n\t        return lo;\n\t      }\n\t    };\n\t  }\n\t  var d3_bisect = d3_bisector(d3_ascending);\n\t  d3.bisectLeft = d3_bisect.left;\n\t  d3.bisect = d3.bisectRight = d3_bisect.right;\n\t  d3.bisector = function(f) {\n\t    return d3_bisector(f.length === 1 ? function(d, x) {\n\t      return d3_ascending(f(d), x);\n\t    } : f);\n\t  };\n\t  d3.shuffle = function(array, i0, i1) {\n\t    if ((m = arguments.length) < 3) {\n\t      i1 = array.length;\n\t      if (m < 2) i0 = 0;\n\t    }\n\t    var m = i1 - i0, t, i;\n\t    while (m) {\n\t      i = Math.random() * m-- | 0;\n\t      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n\t    }\n\t    return array;\n\t  };\n\t  d3.permute = function(array, indexes) {\n\t    var i = indexes.length, permutes = new Array(i);\n\t    while (i--) permutes[i] = array[indexes[i]];\n\t    return permutes;\n\t  };\n\t  d3.pairs = function(array) {\n\t    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n\t    return pairs;\n\t  };\n\t  d3.transpose = function(matrix) {\n\t    if (!(n = matrix.length)) return [];\n\t    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n\t      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n\t        row[j] = matrix[j][i];\n\t      }\n\t    }\n\t    return transpose;\n\t  };\n\t  function d3_transposeLength(d) {\n\t    return d.length;\n\t  }\n\t  d3.zip = function() {\n\t    return d3.transpose(arguments);\n\t  };\n\t  d3.keys = function(map) {\n\t    var keys = [];\n\t    for (var key in map) keys.push(key);\n\t    return keys;\n\t  };\n\t  d3.values = function(map) {\n\t    var values = [];\n\t    for (var key in map) values.push(map[key]);\n\t    return values;\n\t  };\n\t  d3.entries = function(map) {\n\t    var entries = [];\n\t    for (var key in map) entries.push({\n\t      key: key,\n\t      value: map[key]\n\t    });\n\t    return entries;\n\t  };\n\t  d3.merge = function(arrays) {\n\t    var n = arrays.length, m, i = -1, j = 0, merged, array;\n\t    while (++i < n) j += arrays[i].length;\n\t    merged = new Array(j);\n\t    while (--n >= 0) {\n\t      array = arrays[n];\n\t      m = array.length;\n\t      while (--m >= 0) {\n\t        merged[--j] = array[m];\n\t      }\n\t    }\n\t    return merged;\n\t  };\n\t  var abs = Math.abs;\n\t  d3.range = function(start, stop, step) {\n\t    if (arguments.length < 3) {\n\t      step = 1;\n\t      if (arguments.length < 2) {\n\t        stop = start;\n\t        start = 0;\n\t      }\n\t    }\n\t    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n\t    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n\t    start *= k, stop *= k, step *= k;\n\t    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n\t    return range;\n\t  };\n\t  function d3_range_integerScale(x) {\n\t    var k = 1;\n\t    while (x * k % 1) k *= 10;\n\t    return k;\n\t  }\n\t  function d3_class(ctor, properties) {\n\t    for (var key in properties) {\n\t      Object.defineProperty(ctor.prototype, key, {\n\t        value: properties[key],\n\t        enumerable: false\n\t      });\n\t    }\n\t  }\n\t  d3.map = function(object, f) {\n\t    var map = new d3_Map();\n\t    if (object instanceof d3_Map) {\n\t      object.forEach(function(key, value) {\n\t        map.set(key, value);\n\t      });\n\t    } else if (Array.isArray(object)) {\n\t      var i = -1, n = object.length, o;\n\t      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n\t    } else {\n\t      for (var key in object) map.set(key, object[key]);\n\t    }\n\t    return map;\n\t  };\n\t  function d3_Map() {\n\t    this._ = Object.create(null);\n\t  }\n\t  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n\t  d3_class(d3_Map, {\n\t    has: d3_map_has,\n\t    get: function(key) {\n\t      return this._[d3_map_escape(key)];\n\t    },\n\t    set: function(key, value) {\n\t      return this._[d3_map_escape(key)] = value;\n\t    },\n\t    remove: d3_map_remove,\n\t    keys: d3_map_keys,\n\t    values: function() {\n\t      var values = [];\n\t      for (var key in this._) values.push(this._[key]);\n\t      return values;\n\t    },\n\t    entries: function() {\n\t      var entries = [];\n\t      for (var key in this._) entries.push({\n\t        key: d3_map_unescape(key),\n\t        value: this._[key]\n\t      });\n\t      return entries;\n\t    },\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n\t    }\n\t  });\n\t  function d3_map_escape(key) {\n\t    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n\t  }\n\t  function d3_map_unescape(key) {\n\t    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n\t  }\n\t  function d3_map_has(key) {\n\t    return d3_map_escape(key) in this._;\n\t  }\n\t  function d3_map_remove(key) {\n\t    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n\t  }\n\t  function d3_map_keys() {\n\t    var keys = [];\n\t    for (var key in this._) keys.push(d3_map_unescape(key));\n\t    return keys;\n\t  }\n\t  function d3_map_size() {\n\t    var size = 0;\n\t    for (var key in this._) ++size;\n\t    return size;\n\t  }\n\t  function d3_map_empty() {\n\t    for (var key in this._) return false;\n\t    return true;\n\t  }\n\t  d3.nest = function() {\n\t    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n\t    function map(mapType, array, depth) {\n\t      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n\t      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n\t      while (++i < n) {\n\t        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n\t          values.push(object);\n\t        } else {\n\t          valuesByKey.set(keyValue, [ object ]);\n\t        }\n\t      }\n\t      if (mapType) {\n\t        object = mapType();\n\t        setter = function(keyValue, values) {\n\t          object.set(keyValue, map(mapType, values, depth));\n\t        };\n\t      } else {\n\t        object = {};\n\t        setter = function(keyValue, values) {\n\t          object[keyValue] = map(mapType, values, depth);\n\t        };\n\t      }\n\t      valuesByKey.forEach(setter);\n\t      return object;\n\t    }\n\t    function entries(map, depth) {\n\t      if (depth >= keys.length) return map;\n\t      var array = [], sortKey = sortKeys[depth++];\n\t      map.forEach(function(key, keyMap) {\n\t        array.push({\n\t          key: key,\n\t          values: entries(keyMap, depth)\n\t        });\n\t      });\n\t      return sortKey ? array.sort(function(a, b) {\n\t        return sortKey(a.key, b.key);\n\t      }) : array;\n\t    }\n\t    nest.map = function(array, mapType) {\n\t      return map(mapType, array, 0);\n\t    };\n\t    nest.entries = function(array) {\n\t      return entries(map(d3.map, array, 0), 0);\n\t    };\n\t    nest.key = function(d) {\n\t      keys.push(d);\n\t      return nest;\n\t    };\n\t    nest.sortKeys = function(order) {\n\t      sortKeys[keys.length - 1] = order;\n\t      return nest;\n\t    };\n\t    nest.sortValues = function(order) {\n\t      sortValues = order;\n\t      return nest;\n\t    };\n\t    nest.rollup = function(f) {\n\t      rollup = f;\n\t      return nest;\n\t    };\n\t    return nest;\n\t  };\n\t  d3.set = function(array) {\n\t    var set = new d3_Set();\n\t    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n\t    return set;\n\t  };\n\t  function d3_Set() {\n\t    this._ = Object.create(null);\n\t  }\n\t  d3_class(d3_Set, {\n\t    has: d3_map_has,\n\t    add: function(key) {\n\t      this._[d3_map_escape(key += \"\")] = true;\n\t      return key;\n\t    },\n\t    remove: d3_map_remove,\n\t    values: d3_map_keys,\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key));\n\t    }\n\t  });\n\t  d3.behavior = {};\n\t  function d3_identity(d) {\n\t    return d;\n\t  }\n\t  d3.rebind = function(target, source) {\n\t    var i = 1, n = arguments.length, method;\n\t    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n\t    return target;\n\t  };\n\t  function d3_rebind(target, source, method) {\n\t    return function() {\n\t      var value = method.apply(source, arguments);\n\t      return value === source ? target : value;\n\t    };\n\t  }\n\t  function d3_vendorSymbol(object, name) {\n\t    if (name in object) return name;\n\t    name = name.charAt(0).toUpperCase() + name.slice(1);\n\t    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n\t      var prefixName = d3_vendorPrefixes[i] + name;\n\t      if (prefixName in object) return prefixName;\n\t    }\n\t  }\n\t  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n\t  function d3_noop() {}\n\t  d3.dispatch = function() {\n\t    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    return dispatch;\n\t  };\n\t  function d3_dispatch() {}\n\t  d3_dispatch.prototype.on = function(type, listener) {\n\t    var i = type.indexOf(\".\"), name = \"\";\n\t    if (i >= 0) {\n\t      name = type.slice(i + 1);\n\t      type = type.slice(0, i);\n\t    }\n\t    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\t    if (arguments.length === 2) {\n\t      if (listener == null) for (type in this) {\n\t        if (this.hasOwnProperty(type)) this[type].on(name, null);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t  function d3_dispatch_event(dispatch) {\n\t    var listeners = [], listenerByName = new d3_Map();\n\t    function event() {\n\t      var z = listeners, i = -1, n = z.length, l;\n\t      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n\t      return dispatch;\n\t    }\n\t    event.on = function(name, listener) {\n\t      var l = listenerByName.get(name), i;\n\t      if (arguments.length < 2) return l && l.on;\n\t      if (l) {\n\t        l.on = null;\n\t        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n\t        listenerByName.remove(name);\n\t      }\n\t      if (listener) listeners.push(listenerByName.set(name, {\n\t        on: listener\n\t      }));\n\t      return dispatch;\n\t    };\n\t    return event;\n\t  }\n\t  d3.event = null;\n\t  function d3_eventPreventDefault() {\n\t    d3.event.preventDefault();\n\t  }\n\t  function d3_eventSource() {\n\t    var e = d3.event, s;\n\t    while (s = e.sourceEvent) e = s;\n\t    return e;\n\t  }\n\t  function d3_eventDispatch(target) {\n\t    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    dispatch.of = function(thiz, argumentz) {\n\t      return function(e1) {\n\t        try {\n\t          var e0 = e1.sourceEvent = d3.event;\n\t          e1.target = target;\n\t          d3.event = e1;\n\t          dispatch[e1.type].apply(thiz, argumentz);\n\t        } finally {\n\t          d3.event = e0;\n\t        }\n\t      };\n\t    };\n\t    return dispatch;\n\t  }\n\t  d3.requote = function(s) {\n\t    return s.replace(d3_requote_re, \"\\\\$&\");\n\t  };\n\t  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n\t    object.__proto__ = prototype;\n\t  } : function(object, prototype) {\n\t    for (var property in prototype) object[property] = prototype[property];\n\t  };\n\t  function d3_selection(groups) {\n\t    d3_subclass(groups, d3_selectionPrototype);\n\t    return groups;\n\t  }\n\t  var d3_select = function(s, n) {\n\t    return n.querySelector(s);\n\t  }, d3_selectAll = function(s, n) {\n\t    return n.querySelectorAll(s);\n\t  }, d3_selectMatches = function(n, s) {\n\t    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n\t    d3_selectMatches = function(n, s) {\n\t      return d3_selectMatcher.call(n, s);\n\t    };\n\t    return d3_selectMatches(n, s);\n\t  };\n\t  if (typeof Sizzle === \"function\") {\n\t    d3_select = function(s, n) {\n\t      return Sizzle(s, n)[0] || null;\n\t    };\n\t    d3_selectAll = Sizzle;\n\t    d3_selectMatches = Sizzle.matchesSelector;\n\t  }\n\t  d3.selection = function() {\n\t    return d3.select(d3_document.documentElement);\n\t  };\n\t  var d3_selectionPrototype = d3.selection.prototype = [];\n\t  d3_selectionPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, group, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n\t          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selector(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_select(selector, this);\n\t    };\n\t  }\n\t  d3_selectionPrototype.selectAll = function(selector) {\n\t    var subgroups = [], subgroup, node;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n\t          subgroup.parentNode = node;\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selectorAll(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_selectAll(selector, this);\n\t    };\n\t  }\n\t  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n\t  var d3_nsPrefix = {\n\t    svg: \"http://www.w3.org/2000/svg\",\n\t    xhtml: d3_nsXhtml,\n\t    xlink: \"http://www.w3.org/1999/xlink\",\n\t    xml: \"http://www.w3.org/XML/1998/namespace\",\n\t    xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t  };\n\t  d3.ns = {\n\t    prefix: d3_nsPrefix,\n\t    qualify: function(name) {\n\t      var i = name.indexOf(\":\"), prefix = name;\n\t      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n\t        space: d3_nsPrefix[prefix],\n\t        local: name\n\t      } : name;\n\t    }\n\t  };\n\t  d3_selectionPrototype.attr = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node();\n\t        name = d3.ns.qualify(name);\n\t        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n\t      }\n\t      for (value in name) this.each(d3_selection_attr(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_attr(name, value));\n\t  };\n\t  function d3_selection_attr(name, value) {\n\t    name = d3.ns.qualify(name);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrConstant() {\n\t      this.setAttribute(name, value);\n\t    }\n\t    function attrConstantNS() {\n\t      this.setAttributeNS(name.space, name.local, value);\n\t    }\n\t    function attrFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n\t    }\n\t    function attrFunctionNS() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n\t    }\n\t    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n\t  }\n\t  function d3_collapse(s) {\n\t    return s.trim().replace(/\\s+/g, \" \");\n\t  }\n\t  d3_selectionPrototype.classed = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n\t        if (value = node.classList) {\n\t          while (++i < n) if (!value.contains(name[i])) return false;\n\t        } else {\n\t          value = node.getAttribute(\"class\");\n\t          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n\t        }\n\t        return true;\n\t      }\n\t      for (value in name) this.each(d3_selection_classed(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_classed(name, value));\n\t  };\n\t  function d3_selection_classedRe(name) {\n\t    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n\t  }\n\t  function d3_selection_classes(name) {\n\t    return (name + \"\").trim().split(/^|\\s+/);\n\t  }\n\t  function d3_selection_classed(name, value) {\n\t    name = d3_selection_classes(name).map(d3_selection_classedName);\n\t    var n = name.length;\n\t    function classedConstant() {\n\t      var i = -1;\n\t      while (++i < n) name[i](this, value);\n\t    }\n\t    function classedFunction() {\n\t      var i = -1, x = value.apply(this, arguments);\n\t      while (++i < n) name[i](this, x);\n\t    }\n\t    return typeof value === \"function\" ? classedFunction : classedConstant;\n\t  }\n\t  function d3_selection_classedName(name) {\n\t    var re = d3_selection_classedRe(name);\n\t    return function(node, value) {\n\t      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n\t      var c = node.getAttribute(\"class\") || \"\";\n\t      if (value) {\n\t        re.lastIndex = 0;\n\t        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n\t      } else {\n\t        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n\t      }\n\t    };\n\t  }\n\t  d3_selectionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n\t        return this;\n\t      }\n\t      if (n < 2) {\n\t        var node = this.node();\n\t        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n\t      }\n\t      priority = \"\";\n\t    }\n\t    return this.each(d3_selection_style(name, value, priority));\n\t  };\n\t  function d3_selection_style(name, value, priority) {\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleConstant() {\n\t      this.style.setProperty(name, value, priority);\n\t    }\n\t    function styleFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n\t    }\n\t    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n\t  }\n\t  d3_selectionPrototype.property = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") return this.node()[name];\n\t      for (value in name) this.each(d3_selection_property(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_property(name, value));\n\t  };\n\t  function d3_selection_property(name, value) {\n\t    function propertyNull() {\n\t      delete this[name];\n\t    }\n\t    function propertyConstant() {\n\t      this[name] = value;\n\t    }\n\t    function propertyFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) delete this[name]; else this[name] = x;\n\t    }\n\t    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n\t  }\n\t  d3_selectionPrototype.text = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.textContent = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.textContent = \"\";\n\t    } : function() {\n\t      this.textContent = value;\n\t    }) : this.node().textContent;\n\t  };\n\t  d3_selectionPrototype.html = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.innerHTML = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.innerHTML = \"\";\n\t    } : function() {\n\t      this.innerHTML = value;\n\t    }) : this.node().innerHTML;\n\t  };\n\t  d3_selectionPrototype.append = function(name) {\n\t    name = d3_selection_creator(name);\n\t    return this.select(function() {\n\t      return this.appendChild(name.apply(this, arguments));\n\t    });\n\t  };\n\t  function d3_selection_creator(name) {\n\t    function create() {\n\t      var document = this.ownerDocument, namespace = this.namespaceURI;\n\t      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n\t    }\n\t    function createNS() {\n\t      return this.ownerDocument.createElementNS(name.space, name.local);\n\t    }\n\t    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n\t  }\n\t  d3_selectionPrototype.insert = function(name, before) {\n\t    name = d3_selection_creator(name);\n\t    before = d3_selection_selector(before);\n\t    return this.select(function() {\n\t      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n\t    });\n\t  };\n\t  d3_selectionPrototype.remove = function() {\n\t    return this.each(d3_selectionRemove);\n\t  };\n\t  function d3_selectionRemove() {\n\t    var parent = this.parentNode;\n\t    if (parent) parent.removeChild(this);\n\t  }\n\t  d3_selectionPrototype.data = function(value, key) {\n\t    var i = -1, n = this.length, group, node;\n\t    if (!arguments.length) {\n\t      value = new Array(n = (group = this[0]).length);\n\t      while (++i < n) {\n\t        if (node = group[i]) {\n\t          value[i] = node.__data__;\n\t        }\n\t      }\n\t      return value;\n\t    }\n\t    function bind(group, groupData) {\n\t      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n\t      if (key) {\n\t        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n\t        for (i = -1; ++i < n; ) {\n\t          if (node = group[i]) {\n\t            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n\t              exitNodes[i] = node;\n\t            } else {\n\t              nodeByKeyValue.set(keyValue, node);\n\t            }\n\t            keyValues[i] = keyValue;\n\t          }\n\t        }\n\t        for (i = -1; ++i < m; ) {\n\t          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          } else if (node !== true) {\n\t            updateNodes[i] = node;\n\t            node.__data__ = nodeData;\n\t          }\n\t          nodeByKeyValue.set(keyValue, true);\n\t        }\n\t        for (i = -1; ++i < n; ) {\n\t          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n\t            exitNodes[i] = group[i];\n\t          }\n\t        }\n\t      } else {\n\t        for (i = -1; ++i < n0; ) {\n\t          node = group[i];\n\t          nodeData = groupData[i];\n\t          if (node) {\n\t            node.__data__ = nodeData;\n\t            updateNodes[i] = node;\n\t          } else {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          }\n\t        }\n\t        for (;i < m; ++i) {\n\t          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n\t        }\n\t        for (;i < n; ++i) {\n\t          exitNodes[i] = group[i];\n\t        }\n\t      }\n\t      enterNodes.update = updateNodes;\n\t      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n\t      enter.push(enterNodes);\n\t      update.push(updateNodes);\n\t      exit.push(exitNodes);\n\t    }\n\t    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n\t    if (typeof value === \"function\") {\n\t      while (++i < n) {\n\t        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        bind(group = this[i], value);\n\t      }\n\t    }\n\t    update.enter = function() {\n\t      return enter;\n\t    };\n\t    update.exit = function() {\n\t      return exit;\n\t    };\n\t    return update;\n\t  };\n\t  function d3_selection_dataNode(data) {\n\t    return {\n\t      __data__: data\n\t    };\n\t  }\n\t  d3_selectionPrototype.datum = function(value) {\n\t    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n\t  };\n\t  d3_selectionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_filter(selector) {\n\t    return function() {\n\t      return d3_selectMatches(this, selector);\n\t    };\n\t  }\n\t  d3_selectionPrototype.order = function() {\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n\t        if (node = group[i]) {\n\t          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t          next = node;\n\t        }\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.sort = function(comparator) {\n\t    comparator = d3_selection_sortComparator.apply(this, arguments);\n\t    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n\t    return this.order();\n\t  };\n\t  function d3_selection_sortComparator(comparator) {\n\t    if (!arguments.length) comparator = d3_ascending;\n\t    return function(a, b) {\n\t      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n\t    };\n\t  }\n\t  d3_selectionPrototype.each = function(callback) {\n\t    return d3_selection_each(this, function(node, i, j) {\n\t      callback.call(node, node.__data__, i, j);\n\t    });\n\t  };\n\t  function d3_selection_each(groups, callback) {\n\t    for (var j = 0, m = groups.length; j < m; j++) {\n\t      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n\t        if (node = group[i]) callback(node, i, j);\n\t      }\n\t    }\n\t    return groups;\n\t  }\n\t  d3_selectionPrototype.call = function(callback) {\n\t    var args = d3_array(arguments);\n\t    callback.apply(args[0] = this, args);\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.empty = function() {\n\t    return !this.node();\n\t  };\n\t  d3_selectionPrototype.node = function() {\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        var node = group[i];\n\t        if (node) return node;\n\t      }\n\t    }\n\t    return null;\n\t  };\n\t  d3_selectionPrototype.size = function() {\n\t    var n = 0;\n\t    d3_selection_each(this, function() {\n\t      ++n;\n\t    });\n\t    return n;\n\t  };\n\t  function d3_selection_enter(selection) {\n\t    d3_subclass(selection, d3_selection_enterPrototype);\n\t    return selection;\n\t  }\n\t  var d3_selection_enterPrototype = [];\n\t  d3.selection.enter = d3_selection_enter;\n\t  d3.selection.enter.prototype = d3_selection_enterPrototype;\n\t  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n\t  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n\t  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n\t  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\t  d3_selection_enterPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, upgroup, group, node;\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      upgroup = (group = this[j]).update;\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = group.parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n\t          subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  d3_selection_enterPrototype.insert = function(name, before) {\n\t    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n\t    return d3_selectionPrototype.insert.call(this, name, before);\n\t  };\n\t  function d3_selection_enterInsertBefore(enter) {\n\t    var i0, j0;\n\t    return function(d, i, j) {\n\t      var group = enter[j].update, n = group.length, node;\n\t      if (j != j0) j0 = j, i0 = 0;\n\t      if (i >= i0) i0 = i + 1;\n\t      while (!(node = group[i0]) && ++i0 < n) ;\n\t      return node;\n\t    };\n\t  }\n\t  d3.select = function(node) {\n\t    var group;\n\t    if (typeof node === \"string\") {\n\t      group = [ d3_select(node, d3_document) ];\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = [ node ];\n\t      group.parentNode = d3_documentElement(node);\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3.selectAll = function(nodes) {\n\t    var group;\n\t    if (typeof nodes === \"string\") {\n\t      group = d3_array(d3_selectAll(nodes, d3_document));\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = d3_array(nodes);\n\t      group.parentNode = null;\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3_selectionPrototype.on = function(type, listener, capture) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof type !== \"string\") {\n\t        if (n < 2) listener = false;\n\t        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n\t        return this;\n\t      }\n\t      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n\t      capture = false;\n\t    }\n\t    return this.each(d3_selection_on(type, listener, capture));\n\t  };\n\t  function d3_selection_on(type, listener, capture) {\n\t    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n\t    if (i > 0) type = type.slice(0, i);\n\t    var filter = d3_selection_onFilters.get(type);\n\t    if (filter) type = filter, wrap = d3_selection_onFilter;\n\t    function onRemove() {\n\t      var l = this[name];\n\t      if (l) {\n\t        this.removeEventListener(type, l, l.$);\n\t        delete this[name];\n\t      }\n\t    }\n\t    function onAdd() {\n\t      var l = wrap(listener, d3_array(arguments));\n\t      onRemove.call(this);\n\t      this.addEventListener(type, this[name] = l, l.$ = capture);\n\t      l._ = listener;\n\t    }\n\t    function removeAll() {\n\t      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n\t      for (var name in this) {\n\t        if (match = name.match(re)) {\n\t          var l = this[name];\n\t          this.removeEventListener(match[1], l, l.$);\n\t          delete this[name];\n\t        }\n\t      }\n\t    }\n\t    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n\t  }\n\t  var d3_selection_onFilters = d3.map({\n\t    mouseenter: \"mouseover\",\n\t    mouseleave: \"mouseout\"\n\t  });\n\t  if (d3_document) {\n\t    d3_selection_onFilters.forEach(function(k) {\n\t      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n\t    });\n\t  }\n\t  function d3_selection_onListener(listener, argumentz) {\n\t    return function(e) {\n\t      var o = d3.event;\n\t      d3.event = e;\n\t      argumentz[0] = this.__data__;\n\t      try {\n\t        listener.apply(this, argumentz);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t  }\n\t  function d3_selection_onFilter(listener, argumentz) {\n\t    var l = d3_selection_onListener(listener, argumentz);\n\t    return function(e) {\n\t      var target = this, related = e.relatedTarget;\n\t      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n\t        l.call(target, e);\n\t      }\n\t    };\n\t  }\n\t  var d3_event_dragSelect, d3_event_dragId = 0;\n\t  function d3_event_dragSuppress(node) {\n\t    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\t    if (d3_event_dragSelect == null) {\n\t      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n\t    }\n\t    if (d3_event_dragSelect) {\n\t      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n\t      style[d3_event_dragSelect] = \"none\";\n\t    }\n\t    return function(suppressClick) {\n\t      w.on(name, null);\n\t      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\t      if (suppressClick) {\n\t        var off = function() {\n\t          w.on(click, null);\n\t        };\n\t        w.on(click, function() {\n\t          d3_eventPreventDefault();\n\t          off();\n\t        }, true);\n\t        setTimeout(off, 0);\n\t      }\n\t    };\n\t  }\n\t  d3.mouse = function(container) {\n\t    return d3_mousePoint(container, d3_eventSource());\n\t  };\n\t  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n\t  function d3_mousePoint(container, e) {\n\t    if (e.changedTouches) e = e.changedTouches[0];\n\t    var svg = container.ownerSVGElement || container;\n\t    if (svg.createSVGPoint) {\n\t      var point = svg.createSVGPoint();\n\t      if (d3_mouse_bug44083 < 0) {\n\t        var window = d3_window(container);\n\t        if (window.scrollX || window.scrollY) {\n\t          svg = d3.select(\"body\").append(\"svg\").style({\n\t            position: \"absolute\",\n\t            top: 0,\n\t            left: 0,\n\t            margin: 0,\n\t            padding: 0,\n\t            border: \"none\"\n\t          }, \"important\");\n\t          var ctm = svg[0][0].getScreenCTM();\n\t          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n\t          svg.remove();\n\t        }\n\t      }\n\t      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n\t      point.y = e.clientY;\n\t      point = point.matrixTransform(container.getScreenCTM().inverse());\n\t      return [ point.x, point.y ];\n\t    }\n\t    var rect = container.getBoundingClientRect();\n\t    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n\t  }\n\t  d3.touch = function(container, touches, identifier) {\n\t    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n\t    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n\t      if ((touch = touches[i]).identifier === identifier) {\n\t        return d3_mousePoint(container, touch);\n\t      }\n\t    }\n\t  };\n\t  d3.behavior.drag = function() {\n\t    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n\t    function drag() {\n\t      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n\t    }\n\t    function dragstart(id, position, subject, move, end) {\n\t      return function() {\n\t        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n\t        if (origin) {\n\t          dragOffset = origin.apply(that, arguments);\n\t          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n\t        } else {\n\t          dragOffset = [ 0, 0 ];\n\t        }\n\t        dispatch({\n\t          type: \"dragstart\"\n\t        });\n\t        function moved() {\n\t          var position1 = position(parent, dragId), dx, dy;\n\t          if (!position1) return;\n\t          dx = position1[0] - position0[0];\n\t          dy = position1[1] - position0[1];\n\t          dragged |= dx | dy;\n\t          position0 = position1;\n\t          dispatch({\n\t            type: \"drag\",\n\t            x: position1[0] + dragOffset[0],\n\t            y: position1[1] + dragOffset[1],\n\t            dx: dx,\n\t            dy: dy\n\t          });\n\t        }\n\t        function ended() {\n\t          if (!position(parent, dragId)) return;\n\t          dragSubject.on(move + dragName, null).on(end + dragName, null);\n\t          dragRestore(dragged);\n\t          dispatch({\n\t            type: \"dragend\"\n\t          });\n\t        }\n\t      };\n\t    }\n\t    drag.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return drag;\n\t    };\n\t    return d3.rebind(drag, event, \"on\");\n\t  };\n\t  function d3_behavior_dragTouchId() {\n\t    return d3.event.changedTouches[0].identifier;\n\t  }\n\t  d3.touches = function(container, touches) {\n\t    if (arguments.length < 2) touches = d3_eventSource().touches;\n\t    return touches ? d3_array(touches).map(function(touch) {\n\t      var point = d3_mousePoint(container, touch);\n\t      point.identifier = touch.identifier;\n\t      return point;\n\t    }) : [];\n\t  };\n\t  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n\t  function d3_sgn(x) {\n\t    return x > 0 ? 1 : x < 0 ? -1 : 0;\n\t  }\n\t  function d3_cross2d(a, b, c) {\n\t    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t  }\n\t  function d3_acos(x) {\n\t    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n\t  }\n\t  function d3_asin(x) {\n\t    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n\t  }\n\t  function d3_sinh(x) {\n\t    return ((x = Math.exp(x)) - 1 / x) / 2;\n\t  }\n\t  function d3_cosh(x) {\n\t    return ((x = Math.exp(x)) + 1 / x) / 2;\n\t  }\n\t  function d3_tanh(x) {\n\t    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t  }\n\t  function d3_haversin(x) {\n\t    return (x = Math.sin(x / 2)) * x;\n\t  }\n\t  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n\t  d3.interpolateZoom = function(p0, p1) {\n\t    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n\t    if (d2 < ε2) {\n\t      S = Math.log(w1 / w0) / ρ;\n\t      i = function(t) {\n\t        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n\t      };\n\t    } else {\n\t      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t      S = (r1 - r0) / ρ;\n\t      i = function(t) {\n\t        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n\t        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n\t      };\n\t    }\n\t    i.duration = S * 1e3;\n\t    return i;\n\t  };\n\t  d3.behavior.zoom = function() {\n\t    var view = {\n\t      x: 0,\n\t      y: 0,\n\t      k: 1\n\t    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n\t    if (!d3_behavior_zoomWheel) {\n\t      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n\t      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return d3.event.wheelDelta;\n\t      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.detail;\n\t      }, \"MozMousePixelScroll\");\n\t    }\n\t    function zoom(g) {\n\t      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n\t    }\n\t    zoom.event = function(g) {\n\t      g.each(function() {\n\t        var dispatch = event.of(this, arguments), view1 = view;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.zoom\", function() {\n\t            view = this.__chart__ || {\n\t              x: 0,\n\t              y: 0,\n\t              k: 1\n\t            };\n\t            zoomstarted(dispatch);\n\t          }).tween(\"zoom:zoom\", function() {\n\t            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n\t            return function(t) {\n\t              var l = i(t), k = dx / l[2];\n\t              this.__chart__ = view = {\n\t                x: cx - l[0] * k,\n\t                y: cy - l[1] * k,\n\t                k: k\n\t              };\n\t              zoomed(dispatch);\n\t            };\n\t          }).each(\"interrupt.zoom\", function() {\n\t            zoomended(dispatch);\n\t          }).each(\"end.zoom\", function() {\n\t            zoomended(dispatch);\n\t          });\n\t        } else {\n\t          this.__chart__ = view;\n\t          zoomstarted(dispatch);\n\t          zoomed(dispatch);\n\t          zoomended(dispatch);\n\t        }\n\t      });\n\t    };\n\t    zoom.translate = function(_) {\n\t      if (!arguments.length) return [ view.x, view.y ];\n\t      view = {\n\t        x: +_[0],\n\t        y: +_[1],\n\t        k: view.k\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scale = function(_) {\n\t      if (!arguments.length) return view.k;\n\t      view = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: null\n\t      };\n\t      scaleTo(+_);\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scaleExtent = function(_) {\n\t      if (!arguments.length) return scaleExtent;\n\t      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.center = function(_) {\n\t      if (!arguments.length) return center;\n\t      center = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.duration = function(_) {\n\t      if (!arguments.length) return duration;\n\t      duration = +_;\n\t      return zoom;\n\t    };\n\t    zoom.x = function(z) {\n\t      if (!arguments.length) return x1;\n\t      x1 = z;\n\t      x0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    zoom.y = function(z) {\n\t      if (!arguments.length) return y1;\n\t      y1 = z;\n\t      y0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    function location(p) {\n\t      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n\t    }\n\t    function point(l) {\n\t      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n\t    }\n\t    function scaleTo(s) {\n\t      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n\t    }\n\t    function translateTo(p, l) {\n\t      l = point(l);\n\t      view.x += p[0] - l[0];\n\t      view.y += p[1] - l[1];\n\t    }\n\t    function zoomTo(that, p, l, k) {\n\t      that.__chart__ = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: view.k\n\t      };\n\t      scaleTo(Math.pow(2, k));\n\t      translateTo(center0 = p, l);\n\t      that = d3.select(that);\n\t      if (duration > 0) that = that.transition().duration(duration);\n\t      that.call(zoom.event);\n\t    }\n\t    function rescale() {\n\t      if (x1) x1.domain(x0.range().map(function(x) {\n\t        return (x - view.x) / view.k;\n\t      }).map(x0.invert));\n\t      if (y1) y1.domain(y0.range().map(function(y) {\n\t        return (y - view.y) / view.k;\n\t      }).map(y0.invert));\n\t    }\n\t    function zoomstarted(dispatch) {\n\t      if (!zooming++) dispatch({\n\t        type: \"zoomstart\"\n\t      });\n\t    }\n\t    function zoomed(dispatch) {\n\t      rescale();\n\t      dispatch({\n\t        type: \"zoom\",\n\t        scale: view.k,\n\t        translate: [ view.x, view.y ]\n\t      });\n\t    }\n\t    function zoomended(dispatch) {\n\t      if (!--zooming) dispatch({\n\t        type: \"zoomend\"\n\t      }), center0 = null;\n\t    }\n\t    function mousedowned() {\n\t      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n\t      d3_selection_interrupt.call(that);\n\t      zoomstarted(dispatch);\n\t      function moved() {\n\t        dragged = 1;\n\t        translateTo(d3.mouse(that), location0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        subject.on(mousemove, null).on(mouseup, null);\n\t        dragRestore(dragged);\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function touchstarted() {\n\t      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n\t      started();\n\t      zoomstarted(dispatch);\n\t      subject.on(mousedown, null).on(touchstart, started);\n\t      function relocate() {\n\t        var touches = d3.touches(that);\n\t        scale0 = view.k;\n\t        touches.forEach(function(t) {\n\t          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n\t        });\n\t        return touches;\n\t      }\n\t      function started() {\n\t        var target = d3.event.target;\n\t        d3.select(target).on(touchmove, moved).on(touchend, ended);\n\t        targets.push(target);\n\t        var changed = d3.event.changedTouches;\n\t        for (var i = 0, n = changed.length; i < n; ++i) {\n\t          locations0[changed[i].identifier] = null;\n\t        }\n\t        var touches = relocate(), now = Date.now();\n\t        if (touches.length === 1) {\n\t          if (now - touchtime < 500) {\n\t            var p = touches[0];\n\t            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n\t            d3_eventPreventDefault();\n\t          }\n\t          touchtime = now;\n\t        } else if (touches.length > 1) {\n\t          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n\t          distance0 = dx * dx + dy * dy;\n\t        }\n\t      }\n\t      function moved() {\n\t        var touches = d3.touches(that), p0, l0, p1, l1;\n\t        d3_selection_interrupt.call(that);\n\t        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n\t          p1 = touches[i];\n\t          if (l1 = locations0[p1.identifier]) {\n\t            if (l0) break;\n\t            p0 = p1, l0 = l1;\n\t          }\n\t        }\n\t        if (l1) {\n\t          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n\t          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n\t          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n\t          scaleTo(scale1 * scale0);\n\t        }\n\t        touchtime = null;\n\t        translateTo(p0, l0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        if (d3.event.touches.length) {\n\t          var changed = d3.event.changedTouches;\n\t          for (var i = 0, n = changed.length; i < n; ++i) {\n\t            delete locations0[changed[i].identifier];\n\t          }\n\t          for (var identifier in locations0) {\n\t            return void relocate();\n\t          }\n\t        }\n\t        d3.selectAll(targets).on(zoomName, null);\n\t        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n\t        dragRestore();\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function mousewheeled() {\n\t      var dispatch = event.of(this, arguments);\n\t      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n\t      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n\t      mousewheelTimer = setTimeout(function() {\n\t        mousewheelTimer = null;\n\t        zoomended(dispatch);\n\t      }, 50);\n\t      d3_eventPreventDefault();\n\t      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n\t      translateTo(center0, translate0);\n\t      zoomed(dispatch);\n\t    }\n\t    function dblclicked() {\n\t      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n\t      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n\t    }\n\t    return d3.rebind(zoom, event, \"on\");\n\t  };\n\t  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n\t  d3.color = d3_color;\n\t  function d3_color() {}\n\t  d3_color.prototype.toString = function() {\n\t    return this.rgb() + \"\";\n\t  };\n\t  d3.hsl = d3_hsl;\n\t  function d3_hsl(h, s, l) {\n\t    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n\t  }\n\t  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n\t  d3_hslPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, this.l / k);\n\t  };\n\t  d3_hslPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, k * this.l);\n\t  };\n\t  d3_hslPrototype.rgb = function() {\n\t    return d3_hsl_rgb(this.h, this.s, this.l);\n\t  };\n\t  function d3_hsl_rgb(h, s, l) {\n\t    var m1, m2;\n\t    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n\t    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n\t    l = l < 0 ? 0 : l > 1 ? 1 : l;\n\t    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n\t    m1 = 2 * l - m2;\n\t    function v(h) {\n\t      if (h > 360) h -= 360; else if (h < 0) h += 360;\n\t      if (h < 60) return m1 + (m2 - m1) * h / 60;\n\t      if (h < 180) return m2;\n\t      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n\t      return m1;\n\t    }\n\t    function vv(h) {\n\t      return Math.round(v(h) * 255);\n\t    }\n\t    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n\t  }\n\t  d3.hcl = d3_hcl;\n\t  function d3_hcl(h, c, l) {\n\t    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n\t  }\n\t  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n\t  d3_hclPrototype.brighter = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.darker = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.rgb = function() {\n\t    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n\t  };\n\t  function d3_hcl_lab(h, c, l) {\n\t    if (isNaN(h)) h = 0;\n\t    if (isNaN(c)) c = 0;\n\t    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n\t  }\n\t  d3.lab = d3_lab;\n\t  function d3_lab(l, a, b) {\n\t    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n\t  }\n\t  var d3_lab_K = 18;\n\t  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n\t  var d3_labPrototype = d3_lab.prototype = new d3_color();\n\t  d3_labPrototype.brighter = function(k) {\n\t    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.darker = function(k) {\n\t    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.rgb = function() {\n\t    return d3_lab_rgb(this.l, this.a, this.b);\n\t  };\n\t  function d3_lab_rgb(l, a, b) {\n\t    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n\t    x = d3_lab_xyz(x) * d3_lab_X;\n\t    y = d3_lab_xyz(y) * d3_lab_Y;\n\t    z = d3_lab_xyz(z) * d3_lab_Z;\n\t    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n\t  }\n\t  function d3_lab_hcl(l, a, b) {\n\t    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n\t  }\n\t  function d3_lab_xyz(x) {\n\t    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n\t  }\n\t  function d3_xyz_lab(x) {\n\t    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n\t  }\n\t  function d3_xyz_rgb(r) {\n\t    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n\t  }\n\t  d3.rgb = d3_rgb;\n\t  function d3_rgb(r, g, b) {\n\t    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n\t  }\n\t  function d3_rgbNumber(value) {\n\t    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n\t  }\n\t  function d3_rgbString(value) {\n\t    return d3_rgbNumber(value) + \"\";\n\t  }\n\t  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n\t  d3_rgbPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    var r = this.r, g = this.g, b = this.b, i = 30;\n\t    if (!r && !g && !b) return new d3_rgb(i, i, i);\n\t    if (r && r < i) r = i;\n\t    if (g && g < i) g = i;\n\t    if (b && b < i) b = i;\n\t    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n\t  };\n\t  d3_rgbPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n\t  };\n\t  d3_rgbPrototype.hsl = function() {\n\t    return d3_rgb_hsl(this.r, this.g, this.b);\n\t  };\n\t  d3_rgbPrototype.toString = function() {\n\t    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n\t  };\n\t  function d3_rgb_hex(v) {\n\t    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n\t  }\n\t  function d3_rgb_parse(format, rgb, hsl) {\n\t    var r = 0, g = 0, b = 0, m1, m2, color;\n\t    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n\t    if (m1) {\n\t      m2 = m1[2].split(\",\");\n\t      switch (m1[1]) {\n\t       case \"hsl\":\n\t        {\n\t          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n\t        }\n\t\n\t       case \"rgb\":\n\t        {\n\t          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n\t        }\n\t      }\n\t    }\n\t    if (color = d3_rgb_names.get(format)) {\n\t      return rgb(color.r, color.g, color.b);\n\t    }\n\t    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n\t      if (format.length === 4) {\n\t        r = (color & 3840) >> 4;\n\t        r = r >> 4 | r;\n\t        g = color & 240;\n\t        g = g >> 4 | g;\n\t        b = color & 15;\n\t        b = b << 4 | b;\n\t      } else if (format.length === 7) {\n\t        r = (color & 16711680) >> 16;\n\t        g = (color & 65280) >> 8;\n\t        b = color & 255;\n\t      }\n\t    }\n\t    return rgb(r, g, b);\n\t  }\n\t  function d3_rgb_hsl(r, g, b) {\n\t    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n\t    if (d) {\n\t      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n\t      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n\t      h *= 60;\n\t    } else {\n\t      h = NaN;\n\t      s = l > 0 && l < 1 ? 0 : h;\n\t    }\n\t    return new d3_hsl(h, s, l);\n\t  }\n\t  function d3_rgb_lab(r, g, b) {\n\t    r = d3_rgb_xyz(r);\n\t    g = d3_rgb_xyz(g);\n\t    b = d3_rgb_xyz(b);\n\t    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n\t    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n\t  }\n\t  function d3_rgb_xyz(r) {\n\t    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n\t  }\n\t  function d3_rgb_parseNumber(c) {\n\t    var f = parseFloat(c);\n\t    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n\t  }\n\t  var d3_rgb_names = d3.map({\n\t    aliceblue: 15792383,\n\t    antiquewhite: 16444375,\n\t    aqua: 65535,\n\t    aquamarine: 8388564,\n\t    azure: 15794175,\n\t    beige: 16119260,\n\t    bisque: 16770244,\n\t    black: 0,\n\t    blanchedalmond: 16772045,\n\t    blue: 255,\n\t    blueviolet: 9055202,\n\t    brown: 10824234,\n\t    burlywood: 14596231,\n\t    cadetblue: 6266528,\n\t    chartreuse: 8388352,\n\t    chocolate: 13789470,\n\t    coral: 16744272,\n\t    cornflowerblue: 6591981,\n\t    cornsilk: 16775388,\n\t    crimson: 14423100,\n\t    cyan: 65535,\n\t    darkblue: 139,\n\t    darkcyan: 35723,\n\t    darkgoldenrod: 12092939,\n\t    darkgray: 11119017,\n\t    darkgreen: 25600,\n\t    darkgrey: 11119017,\n\t    darkkhaki: 12433259,\n\t    darkmagenta: 9109643,\n\t    darkolivegreen: 5597999,\n\t    darkorange: 16747520,\n\t    darkorchid: 10040012,\n\t    darkred: 9109504,\n\t    darksalmon: 15308410,\n\t    darkseagreen: 9419919,\n\t    darkslateblue: 4734347,\n\t    darkslategray: 3100495,\n\t    darkslategrey: 3100495,\n\t    darkturquoise: 52945,\n\t    darkviolet: 9699539,\n\t    deeppink: 16716947,\n\t    deepskyblue: 49151,\n\t    dimgray: 6908265,\n\t    dimgrey: 6908265,\n\t    dodgerblue: 2003199,\n\t    firebrick: 11674146,\n\t    floralwhite: 16775920,\n\t    forestgreen: 2263842,\n\t    fuchsia: 16711935,\n\t    gainsboro: 14474460,\n\t    ghostwhite: 16316671,\n\t    gold: 16766720,\n\t    goldenrod: 14329120,\n\t    gray: 8421504,\n\t    green: 32768,\n\t    greenyellow: 11403055,\n\t    grey: 8421504,\n\t    honeydew: 15794160,\n\t    hotpink: 16738740,\n\t    indianred: 13458524,\n\t    indigo: 4915330,\n\t    ivory: 16777200,\n\t    khaki: 15787660,\n\t    lavender: 15132410,\n\t    lavenderblush: 16773365,\n\t    lawngreen: 8190976,\n\t    lemonchiffon: 16775885,\n\t    lightblue: 11393254,\n\t    lightcoral: 15761536,\n\t    lightcyan: 14745599,\n\t    lightgoldenrodyellow: 16448210,\n\t    lightgray: 13882323,\n\t    lightgreen: 9498256,\n\t    lightgrey: 13882323,\n\t    lightpink: 16758465,\n\t    lightsalmon: 16752762,\n\t    lightseagreen: 2142890,\n\t    lightskyblue: 8900346,\n\t    lightslategray: 7833753,\n\t    lightslategrey: 7833753,\n\t    lightsteelblue: 11584734,\n\t    lightyellow: 16777184,\n\t    lime: 65280,\n\t    limegreen: 3329330,\n\t    linen: 16445670,\n\t    magenta: 16711935,\n\t    maroon: 8388608,\n\t    mediumaquamarine: 6737322,\n\t    mediumblue: 205,\n\t    mediumorchid: 12211667,\n\t    mediumpurple: 9662683,\n\t    mediumseagreen: 3978097,\n\t    mediumslateblue: 8087790,\n\t    mediumspringgreen: 64154,\n\t    mediumturquoise: 4772300,\n\t    mediumvioletred: 13047173,\n\t    midnightblue: 1644912,\n\t    mintcream: 16121850,\n\t    mistyrose: 16770273,\n\t    moccasin: 16770229,\n\t    navajowhite: 16768685,\n\t    navy: 128,\n\t    oldlace: 16643558,\n\t    olive: 8421376,\n\t    olivedrab: 7048739,\n\t    orange: 16753920,\n\t    orangered: 16729344,\n\t    orchid: 14315734,\n\t    palegoldenrod: 15657130,\n\t    palegreen: 10025880,\n\t    paleturquoise: 11529966,\n\t    palevioletred: 14381203,\n\t    papayawhip: 16773077,\n\t    peachpuff: 16767673,\n\t    peru: 13468991,\n\t    pink: 16761035,\n\t    plum: 14524637,\n\t    powderblue: 11591910,\n\t    purple: 8388736,\n\t    rebeccapurple: 6697881,\n\t    red: 16711680,\n\t    rosybrown: 12357519,\n\t    royalblue: 4286945,\n\t    saddlebrown: 9127187,\n\t    salmon: 16416882,\n\t    sandybrown: 16032864,\n\t    seagreen: 3050327,\n\t    seashell: 16774638,\n\t    sienna: 10506797,\n\t    silver: 12632256,\n\t    skyblue: 8900331,\n\t    slateblue: 6970061,\n\t    slategray: 7372944,\n\t    slategrey: 7372944,\n\t    snow: 16775930,\n\t    springgreen: 65407,\n\t    steelblue: 4620980,\n\t    tan: 13808780,\n\t    teal: 32896,\n\t    thistle: 14204888,\n\t    tomato: 16737095,\n\t    turquoise: 4251856,\n\t    violet: 15631086,\n\t    wheat: 16113331,\n\t    white: 16777215,\n\t    whitesmoke: 16119285,\n\t    yellow: 16776960,\n\t    yellowgreen: 10145074\n\t  });\n\t  d3_rgb_names.forEach(function(key, value) {\n\t    d3_rgb_names.set(key, d3_rgbNumber(value));\n\t  });\n\t  function d3_functor(v) {\n\t    return typeof v === \"function\" ? v : function() {\n\t      return v;\n\t    };\n\t  }\n\t  d3.functor = d3_functor;\n\t  d3.xhr = d3_xhrType(d3_identity);\n\t  function d3_xhrType(response) {\n\t    return function(url, mimeType, callback) {\n\t      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n\t      mimeType = null;\n\t      return d3_xhr(url, mimeType, response, callback);\n\t    };\n\t  }\n\t  function d3_xhr(url, mimeType, response, callback) {\n\t    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n\t    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\t    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n\t      request.readyState > 3 && respond();\n\t    };\n\t    function respond() {\n\t      var status = request.status, result;\n\t      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n\t        try {\n\t          result = response.call(xhr, request);\n\t        } catch (e) {\n\t          dispatch.error.call(xhr, e);\n\t          return;\n\t        }\n\t        dispatch.load.call(xhr, result);\n\t      } else {\n\t        dispatch.error.call(xhr, request);\n\t      }\n\t    }\n\t    request.onprogress = function(event) {\n\t      var o = d3.event;\n\t      d3.event = event;\n\t      try {\n\t        dispatch.progress.call(xhr, request);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t    xhr.header = function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers[name];\n\t      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.mimeType = function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.responseType = function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return xhr;\n\t    };\n\t    xhr.response = function(value) {\n\t      response = value;\n\t      return xhr;\n\t    };\n\t    [ \"get\", \"post\" ].forEach(function(method) {\n\t      xhr[method] = function() {\n\t        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n\t      };\n\t    });\n\t    xhr.send = function(method, data, callback) {\n\t      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n\t      request.open(method, url, true);\n\t      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n\t      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n\t      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n\t      if (responseType != null) request.responseType = responseType;\n\t      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n\t        callback(null, request);\n\t      });\n\t      dispatch.beforesend.call(xhr, request);\n\t      request.send(data == null ? null : data);\n\t      return xhr;\n\t    };\n\t    xhr.abort = function() {\n\t      request.abort();\n\t      return xhr;\n\t    };\n\t    d3.rebind(xhr, dispatch, \"on\");\n\t    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n\t  }\n\t  function d3_xhr_fixCallback(callback) {\n\t    return callback.length === 1 ? function(error, request) {\n\t      callback(error == null ? request : null);\n\t    } : callback;\n\t  }\n\t  function d3_xhrHasResponse(request) {\n\t    var type = request.responseType;\n\t    return type && type !== \"text\" ? request.response : request.responseText;\n\t  }\n\t  d3.dsv = function(delimiter, mimeType) {\n\t    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n\t    function dsv(url, row, callback) {\n\t      if (arguments.length < 3) callback = row, row = null;\n\t      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\t      xhr.row = function(_) {\n\t        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n\t      };\n\t      return xhr;\n\t    }\n\t    function response(request) {\n\t      return dsv.parse(request.responseText);\n\t    }\n\t    function typedResponse(f) {\n\t      return function(request) {\n\t        return dsv.parse(request.responseText, f);\n\t      };\n\t    }\n\t    dsv.parse = function(text, f) {\n\t      var o;\n\t      return dsv.parseRows(text, function(row, i) {\n\t        if (o) return o(row, i - 1);\n\t        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n\t          return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t        }).join(\",\") + \"}\");\n\t        o = f ? function(row, i) {\n\t          return f(a(row), i);\n\t        } : a;\n\t      });\n\t    };\n\t    dsv.parseRows = function(text, f) {\n\t      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n\t      function token() {\n\t        if (I >= N) return EOF;\n\t        if (eol) return eol = false, EOL;\n\t        var j = I;\n\t        if (text.charCodeAt(j) === 34) {\n\t          var i = j;\n\t          while (i++ < N) {\n\t            if (text.charCodeAt(i) === 34) {\n\t              if (text.charCodeAt(i + 1) !== 34) break;\n\t              ++i;\n\t            }\n\t          }\n\t          I = i + 2;\n\t          var c = text.charCodeAt(i + 1);\n\t          if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(i + 2) === 10) ++I;\n\t          } else if (c === 10) {\n\t            eol = true;\n\t          }\n\t          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n\t        }\n\t        while (I < N) {\n\t          var c = text.charCodeAt(I++), k = 1;\n\t          if (c === 10) eol = true; else if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(I) === 10) ++I, ++k;\n\t          } else if (c !== delimiterCode) continue;\n\t          return text.slice(j, I - k);\n\t        }\n\t        return text.slice(j);\n\t      }\n\t      while ((t = token()) !== EOF) {\n\t        var a = [];\n\t        while (t !== EOL && t !== EOF) {\n\t          a.push(t);\n\t          t = token();\n\t        }\n\t        if (f && (a = f(a, n++)) == null) continue;\n\t        rows.push(a);\n\t      }\n\t      return rows;\n\t    };\n\t    dsv.format = function(rows) {\n\t      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n\t      var fieldSet = new d3_Set(), fields = [];\n\t      rows.forEach(function(row) {\n\t        for (var field in row) {\n\t          if (!fieldSet.has(field)) {\n\t            fields.push(fieldSet.add(field));\n\t          }\n\t        }\n\t      });\n\t      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n\t        return fields.map(function(field) {\n\t          return formatValue(row[field]);\n\t        }).join(delimiter);\n\t      })).join(\"\\n\");\n\t    };\n\t    dsv.formatRows = function(rows) {\n\t      return rows.map(formatRow).join(\"\\n\");\n\t    };\n\t    function formatRow(row) {\n\t      return row.map(formatValue).join(delimiter);\n\t    }\n\t    function formatValue(text) {\n\t      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n\t    }\n\t    return dsv;\n\t  };\n\t  d3.csv = d3.dsv(\",\", \"text/csv\");\n\t  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\t  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n\t    setTimeout(callback, 17);\n\t  };\n\t  d3.timer = function() {\n\t    d3_timer.apply(this, arguments);\n\t  };\n\t  function d3_timer(callback, delay, then) {\n\t    var n = arguments.length;\n\t    if (n < 2) delay = 0;\n\t    if (n < 3) then = Date.now();\n\t    var time = then + delay, timer = {\n\t      c: callback,\n\t      t: time,\n\t      n: null\n\t    };\n\t    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n\t    d3_timer_queueTail = timer;\n\t    if (!d3_timer_interval) {\n\t      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t    return timer;\n\t  }\n\t  function d3_timer_step() {\n\t    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n\t    if (delay > 24) {\n\t      if (isFinite(delay)) {\n\t        clearTimeout(d3_timer_timeout);\n\t        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n\t      }\n\t      d3_timer_interval = 0;\n\t    } else {\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  }\n\t  d3.timer.flush = function() {\n\t    d3_timer_mark();\n\t    d3_timer_sweep();\n\t  };\n\t  function d3_timer_mark() {\n\t    var now = Date.now(), timer = d3_timer_queueHead;\n\t    while (timer) {\n\t      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n\t      timer = timer.n;\n\t    }\n\t    return now;\n\t  }\n\t  function d3_timer_sweep() {\n\t    var t0, t1 = d3_timer_queueHead, time = Infinity;\n\t    while (t1) {\n\t      if (t1.c) {\n\t        if (t1.t < time) time = t1.t;\n\t        t1 = (t0 = t1).n;\n\t      } else {\n\t        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n\t      }\n\t    }\n\t    d3_timer_queueTail = t0;\n\t    return time;\n\t  }\n\t  function d3_format_precision(x, p) {\n\t    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n\t  }\n\t  d3.round = function(x, n) {\n\t    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n\t  };\n\t  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n\t  d3.formatPrefix = function(value, precision) {\n\t    var i = 0;\n\t    if (value = +value) {\n\t      if (value < 0) value *= -1;\n\t      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n\t      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n\t      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n\t    }\n\t    return d3_formatPrefixes[8 + i / 3];\n\t  };\n\t  function d3_formatPrefix(d, i) {\n\t    var k = Math.pow(10, abs(8 - i) * 3);\n\t    return {\n\t      scale: i > 8 ? function(d) {\n\t        return d / k;\n\t      } : function(d) {\n\t        return d * k;\n\t      },\n\t      symbol: d\n\t    };\n\t  }\n\t  function d3_locale_numberFormat(locale) {\n\t    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n\t      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n\t      while (i > 0 && g > 0) {\n\t        if (length + g + 1 > width) g = Math.max(1, width - length);\n\t        t.push(value.substring(i -= g, i + g));\n\t        if ((length += g + 1) > width) break;\n\t        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n\t      }\n\t      return t.reverse().join(locale_thousands);\n\t    } : d3_identity;\n\t    return function(specifier) {\n\t      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n\t      if (precision) precision = +precision.substring(1);\n\t      if (zfill || fill === \"0\" && align === \"=\") {\n\t        zfill = fill = \"0\";\n\t        align = \"=\";\n\t      }\n\t      switch (type) {\n\t       case \"n\":\n\t        comma = true;\n\t        type = \"g\";\n\t        break;\n\t\n\t       case \"%\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"f\";\n\t        break;\n\t\n\t       case \"p\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"r\";\n\t        break;\n\t\n\t       case \"b\":\n\t       case \"o\":\n\t       case \"x\":\n\t       case \"X\":\n\t        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\t\n\t       case \"c\":\n\t        exponent = false;\n\t\n\t       case \"d\":\n\t        integer = true;\n\t        precision = 0;\n\t        break;\n\t\n\t       case \"s\":\n\t        scale = -1;\n\t        type = \"r\";\n\t        break;\n\t      }\n\t      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n\t      if (type == \"r\" && !precision) type = \"g\";\n\t      if (precision != null) {\n\t        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n\t      }\n\t      type = d3_format_types.get(type) || d3_format_typeDefault;\n\t      var zcomma = zfill && comma;\n\t      return function(value) {\n\t        var fullSuffix = suffix;\n\t        if (integer && value % 1) return \"\";\n\t        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n\t        if (scale < 0) {\n\t          var unit = d3.formatPrefix(value, precision);\n\t          value = unit.scale(value);\n\t          fullSuffix = unit.symbol + suffix;\n\t        } else {\n\t          value *= scale;\n\t        }\n\t        value = type(value, precision);\n\t        var i = value.lastIndexOf(\".\"), before, after;\n\t        if (i < 0) {\n\t          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n\t          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n\t        } else {\n\t          before = value.substring(0, i);\n\t          after = locale_decimal + value.substring(i + 1);\n\t        }\n\t        if (!zfill && comma) before = formatGroup(before, Infinity);\n\t        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n\t        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n\t        negative += prefix;\n\t        value = before + after;\n\t        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n\t      };\n\t    };\n\t  }\n\t  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n\t  var d3_format_types = d3.map({\n\t    b: function(x) {\n\t      return x.toString(2);\n\t    },\n\t    c: function(x) {\n\t      return String.fromCharCode(x);\n\t    },\n\t    o: function(x) {\n\t      return x.toString(8);\n\t    },\n\t    x: function(x) {\n\t      return x.toString(16);\n\t    },\n\t    X: function(x) {\n\t      return x.toString(16).toUpperCase();\n\t    },\n\t    g: function(x, p) {\n\t      return x.toPrecision(p);\n\t    },\n\t    e: function(x, p) {\n\t      return x.toExponential(p);\n\t    },\n\t    f: function(x, p) {\n\t      return x.toFixed(p);\n\t    },\n\t    r: function(x, p) {\n\t      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n\t    }\n\t  });\n\t  function d3_format_typeDefault(x) {\n\t    return x + \"\";\n\t  }\n\t  var d3_time = d3.time = {}, d3_date = Date;\n\t  function d3_date_utc() {\n\t    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n\t  }\n\t  d3_date_utc.prototype = {\n\t    getDate: function() {\n\t      return this._.getUTCDate();\n\t    },\n\t    getDay: function() {\n\t      return this._.getUTCDay();\n\t    },\n\t    getFullYear: function() {\n\t      return this._.getUTCFullYear();\n\t    },\n\t    getHours: function() {\n\t      return this._.getUTCHours();\n\t    },\n\t    getMilliseconds: function() {\n\t      return this._.getUTCMilliseconds();\n\t    },\n\t    getMinutes: function() {\n\t      return this._.getUTCMinutes();\n\t    },\n\t    getMonth: function() {\n\t      return this._.getUTCMonth();\n\t    },\n\t    getSeconds: function() {\n\t      return this._.getUTCSeconds();\n\t    },\n\t    getTime: function() {\n\t      return this._.getTime();\n\t    },\n\t    getTimezoneOffset: function() {\n\t      return 0;\n\t    },\n\t    valueOf: function() {\n\t      return this._.valueOf();\n\t    },\n\t    setDate: function() {\n\t      d3_time_prototype.setUTCDate.apply(this._, arguments);\n\t    },\n\t    setDay: function() {\n\t      d3_time_prototype.setUTCDay.apply(this._, arguments);\n\t    },\n\t    setFullYear: function() {\n\t      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n\t    },\n\t    setHours: function() {\n\t      d3_time_prototype.setUTCHours.apply(this._, arguments);\n\t    },\n\t    setMilliseconds: function() {\n\t      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n\t    },\n\t    setMinutes: function() {\n\t      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n\t    },\n\t    setMonth: function() {\n\t      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n\t    },\n\t    setSeconds: function() {\n\t      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n\t    },\n\t    setTime: function() {\n\t      d3_time_prototype.setTime.apply(this._, arguments);\n\t    }\n\t  };\n\t  var d3_time_prototype = Date.prototype;\n\t  function d3_time_interval(local, step, number) {\n\t    function round(date) {\n\t      var d0 = local(date), d1 = offset(d0, 1);\n\t      return date - d0 < d1 - date ? d0 : d1;\n\t    }\n\t    function ceil(date) {\n\t      step(date = local(new d3_date(date - 1)), 1);\n\t      return date;\n\t    }\n\t    function offset(date, k) {\n\t      step(date = new d3_date(+date), k);\n\t      return date;\n\t    }\n\t    function range(t0, t1, dt) {\n\t      var time = ceil(t0), times = [];\n\t      if (dt > 1) {\n\t        while (time < t1) {\n\t          if (!(number(time) % dt)) times.push(new Date(+time));\n\t          step(time, 1);\n\t        }\n\t      } else {\n\t        while (time < t1) times.push(new Date(+time)), step(time, 1);\n\t      }\n\t      return times;\n\t    }\n\t    function range_utc(t0, t1, dt) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = t0;\n\t        return range(utc, t1, dt);\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    }\n\t    local.floor = local;\n\t    local.round = round;\n\t    local.ceil = ceil;\n\t    local.offset = offset;\n\t    local.range = range;\n\t    var utc = local.utc = d3_time_interval_utc(local);\n\t    utc.floor = utc;\n\t    utc.round = d3_time_interval_utc(round);\n\t    utc.ceil = d3_time_interval_utc(ceil);\n\t    utc.offset = d3_time_interval_utc(offset);\n\t    utc.range = range_utc;\n\t    return local;\n\t  }\n\t  function d3_time_interval_utc(method) {\n\t    return function(date, k) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = date;\n\t        return method(utc, k)._;\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    };\n\t  }\n\t  d3_time.year = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setMonth(0, 1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setFullYear(date.getFullYear() + offset);\n\t  }, function(date) {\n\t    return date.getFullYear();\n\t  });\n\t  d3_time.years = d3_time.year.range;\n\t  d3_time.years.utc = d3_time.year.utc.range;\n\t  d3_time.day = d3_time_interval(function(date) {\n\t    var day = new d3_date(2e3, 0);\n\t    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n\t    return day;\n\t  }, function(date, offset) {\n\t    date.setDate(date.getDate() + offset);\n\t  }, function(date) {\n\t    return date.getDate() - 1;\n\t  });\n\t  d3_time.days = d3_time.day.range;\n\t  d3_time.days.utc = d3_time.day.utc.range;\n\t  d3_time.dayOfYear = function(date) {\n\t    var year = d3_time.year(date);\n\t    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n\t  };\n\t  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n\t    i = 7 - i;\n\t    var interval = d3_time[day] = d3_time_interval(function(date) {\n\t      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n\t      return date;\n\t    }, function(date, offset) {\n\t      date.setDate(date.getDate() + Math.floor(offset) * 7);\n\t    }, function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n\t    });\n\t    d3_time[day + \"s\"] = interval.range;\n\t    d3_time[day + \"s\"].utc = interval.utc.range;\n\t    d3_time[day + \"OfYear\"] = function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n\t    };\n\t  });\n\t  d3_time.week = d3_time.sunday;\n\t  d3_time.weeks = d3_time.sunday.range;\n\t  d3_time.weeks.utc = d3_time.sunday.utc.range;\n\t  d3_time.weekOfYear = d3_time.sundayOfYear;\n\t  function d3_locale_timeFormat(locale) {\n\t    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n\t    function d3_time_format(template) {\n\t      var n = template.length;\n\t      function format(date) {\n\t        var string = [], i = -1, j = 0, c, p, f;\n\t        while (++i < n) {\n\t          if (template.charCodeAt(i) === 37) {\n\t            string.push(template.slice(j, i));\n\t            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n\t            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n\t            string.push(c);\n\t            j = i + 1;\n\t          }\n\t        }\n\t        string.push(template.slice(j, i));\n\t        return string.join(\"\");\n\t      }\n\t      format.parse = function(string) {\n\t        var d = {\n\t          y: 1900,\n\t          m: 0,\n\t          d: 1,\n\t          H: 0,\n\t          M: 0,\n\t          S: 0,\n\t          L: 0,\n\t          Z: null\n\t        }, i = d3_time_parse(d, template, string, 0);\n\t        if (i != string.length) return null;\n\t        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n\t        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n\t          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t          date.setFullYear(d.y, 0, 1);\n\t          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n\t        } else date.setFullYear(d.y, d.m, d.d);\n\t        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n\t        return localZ ? date._ : date;\n\t      };\n\t      format.toString = function() {\n\t        return template;\n\t      };\n\t      return format;\n\t    }\n\t    function d3_time_parse(date, template, string, j) {\n\t      var c, p, t, i = 0, n = template.length, m = string.length;\n\t      while (i < n) {\n\t        if (j >= m) return -1;\n\t        c = template.charCodeAt(i++);\n\t        if (c === 37) {\n\t          t = template.charAt(i++);\n\t          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n\t          if (!p || (j = p(date, string, j)) < 0) return -1;\n\t        } else if (c != string.charCodeAt(j++)) {\n\t          return -1;\n\t        }\n\t      }\n\t      return j;\n\t    }\n\t    d3_time_format.utc = function(template) {\n\t      var local = d3_time_format(template);\n\t      function format(date) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var utc = new d3_date();\n\t          utc._ = date;\n\t          return local(utc);\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      }\n\t      format.parse = function(string) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var date = local.parse(string);\n\t          return date && date._;\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      };\n\t      format.toString = local.toString;\n\t      return format;\n\t    };\n\t    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n\t    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n\t    locale_periods.forEach(function(p, i) {\n\t      d3_time_periodLookup.set(p.toLowerCase(), i);\n\t    });\n\t    var d3_time_formats = {\n\t      a: function(d) {\n\t        return locale_shortDays[d.getDay()];\n\t      },\n\t      A: function(d) {\n\t        return locale_days[d.getDay()];\n\t      },\n\t      b: function(d) {\n\t        return locale_shortMonths[d.getMonth()];\n\t      },\n\t      B: function(d) {\n\t        return locale_months[d.getMonth()];\n\t      },\n\t      c: d3_time_format(locale_dateTime),\n\t      d: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      e: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      H: function(d, p) {\n\t        return d3_time_formatPad(d.getHours(), p, 2);\n\t      },\n\t      I: function(d, p) {\n\t        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n\t      },\n\t      j: function(d, p) {\n\t        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n\t      },\n\t      L: function(d, p) {\n\t        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n\t      },\n\t      m: function(d, p) {\n\t        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n\t      },\n\t      M: function(d, p) {\n\t        return d3_time_formatPad(d.getMinutes(), p, 2);\n\t      },\n\t      p: function(d) {\n\t        return locale_periods[+(d.getHours() >= 12)];\n\t      },\n\t      S: function(d, p) {\n\t        return d3_time_formatPad(d.getSeconds(), p, 2);\n\t      },\n\t      U: function(d, p) {\n\t        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n\t      },\n\t      w: function(d) {\n\t        return d.getDay();\n\t      },\n\t      W: function(d, p) {\n\t        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n\t      },\n\t      x: d3_time_format(locale_date),\n\t      X: d3_time_format(locale_time),\n\t      y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n\t      },\n\t      Y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n\t      },\n\t      Z: d3_time_zone,\n\t      \"%\": function() {\n\t        return \"%\";\n\t      }\n\t    };\n\t    var d3_time_parsers = {\n\t      a: d3_time_parseWeekdayAbbrev,\n\t      A: d3_time_parseWeekday,\n\t      b: d3_time_parseMonthAbbrev,\n\t      B: d3_time_parseMonth,\n\t      c: d3_time_parseLocaleFull,\n\t      d: d3_time_parseDay,\n\t      e: d3_time_parseDay,\n\t      H: d3_time_parseHour24,\n\t      I: d3_time_parseHour24,\n\t      j: d3_time_parseDayOfYear,\n\t      L: d3_time_parseMilliseconds,\n\t      m: d3_time_parseMonthNumber,\n\t      M: d3_time_parseMinutes,\n\t      p: d3_time_parseAmPm,\n\t      S: d3_time_parseSeconds,\n\t      U: d3_time_parseWeekNumberSunday,\n\t      w: d3_time_parseWeekdayNumber,\n\t      W: d3_time_parseWeekNumberMonday,\n\t      x: d3_time_parseLocaleDate,\n\t      X: d3_time_parseLocaleTime,\n\t      y: d3_time_parseYear,\n\t      Y: d3_time_parseFullYear,\n\t      Z: d3_time_parseZone,\n\t      \"%\": d3_time_parseLiteralPercent\n\t    };\n\t    function d3_time_parseWeekdayAbbrev(date, string, i) {\n\t      d3_time_dayAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseWeekday(date, string, i) {\n\t      d3_time_dayRe.lastIndex = 0;\n\t      var n = d3_time_dayRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonthAbbrev(date, string, i) {\n\t      d3_time_monthAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonth(date, string, i) {\n\t      d3_time_monthRe.lastIndex = 0;\n\t      var n = d3_time_monthRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseLocaleFull(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleDate(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleTime(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n\t    }\n\t    function d3_time_parseAmPm(date, string, i) {\n\t      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n\t      return n == null ? -1 : (date.p = n, i);\n\t    }\n\t    return d3_time_format;\n\t  }\n\t  var d3_time_formatPads = {\n\t    \"-\": \"\",\n\t    _: \" \",\n\t    \"0\": \"0\"\n\t  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n\t  function d3_time_formatPad(value, fill, width) {\n\t    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n\t    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t  }\n\t  function d3_time_formatRe(names) {\n\t    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n\t  }\n\t  function d3_time_formatLookup(names) {\n\t    var map = new d3_Map(), i = -1, n = names.length;\n\t    while (++i < n) map.set(names[i].toLowerCase(), i);\n\t    return map;\n\t  }\n\t  function d3_time_parseWeekdayNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n\t    return n ? (date.w = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberSunday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.U = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberMonday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.W = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseFullYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n\t    return n ? (date.y = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseZone(date, string, i) {\n\t    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n\t    i + 5) : -1;\n\t  }\n\t  function d3_time_expandYear(d) {\n\t    return d + (d > 68 ? 1900 : 2e3);\n\t  }\n\t  function d3_time_parseMonthNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDay(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.d = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDayOfYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.j = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseHour24(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.H = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMinutes(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.M = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseSeconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.S = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMilliseconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.L = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_zone(d) {\n\t    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n\t    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n\t  }\n\t  function d3_time_parseLiteralPercent(date, string, i) {\n\t    d3_time_percentRe.lastIndex = 0;\n\t    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n\t    return n ? i + n[0].length : -1;\n\t  }\n\t  function d3_time_formatMulti(formats) {\n\t    var n = formats.length, i = -1;\n\t    while (++i < n) formats[i][0] = this(formats[i][0]);\n\t    return function(date) {\n\t      var i = 0, f = formats[i];\n\t      while (!f[1](date)) f = formats[++i];\n\t      return f[0](date);\n\t    };\n\t  }\n\t  d3.locale = function(locale) {\n\t    return {\n\t      numberFormat: d3_locale_numberFormat(locale),\n\t      timeFormat: d3_locale_timeFormat(locale)\n\t    };\n\t  };\n\t  var d3_locale_enUS = d3.locale({\n\t    decimal: \".\",\n\t    thousands: \",\",\n\t    grouping: [ 3 ],\n\t    currency: [ \"$\", \"\" ],\n\t    dateTime: \"%a %b %e %X %Y\",\n\t    date: \"%m/%d/%Y\",\n\t    time: \"%H:%M:%S\",\n\t    periods: [ \"AM\", \"PM\" ],\n\t    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n\t    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n\t    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n\t    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n\t  });\n\t  d3.format = d3_locale_enUS.numberFormat;\n\t  d3.geo = {};\n\t  function d3_adder() {}\n\t  d3_adder.prototype = {\n\t    s: 0,\n\t    t: 0,\n\t    add: function(y) {\n\t      d3_adderSum(y, this.t, d3_adderTemp);\n\t      d3_adderSum(d3_adderTemp.s, this.s, this);\n\t      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n\t    },\n\t    reset: function() {\n\t      this.s = this.t = 0;\n\t    },\n\t    valueOf: function() {\n\t      return this.s;\n\t    }\n\t  };\n\t  var d3_adderTemp = new d3_adder();\n\t  function d3_adderSum(a, b, o) {\n\t    var x = o.s = a + b, bv = x - a, av = x - bv;\n\t    o.t = a - av + (b - bv);\n\t  }\n\t  d3.geo.stream = function(object, listener) {\n\t    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n\t      d3_geo_streamObjectType[object.type](object, listener);\n\t    } else {\n\t      d3_geo_streamGeometry(object, listener);\n\t    }\n\t  };\n\t  function d3_geo_streamGeometry(geometry, listener) {\n\t    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n\t      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n\t    }\n\t  }\n\t  var d3_geo_streamObjectType = {\n\t    Feature: function(feature, listener) {\n\t      d3_geo_streamGeometry(feature.geometry, listener);\n\t    },\n\t    FeatureCollection: function(object, listener) {\n\t      var features = object.features, i = -1, n = features.length;\n\t      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n\t    }\n\t  };\n\t  var d3_geo_streamGeometryType = {\n\t    Sphere: function(object, listener) {\n\t      listener.sphere();\n\t    },\n\t    Point: function(object, listener) {\n\t      object = object.coordinates;\n\t      listener.point(object[0], object[1], object[2]);\n\t    },\n\t    MultiPoint: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n\t    },\n\t    LineString: function(object, listener) {\n\t      d3_geo_streamLine(object.coordinates, listener, 0);\n\t    },\n\t    MultiLineString: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n\t    },\n\t    Polygon: function(object, listener) {\n\t      d3_geo_streamPolygon(object.coordinates, listener);\n\t    },\n\t    MultiPolygon: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n\t    },\n\t    GeometryCollection: function(object, listener) {\n\t      var geometries = object.geometries, i = -1, n = geometries.length;\n\t      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n\t    }\n\t  };\n\t  function d3_geo_streamLine(coordinates, listener, closed) {\n\t    var i = -1, n = coordinates.length - closed, coordinate;\n\t    listener.lineStart();\n\t    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n\t    listener.lineEnd();\n\t  }\n\t  function d3_geo_streamPolygon(coordinates, listener) {\n\t    var i = -1, n = coordinates.length;\n\t    listener.polygonStart();\n\t    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n\t    listener.polygonEnd();\n\t  }\n\t  d3.geo.area = function(object) {\n\t    d3_geo_areaSum = 0;\n\t    d3.geo.stream(object, d3_geo_area);\n\t    return d3_geo_areaSum;\n\t  };\n\t  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n\t  var d3_geo_area = {\n\t    sphere: function() {\n\t      d3_geo_areaSum += 4 * π;\n\t    },\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_areaRingSum.reset();\n\t      d3_geo_area.lineStart = d3_geo_areaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      var area = 2 * d3_geo_areaRingSum;\n\t      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n\t      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n\t    }\n\t  };\n\t  function d3_geo_areaRingStart() {\n\t    var λ00, φ00, λ0, cosφ0, sinφ0;\n\t    d3_geo_area.point = function(λ, φ) {\n\t      d3_geo_area.point = nextPoint;\n\t      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n\t      sinφ0 = Math.sin(φ);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      φ = φ * d3_radians / 2 + π / 4;\n\t      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n\t      d3_geo_areaRingSum.add(Math.atan2(v, u));\n\t      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n\t    }\n\t    d3_geo_area.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t    };\n\t  }\n\t  function d3_geo_cartesian(spherical) {\n\t    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n\t    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n\t  }\n\t  function d3_geo_cartesianDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t  }\n\t  function d3_geo_cartesianCross(a, b) {\n\t    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n\t  }\n\t  function d3_geo_cartesianAdd(a, b) {\n\t    a[0] += b[0];\n\t    a[1] += b[1];\n\t    a[2] += b[2];\n\t  }\n\t  function d3_geo_cartesianScale(vector, k) {\n\t    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n\t  }\n\t  function d3_geo_cartesianNormalize(d) {\n\t    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t    d[0] /= l;\n\t    d[1] /= l;\n\t    d[2] /= l;\n\t  }\n\t  function d3_geo_spherical(cartesian) {\n\t    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n\t  }\n\t  function d3_geo_sphericalEqual(a, b) {\n\t    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n\t  }\n\t  d3.geo.bounds = function() {\n\t    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n\t    var bound = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        bound.point = ringPoint;\n\t        bound.lineStart = ringStart;\n\t        bound.lineEnd = ringEnd;\n\t        dλSum = 0;\n\t        d3_geo_area.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        d3_geo_area.polygonEnd();\n\t        bound.point = point;\n\t        bound.lineStart = lineStart;\n\t        bound.lineEnd = lineEnd;\n\t        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n\t        range[0] = λ0, range[1] = λ1;\n\t      }\n\t    };\n\t    function point(λ, φ) {\n\t      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n\t      if (φ < φ0) φ0 = φ;\n\t      if (φ > φ1) φ1 = φ;\n\t    }\n\t    function linePoint(λ, φ) {\n\t      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n\t      if (p0) {\n\t        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n\t        d3_geo_cartesianNormalize(inflection);\n\t        inflection = d3_geo_spherical(inflection);\n\t        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n\t        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = inflection[1] * d3_degrees;\n\t          if (φi > φ1) φ1 = φi;\n\t        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = -inflection[1] * d3_degrees;\n\t          if (φi < φ0) φ0 = φi;\n\t        } else {\n\t          if (φ < φ0) φ0 = φ;\n\t          if (φ > φ1) φ1 = φ;\n\t        }\n\t        if (antimeridian) {\n\t          if (λ < λ_) {\n\t            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t          } else {\n\t            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t          }\n\t        } else {\n\t          if (λ1 >= λ0) {\n\t            if (λ < λ0) λ0 = λ;\n\t            if (λ > λ1) λ1 = λ;\n\t          } else {\n\t            if (λ > λ_) {\n\t              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t            } else {\n\t              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        point(λ, φ);\n\t      }\n\t      p0 = p, λ_ = λ;\n\t    }\n\t    function lineStart() {\n\t      bound.point = linePoint;\n\t    }\n\t    function lineEnd() {\n\t      range[0] = λ0, range[1] = λ1;\n\t      bound.point = point;\n\t      p0 = null;\n\t    }\n\t    function ringPoint(λ, φ) {\n\t      if (p0) {\n\t        var dλ = λ - λ_;\n\t        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n\t      } else λ__ = λ, φ__ = φ;\n\t      d3_geo_area.point(λ, φ);\n\t      linePoint(λ, φ);\n\t    }\n\t    function ringStart() {\n\t      d3_geo_area.lineStart();\n\t    }\n\t    function ringEnd() {\n\t      ringPoint(λ__, φ__);\n\t      d3_geo_area.lineEnd();\n\t      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n\t      range[0] = λ0, range[1] = λ1;\n\t      p0 = null;\n\t    }\n\t    function angle(λ0, λ1) {\n\t      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n\t    }\n\t    function compareRanges(a, b) {\n\t      return a[0] - b[0];\n\t    }\n\t    function withinRange(x, range) {\n\t      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t    }\n\t    return function(feature) {\n\t      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n\t      ranges = [];\n\t      d3.geo.stream(feature, bound);\n\t      var n = ranges.length;\n\t      if (n) {\n\t        ranges.sort(compareRanges);\n\t        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n\t          b = ranges[i];\n\t          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n\t            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t          } else {\n\t            merged.push(a = b);\n\t          }\n\t        }\n\t        var best = -Infinity, dλ;\n\t        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n\t          b = merged[i];\n\t          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n\t        }\n\t      }\n\t      ranges = range = null;\n\t      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n\t    };\n\t  }();\n\t  d3.geo.centroid = function(object) {\n\t    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t    d3.geo.stream(object, d3_geo_centroid);\n\t    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n\t    if (m < ε2) {\n\t      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n\t      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n\t      m = x * x + y * y + z * z;\n\t      if (m < ε2) return [ NaN, NaN ];\n\t    }\n\t    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n\t  };\n\t  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n\t  var d3_geo_centroid = {\n\t    sphere: d3_noop,\n\t    point: d3_geo_centroidPoint,\n\t    lineStart: d3_geo_centroidLineStart,\n\t    lineEnd: d3_geo_centroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n\t    }\n\t  };\n\t  function d3_geo_centroidPoint(λ, φ) {\n\t    λ *= d3_radians;\n\t    var cosφ = Math.cos(φ *= d3_radians);\n\t    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n\t  }\n\t  function d3_geo_centroidPointXYZ(x, y, z) {\n\t    ++d3_geo_centroidW0;\n\t    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n\t    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n\t    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n\t  }\n\t  function d3_geo_centroidLineStart() {\n\t    var x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroid.point = nextPoint;\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_centroidLineEnd() {\n\t    d3_geo_centroid.point = d3_geo_centroidPoint;\n\t  }\n\t  function d3_geo_centroidRingStart() {\n\t    var λ00, φ00, x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ00 = λ, φ00 = φ;\n\t      d3_geo_centroid.point = nextPoint;\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    d3_geo_centroid.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n\t      d3_geo_centroid.point = d3_geo_centroidPoint;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n\t      d3_geo_centroidX2 += v * cx;\n\t      d3_geo_centroidY2 += v * cy;\n\t      d3_geo_centroidZ2 += v * cz;\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_compose(a, b) {\n\t    function compose(x, y) {\n\t      return x = a(x, y), b(x[0], x[1]);\n\t    }\n\t    if (a.invert && b.invert) compose.invert = function(x, y) {\n\t      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t    };\n\t    return compose;\n\t  }\n\t  function d3_true() {\n\t    return true;\n\t  }\n\t  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n\t    var subject = [], clip = [];\n\t    segments.forEach(function(segment) {\n\t      if ((n = segment.length - 1) <= 0) return;\n\t      var n, p0 = segment[0], p1 = segment[n];\n\t      if (d3_geo_sphericalEqual(p0, p1)) {\n\t        listener.lineStart();\n\t        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n\t        listener.lineEnd();\n\t        return;\n\t      }\n\t      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n\t      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t    });\n\t    clip.sort(compare);\n\t    d3_geo_clipPolygonLinkCircular(subject);\n\t    d3_geo_clipPolygonLinkCircular(clip);\n\t    if (!subject.length) return;\n\t    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n\t      clip[i].e = entry = !entry;\n\t    }\n\t    var start = subject[0], points, point;\n\t    while (1) {\n\t      var current = start, isSubject = true;\n\t      while (current.v) if ((current = current.n) === start) return;\n\t      points = current.z;\n\t      listener.lineStart();\n\t      do {\n\t        current.v = current.o.v = true;\n\t        if (current.e) {\n\t          if (isSubject) {\n\t            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.n.x, 1, listener);\n\t          }\n\t          current = current.n;\n\t        } else {\n\t          if (isSubject) {\n\t            points = current.p.z;\n\t            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.p.x, -1, listener);\n\t          }\n\t          current = current.p;\n\t        }\n\t        current = current.o;\n\t        points = current.z;\n\t        isSubject = !isSubject;\n\t      } while (!current.v);\n\t      listener.lineEnd();\n\t    }\n\t  }\n\t  function d3_geo_clipPolygonLinkCircular(array) {\n\t    if (!(n = array.length)) return;\n\t    var n, i = 0, a = array[0], b;\n\t    while (++i < n) {\n\t      a.n = b = array[i];\n\t      b.p = a;\n\t      a = b;\n\t    }\n\t    a.n = b = array[0];\n\t    b.p = a;\n\t  }\n\t  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n\t    this.x = point;\n\t    this.z = points;\n\t    this.o = other;\n\t    this.e = entry;\n\t    this.v = false;\n\t    this.n = this.p = null;\n\t  }\n\t  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n\t    return function(rotate, listener) {\n\t      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          clip.point = pointRing;\n\t          clip.lineStart = ringStart;\n\t          clip.lineEnd = ringEnd;\n\t          segments = [];\n\t          polygon = [];\n\t        },\n\t        polygonEnd: function() {\n\t          clip.point = point;\n\t          clip.lineStart = lineStart;\n\t          clip.lineEnd = lineEnd;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\t          if (segments.length) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n\t          } else if (clipStartInside) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            interpolate(null, null, 1, listener);\n\t            listener.lineEnd();\n\t          }\n\t          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n\t          segments = polygon = null;\n\t        },\n\t        sphere: function() {\n\t          listener.polygonStart();\n\t          listener.lineStart();\n\t          interpolate(null, null, 1, listener);\n\t          listener.lineEnd();\n\t          listener.polygonEnd();\n\t        }\n\t      };\n\t      function point(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n\t      }\n\t      function pointLine(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        line.point(point[0], point[1]);\n\t      }\n\t      function lineStart() {\n\t        clip.point = pointLine;\n\t        line.lineStart();\n\t      }\n\t      function lineEnd() {\n\t        clip.point = point;\n\t        line.lineEnd();\n\t      }\n\t      var segments;\n\t      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n\t      function pointRing(λ, φ) {\n\t        ring.push([ λ, φ ]);\n\t        var point = rotate(λ, φ);\n\t        ringListener.point(point[0], point[1]);\n\t      }\n\t      function ringStart() {\n\t        ringListener.lineStart();\n\t        ring = [];\n\t      }\n\t      function ringEnd() {\n\t        pointRing(ring[0][0], ring[0][1]);\n\t        ringListener.lineEnd();\n\t        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n\t        ring.pop();\n\t        polygon.push(ring);\n\t        ring = null;\n\t        if (!n) return;\n\t        if (clean & 1) {\n\t          segment = ringSegments[0];\n\t          var n = segment.length - 1, i = -1, point;\n\t          if (n > 0) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n\t            listener.lineEnd();\n\t          }\n\t          return;\n\t        }\n\t        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n\t      }\n\t      return clip;\n\t    };\n\t  }\n\t  function d3_geo_clipSegmentLength1(segment) {\n\t    return segment.length > 1;\n\t  }\n\t  function d3_geo_clipBufferListener() {\n\t    var lines = [], line;\n\t    return {\n\t      lineStart: function() {\n\t        lines.push(line = []);\n\t      },\n\t      point: function(λ, φ) {\n\t        line.push([ λ, φ ]);\n\t      },\n\t      lineEnd: d3_noop,\n\t      buffer: function() {\n\t        var buffer = lines;\n\t        lines = [];\n\t        line = null;\n\t        return buffer;\n\t      },\n\t      rejoin: function() {\n\t        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipSort(a, b) {\n\t    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n\t  }\n\t  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n\t  function d3_geo_clipAntimeridianLine(listener) {\n\t    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n\t    return {\n\t      lineStart: function() {\n\t        listener.lineStart();\n\t        clean = 1;\n\t      },\n\t      point: function(λ1, φ1) {\n\t        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n\t        if (abs(dλ - π) < ε) {\n\t          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          listener.point(λ1, φ0);\n\t          clean = 0;\n\t        } else if (sλ0 !== sλ1 && dλ >= π) {\n\t          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n\t          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n\t          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          clean = 0;\n\t        }\n\t        listener.point(λ0 = λ1, φ0 = φ1);\n\t        sλ0 = sλ1;\n\t      },\n\t      lineEnd: function() {\n\t        listener.lineEnd();\n\t        λ0 = φ0 = NaN;\n\t      },\n\t      clean: function() {\n\t        return 2 - clean;\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n\t    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n\t    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n\t  }\n\t  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n\t    var φ;\n\t    if (from == null) {\n\t      φ = direction * halfπ;\n\t      listener.point(-π, φ);\n\t      listener.point(0, φ);\n\t      listener.point(π, φ);\n\t      listener.point(π, 0);\n\t      listener.point(π, -φ);\n\t      listener.point(0, -φ);\n\t      listener.point(-π, -φ);\n\t      listener.point(-π, 0);\n\t      listener.point(-π, φ);\n\t    } else if (abs(from[0] - to[0]) > ε) {\n\t      var s = from[0] < to[0] ? π : -π;\n\t      φ = direction * s / 2;\n\t      listener.point(-s, φ);\n\t      listener.point(0, φ);\n\t      listener.point(s, φ);\n\t    } else {\n\t      listener.point(to[0], to[1]);\n\t    }\n\t  }\n\t  function d3_geo_pointInPolygon(point, polygon) {\n\t    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n\t    d3_geo_areaRingSum.reset();\n\t    for (var i = 0, n = polygon.length; i < n; ++i) {\n\t      var ring = polygon[i], m = ring.length;\n\t      if (!m) continue;\n\t      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n\t      while (true) {\n\t        if (j === m) j = 0;\n\t        point = ring[j];\n\t        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n\t        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n\t        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\t        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n\t          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n\t          d3_geo_cartesianNormalize(arc);\n\t          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n\t          d3_geo_cartesianNormalize(intersection);\n\t          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\t          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n\t            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n\t          }\n\t        }\n\t        if (!j++) break;\n\t        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n\t      }\n\t    }\n\t    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n\t  }\n\t  function d3_geo_clipCircle(radius) {\n\t    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n\t    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n\t    function visible(λ, φ) {\n\t      return Math.cos(λ) * Math.cos(φ) > cr;\n\t    }\n\t    function clipLine(listener) {\n\t      var point0, c0, v0, v00, clean;\n\t      return {\n\t        lineStart: function() {\n\t          v00 = v0 = false;\n\t          clean = 1;\n\t        },\n\t        point: function(λ, φ) {\n\t          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n\t          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\t          if (v !== v0) {\n\t            point2 = intersect(point0, point1);\n\t            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n\t              point1[0] += ε;\n\t              point1[1] += ε;\n\t              v = visible(point1[0], point1[1]);\n\t            }\n\t          }\n\t          if (v !== v0) {\n\t            clean = 0;\n\t            if (v) {\n\t              listener.lineStart();\n\t              point2 = intersect(point1, point0);\n\t              listener.point(point2[0], point2[1]);\n\t            } else {\n\t              point2 = intersect(point0, point1);\n\t              listener.point(point2[0], point2[1]);\n\t              listener.lineEnd();\n\t            }\n\t            point0 = point2;\n\t          } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t            var t;\n\t            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t              clean = 0;\n\t              if (smallRadius) {\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t              } else {\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t              }\n\t            }\n\t          }\n\t          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n\t            listener.point(point1[0], point1[1]);\n\t          }\n\t          point0 = point1, v0 = v, c0 = c;\n\t        },\n\t        lineEnd: function() {\n\t          if (v0) listener.lineEnd();\n\t          point0 = null;\n\t        },\n\t        clean: function() {\n\t          return clean | (v00 && v0) << 1;\n\t        }\n\t      };\n\t    }\n\t    function intersect(a, b, two) {\n\t      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n\t      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n\t      if (!determinant) return !two && a;\n\t      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n\t      d3_geo_cartesianAdd(A, B);\n\t      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n\t      if (t2 < 0) return;\n\t      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n\t      d3_geo_cartesianAdd(q, A);\n\t      q = d3_geo_spherical(q);\n\t      if (!two) return q;\n\t      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n\t      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n\t      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n\t      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\t      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n\t        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n\t        d3_geo_cartesianAdd(q1, A);\n\t        return [ q, d3_geo_spherical(q1) ];\n\t      }\n\t    }\n\t    function code(λ, φ) {\n\t      var r = smallRadius ? radius : π - radius, code = 0;\n\t      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n\t      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n\t      return code;\n\t    }\n\t  }\n\t  function d3_geom_clipLine(x0, y0, x1, y1) {\n\t    return function(line) {\n\t      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n\t      r = x0 - ax;\n\t      if (!dx && r > 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dx > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = x1 - ax;\n\t      if (!dx && r < 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dx > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      r = y0 - ay;\n\t      if (!dy && r > 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dy > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = y1 - ay;\n\t      if (!dy && r < 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dy > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      if (t0 > 0) line.a = {\n\t        x: ax + t0 * dx,\n\t        y: ay + t0 * dy\n\t      };\n\t      if (t1 < 1) line.b = {\n\t        x: ax + t1 * dx,\n\t        y: ay + t1 * dy\n\t      };\n\t      return line;\n\t    };\n\t  }\n\t  var d3_geo_clipExtentMAX = 1e9;\n\t  d3.geo.clipExtent = function() {\n\t    var x0, y0, x1, y1, stream, clip, clipExtent = {\n\t      stream: function(output) {\n\t        if (stream) stream.valid = false;\n\t        stream = clip(output);\n\t        stream.valid = true;\n\t        return stream;\n\t      },\n\t      extent: function(_) {\n\t        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n\t        if (stream) stream.valid = false, stream = null;\n\t        return clipExtent;\n\t      }\n\t    };\n\t    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n\t  };\n\t  function d3_geo_clipExtent(x0, y0, x1, y1) {\n\t    return function(listener) {\n\t      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          listener = bufferListener;\n\t          segments = [];\n\t          polygon = [];\n\t          clean = true;\n\t        },\n\t        polygonEnd: function() {\n\t          listener = listener_;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n\t          if (inside || visible) {\n\t            listener.polygonStart();\n\t            if (inside) {\n\t              listener.lineStart();\n\t              interpolate(null, null, 1, listener);\n\t              listener.lineEnd();\n\t            }\n\t            if (visible) {\n\t              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n\t            }\n\t            listener.polygonEnd();\n\t          }\n\t          segments = polygon = ring = null;\n\t        }\n\t      };\n\t      function insidePolygon(p) {\n\t        var wn = 0, n = polygon.length, y = p[1];\n\t        for (var i = 0; i < n; ++i) {\n\t          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n\t            b = v[j];\n\t            if (a[1] <= y) {\n\t              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n\t            } else {\n\t              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n\t            }\n\t            a = b;\n\t          }\n\t        }\n\t        return wn !== 0;\n\t      }\n\t      function interpolate(from, to, direction, listener) {\n\t        var a = 0, a1 = 0;\n\t        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n\t          do {\n\t            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t          } while ((a = (a + direction + 4) % 4) !== a1);\n\t        } else {\n\t          listener.point(to[0], to[1]);\n\t        }\n\t      }\n\t      function pointVisible(x, y) {\n\t        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t      }\n\t      function point(x, y) {\n\t        if (pointVisible(x, y)) listener.point(x, y);\n\t      }\n\t      var x__, y__, v__, x_, y_, v_, first, clean;\n\t      function lineStart() {\n\t        clip.point = linePoint;\n\t        if (polygon) polygon.push(ring = []);\n\t        first = true;\n\t        v_ = false;\n\t        x_ = y_ = NaN;\n\t      }\n\t      function lineEnd() {\n\t        if (segments) {\n\t          linePoint(x__, y__);\n\t          if (v__ && v_) bufferListener.rejoin();\n\t          segments.push(bufferListener.buffer());\n\t        }\n\t        clip.point = point;\n\t        if (v_) listener.lineEnd();\n\t      }\n\t      function linePoint(x, y) {\n\t        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n\t        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n\t        var v = pointVisible(x, y);\n\t        if (polygon) ring.push([ x, y ]);\n\t        if (first) {\n\t          x__ = x, y__ = y, v__ = v;\n\t          first = false;\n\t          if (v) {\n\t            listener.lineStart();\n\t            listener.point(x, y);\n\t          }\n\t        } else {\n\t          if (v && v_) listener.point(x, y); else {\n\t            var l = {\n\t              a: {\n\t                x: x_,\n\t                y: y_\n\t              },\n\t              b: {\n\t                x: x,\n\t                y: y\n\t              }\n\t            };\n\t            if (clipLine(l)) {\n\t              if (!v_) {\n\t                listener.lineStart();\n\t                listener.point(l.a.x, l.a.y);\n\t              }\n\t              listener.point(l.b.x, l.b.y);\n\t              if (!v) listener.lineEnd();\n\t              clean = false;\n\t            } else if (v) {\n\t              listener.lineStart();\n\t              listener.point(x, y);\n\t              clean = false;\n\t            }\n\t          }\n\t        }\n\t        x_ = x, y_ = y, v_ = v;\n\t      }\n\t      return clip;\n\t    };\n\t    function corner(p, direction) {\n\t      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n\t    }\n\t    function compare(a, b) {\n\t      return comparePoints(a.x, b.x);\n\t    }\n\t    function comparePoints(a, b) {\n\t      var ca = corner(a, 1), cb = corner(b, 1);\n\t      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n\t    }\n\t  }\n\t  function d3_geo_conic(projectAt) {\n\t    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n\t    p.parallels = function(_) {\n\t      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n\t      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n\t    };\n\t    return p;\n\t  }\n\t  function d3_geo_conicEqualArea(φ0, φ1) {\n\t    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n\t    function forward(λ, φ) {\n\t      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n\t      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = ρ0 - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEqualArea = function() {\n\t    return d3_geo_conic(d3_geo_conicEqualArea);\n\t  }).raw = d3_geo_conicEqualArea;\n\t  d3.geo.albers = function() {\n\t    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n\t  };\n\t  d3.geo.albersUsa = function() {\n\t    var lower48 = d3.geo.albers();\n\t    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n\t    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n\t    var point, pointStream = {\n\t      point: function(x, y) {\n\t        point = [ x, y ];\n\t      }\n\t    }, lower48Point, alaskaPoint, hawaiiPoint;\n\t    function albersUsa(coordinates) {\n\t      var x = coordinates[0], y = coordinates[1];\n\t      point = null;\n\t      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n\t      return point;\n\t    }\n\t    albersUsa.invert = function(coordinates) {\n\t      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n\t      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n\t    };\n\t    albersUsa.stream = function(stream) {\n\t      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n\t      return {\n\t        point: function(x, y) {\n\t          lower48Stream.point(x, y);\n\t          alaskaStream.point(x, y);\n\t          hawaiiStream.point(x, y);\n\t        },\n\t        sphere: function() {\n\t          lower48Stream.sphere();\n\t          alaskaStream.sphere();\n\t          hawaiiStream.sphere();\n\t        },\n\t        lineStart: function() {\n\t          lower48Stream.lineStart();\n\t          alaskaStream.lineStart();\n\t          hawaiiStream.lineStart();\n\t        },\n\t        lineEnd: function() {\n\t          lower48Stream.lineEnd();\n\t          alaskaStream.lineEnd();\n\t          hawaiiStream.lineEnd();\n\t        },\n\t        polygonStart: function() {\n\t          lower48Stream.polygonStart();\n\t          alaskaStream.polygonStart();\n\t          hawaiiStream.polygonStart();\n\t        },\n\t        polygonEnd: function() {\n\t          lower48Stream.polygonEnd();\n\t          alaskaStream.polygonEnd();\n\t          hawaiiStream.polygonEnd();\n\t        }\n\t      };\n\t    };\n\t    albersUsa.precision = function(_) {\n\t      if (!arguments.length) return lower48.precision();\n\t      lower48.precision(_);\n\t      alaska.precision(_);\n\t      hawaii.precision(_);\n\t      return albersUsa;\n\t    };\n\t    albersUsa.scale = function(_) {\n\t      if (!arguments.length) return lower48.scale();\n\t      lower48.scale(_);\n\t      alaska.scale(_ * .35);\n\t      hawaii.scale(_);\n\t      return albersUsa.translate(lower48.translate());\n\t    };\n\t    albersUsa.translate = function(_) {\n\t      if (!arguments.length) return lower48.translate();\n\t      var k = lower48.scale(), x = +_[0], y = +_[1];\n\t      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n\t      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      return albersUsa;\n\t    };\n\t    return albersUsa.scale(1070);\n\t  };\n\t  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_pathAreaPolygon = 0;\n\t      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n\t      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n\t    }\n\t  };\n\t  function d3_geo_pathAreaRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathArea.point = function(x, y) {\n\t      d3_geo_pathArea.point = nextPoint;\n\t      x00 = x0 = x, y00 = y0 = y;\n\t    };\n\t    function nextPoint(x, y) {\n\t      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n\t      x0 = x, y0 = y;\n\t    }\n\t    d3_geo_pathArea.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n\t  var d3_geo_pathBounds = {\n\t    point: d3_geo_pathBoundsPoint,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_pathBoundsPoint(x, y) {\n\t    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n\t    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n\t    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n\t    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n\t  }\n\t  function d3_geo_pathBuffer() {\n\t    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointCircle = d3_geo_pathBufferCircle(_);\n\t        return stream;\n\t      },\n\t      result: function() {\n\t        if (buffer.length) {\n\t          var result = buffer.join(\"\");\n\t          buffer = [];\n\t          return result;\n\t        }\n\t      }\n\t    };\n\t    function point(x, y) {\n\t      buffer.push(\"M\", x, \",\", y, pointCircle);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      buffer.push(\"M\", x, \",\", y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      buffer.push(\"L\", x, \",\", y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      buffer.push(\"Z\");\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_pathBufferCircle(radius) {\n\t    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n\t  }\n\t  var d3_geo_pathCentroid = {\n\t    point: d3_geo_pathCentroidPoint,\n\t    lineStart: d3_geo_pathCentroidLineStart,\n\t    lineEnd: d3_geo_pathCentroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n\t      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n\t    }\n\t  };\n\t  function d3_geo_pathCentroidPoint(x, y) {\n\t    d3_geo_centroidX0 += x;\n\t    d3_geo_centroidY0 += y;\n\t    ++d3_geo_centroidZ0;\n\t  }\n\t  function d3_geo_pathCentroidLineStart() {\n\t    var x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t  }\n\t  function d3_geo_pathCentroidLineEnd() {\n\t    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t  }\n\t  function d3_geo_pathCentroidRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      z = y0 * x - x0 * y;\n\t      d3_geo_centroidX2 += z * (x0 + x);\n\t      d3_geo_centroidY2 += z * (y0 + y);\n\t      d3_geo_centroidZ2 += z * 3;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t    d3_geo_pathCentroid.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  function d3_geo_pathContext(context) {\n\t    var pointRadius = 4.5;\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointRadius = _;\n\t        return stream;\n\t      },\n\t      result: d3_noop\n\t    };\n\t    function point(x, y) {\n\t      context.moveTo(x + pointRadius, y);\n\t      context.arc(x, y, pointRadius, 0, τ);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      context.moveTo(x, y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      context.lineTo(x, y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      context.closePath();\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_resample(project) {\n\t    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n\t    function resample(stream) {\n\t      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n\t    }\n\t    function resampleNone(stream) {\n\t      return d3_geo_transformPoint(stream, function(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      });\n\t    }\n\t    function resampleRecursive(stream) {\n\t      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n\t      var resample = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          stream.polygonStart();\n\t          resample.lineStart = ringStart;\n\t        },\n\t        polygonEnd: function() {\n\t          stream.polygonEnd();\n\t          resample.lineStart = lineStart;\n\t        }\n\t      };\n\t      function point(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      }\n\t      function lineStart() {\n\t        x0 = NaN;\n\t        resample.point = linePoint;\n\t        stream.lineStart();\n\t      }\n\t      function linePoint(λ, φ) {\n\t        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t        stream.point(x0, y0);\n\t      }\n\t      function lineEnd() {\n\t        resample.point = point;\n\t        stream.lineEnd();\n\t      }\n\t      function ringStart() {\n\t        lineStart();\n\t        resample.point = ringPoint;\n\t        resample.lineEnd = ringEnd;\n\t      }\n\t      function ringPoint(λ, φ) {\n\t        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t        resample.point = linePoint;\n\t      }\n\t      function ringEnd() {\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n\t        resample.lineEnd = lineEnd;\n\t        lineEnd();\n\t      }\n\t      return resample;\n\t    }\n\t    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n\t      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n\t      if (d2 > 4 * δ2 && depth--) {\n\t        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n\t        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n\t          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n\t          stream.point(x2, y2);\n\t          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n\t        }\n\t      }\n\t    }\n\t    resample.precision = function(_) {\n\t      if (!arguments.length) return Math.sqrt(δ2);\n\t      maxDepth = (δ2 = _ * _) > 0 && 16;\n\t      return resample;\n\t    };\n\t    return resample;\n\t  }\n\t  d3.geo.path = function() {\n\t    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n\t    function path(object) {\n\t      if (object) {\n\t        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n\t        d3.geo.stream(object, cacheStream);\n\t      }\n\t      return contextStream.result();\n\t    }\n\t    path.area = function(object) {\n\t      d3_geo_pathAreaSum = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n\t      return d3_geo_pathAreaSum;\n\t    };\n\t    path.centroid = function(object) {\n\t      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n\t      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n\t    };\n\t    path.bounds = function(object) {\n\t      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n\t      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n\t      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n\t    };\n\t    path.projection = function(_) {\n\t      if (!arguments.length) return projection;\n\t      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n\t      return reset();\n\t    };\n\t    path.context = function(_) {\n\t      if (!arguments.length) return context;\n\t      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n\t      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t      return reset();\n\t    };\n\t    path.pointRadius = function(_) {\n\t      if (!arguments.length) return pointRadius;\n\t      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t      return path;\n\t    };\n\t    function reset() {\n\t      cacheStream = null;\n\t      return path;\n\t    }\n\t    return path.projection(d3.geo.albersUsa()).context(null);\n\t  };\n\t  function d3_geo_pathProjectStream(project) {\n\t    var resample = d3_geo_resample(function(x, y) {\n\t      return project([ x * d3_degrees, y * d3_degrees ]);\n\t    });\n\t    return function(stream) {\n\t      return d3_geo_projectionRadians(resample(stream));\n\t    };\n\t  }\n\t  d3.geo.transform = function(methods) {\n\t    return {\n\t      stream: function(stream) {\n\t        var transform = new d3_geo_transform(stream);\n\t        for (var k in methods) transform[k] = methods[k];\n\t        return transform;\n\t      }\n\t    };\n\t  };\n\t  function d3_geo_transform(stream) {\n\t    this.stream = stream;\n\t  }\n\t  d3_geo_transform.prototype = {\n\t    point: function(x, y) {\n\t      this.stream.point(x, y);\n\t    },\n\t    sphere: function() {\n\t      this.stream.sphere();\n\t    },\n\t    lineStart: function() {\n\t      this.stream.lineStart();\n\t    },\n\t    lineEnd: function() {\n\t      this.stream.lineEnd();\n\t    },\n\t    polygonStart: function() {\n\t      this.stream.polygonStart();\n\t    },\n\t    polygonEnd: function() {\n\t      this.stream.polygonEnd();\n\t    }\n\t  };\n\t  function d3_geo_transformPoint(stream, point) {\n\t    return {\n\t      point: point,\n\t      sphere: function() {\n\t        stream.sphere();\n\t      },\n\t      lineStart: function() {\n\t        stream.lineStart();\n\t      },\n\t      lineEnd: function() {\n\t        stream.lineEnd();\n\t      },\n\t      polygonStart: function() {\n\t        stream.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        stream.polygonEnd();\n\t      }\n\t    };\n\t  }\n\t  d3.geo.projection = d3_geo_projection;\n\t  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\t  function d3_geo_projection(project) {\n\t    return d3_geo_projectionMutator(function() {\n\t      return project;\n\t    })();\n\t  }\n\t  function d3_geo_projectionMutator(projectAt) {\n\t    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n\t      x = project(x, y);\n\t      return [ x[0] * k + δx, δy - x[1] * k ];\n\t    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n\t    function projection(point) {\n\t      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n\t      return [ point[0] * k + δx, δy - point[1] * k ];\n\t    }\n\t    function invert(point) {\n\t      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n\t      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n\t    }\n\t    projection.stream = function(output) {\n\t      if (stream) stream.valid = false;\n\t      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n\t      stream.valid = true;\n\t      return stream;\n\t    };\n\t    projection.clipAngle = function(_) {\n\t      if (!arguments.length) return clipAngle;\n\t      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n\t      return invalidate();\n\t    };\n\t    projection.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent;\n\t      clipExtent = _;\n\t      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n\t      return invalidate();\n\t    };\n\t    projection.scale = function(_) {\n\t      if (!arguments.length) return k;\n\t      k = +_;\n\t      return reset();\n\t    };\n\t    projection.translate = function(_) {\n\t      if (!arguments.length) return [ x, y ];\n\t      x = +_[0];\n\t      y = +_[1];\n\t      return reset();\n\t    };\n\t    projection.center = function(_) {\n\t      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n\t      λ = _[0] % 360 * d3_radians;\n\t      φ = _[1] % 360 * d3_radians;\n\t      return reset();\n\t    };\n\t    projection.rotate = function(_) {\n\t      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n\t      δλ = _[0] % 360 * d3_radians;\n\t      δφ = _[1] % 360 * d3_radians;\n\t      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n\t      return reset();\n\t    };\n\t    d3.rebind(projection, projectResample, \"precision\");\n\t    function reset() {\n\t      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n\t      var center = project(λ, φ);\n\t      δx = x - center[0] * k;\n\t      δy = y + center[1] * k;\n\t      return invalidate();\n\t    }\n\t    function invalidate() {\n\t      if (stream) stream.valid = false, stream = null;\n\t      return projection;\n\t    }\n\t    return function() {\n\t      project = projectAt.apply(this, arguments);\n\t      projection.invert = project.invert && invert;\n\t      return reset();\n\t    };\n\t  }\n\t  function d3_geo_projectionRadians(stream) {\n\t    return d3_geo_transformPoint(stream, function(x, y) {\n\t      stream.point(x * d3_radians, y * d3_radians);\n\t    });\n\t  }\n\t  function d3_geo_equirectangular(λ, φ) {\n\t    return [ λ, φ ];\n\t  }\n\t  (d3.geo.equirectangular = function() {\n\t    return d3_geo_projection(d3_geo_equirectangular);\n\t  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\t  d3.geo.rotation = function(rotate) {\n\t    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\t    function forward(coordinates) {\n\t      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    }\n\t    forward.invert = function(coordinates) {\n\t      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    };\n\t    return forward;\n\t  };\n\t  function d3_geo_identityRotation(λ, φ) {\n\t    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t  }\n\t  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\t  function d3_geo_rotation(δλ, δφ, δγ) {\n\t    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n\t  }\n\t  function d3_geo_forwardRotationλ(δλ) {\n\t    return function(λ, φ) {\n\t      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t    };\n\t  }\n\t  function d3_geo_rotationλ(δλ) {\n\t    var rotation = d3_geo_forwardRotationλ(δλ);\n\t    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n\t    return rotation;\n\t  }\n\t  function d3_geo_rotationφγ(δφ, δγ) {\n\t    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n\t    function rotation(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n\t      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n\t    }\n\t    rotation.invert = function(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n\t      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n\t    };\n\t    return rotation;\n\t  }\n\t  d3.geo.circle = function() {\n\t    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n\t    function circle() {\n\t      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n\t      interpolate(null, null, 1, {\n\t        point: function(x, y) {\n\t          ring.push(x = rotate(x, y));\n\t          x[0] *= d3_degrees, x[1] *= d3_degrees;\n\t        }\n\t      });\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ ring ]\n\t      };\n\t    }\n\t    circle.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return circle;\n\t    };\n\t    circle.angle = function(x) {\n\t      if (!arguments.length) return angle;\n\t      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n\t      return circle;\n\t    };\n\t    circle.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n\t      return circle;\n\t    };\n\t    return circle.angle(90);\n\t  };\n\t  function d3_geo_circleInterpolate(radius, precision) {\n\t    var cr = Math.cos(radius), sr = Math.sin(radius);\n\t    return function(from, to, direction, listener) {\n\t      var step = direction * precision;\n\t      if (from != null) {\n\t        from = d3_geo_circleAngle(cr, from);\n\t        to = d3_geo_circleAngle(cr, to);\n\t        if (direction > 0 ? from < to : from > to) from += direction * τ;\n\t      } else {\n\t        from = radius + direction * τ;\n\t        to = radius - .5 * step;\n\t      }\n\t      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n\t        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_circleAngle(cr, point) {\n\t    var a = d3_geo_cartesian(point);\n\t    a[0] -= cr;\n\t    d3_geo_cartesianNormalize(a);\n\t    var angle = d3_acos(-a[1]);\n\t    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n\t  }\n\t  d3.geo.distance = function(a, b) {\n\t    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n\t    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n\t  };\n\t  d3.geo.graticule = function() {\n\t    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n\t    function graticule() {\n\t      return {\n\t        type: \"MultiLineString\",\n\t        coordinates: lines()\n\t      };\n\t    }\n\t    function lines() {\n\t      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n\t        return abs(x % DX) > ε;\n\t      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n\t        return abs(y % DY) > ε;\n\t      }).map(y));\n\t    }\n\t    graticule.lines = function() {\n\t      return lines().map(function(coordinates) {\n\t        return {\n\t          type: \"LineString\",\n\t          coordinates: coordinates\n\t        };\n\t      });\n\t    };\n\t    graticule.outline = function() {\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n\t      };\n\t    };\n\t    graticule.extent = function(_) {\n\t      if (!arguments.length) return graticule.minorExtent();\n\t      return graticule.majorExtent(_).minorExtent(_);\n\t    };\n\t    graticule.majorExtent = function(_) {\n\t      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n\t      X0 = +_[0][0], X1 = +_[1][0];\n\t      Y0 = +_[0][1], Y1 = +_[1][1];\n\t      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.minorExtent = function(_) {\n\t      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t      x0 = +_[0][0], x1 = +_[1][0];\n\t      y0 = +_[0][1], y1 = +_[1][1];\n\t      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.step = function(_) {\n\t      if (!arguments.length) return graticule.minorStep();\n\t      return graticule.majorStep(_).minorStep(_);\n\t    };\n\t    graticule.majorStep = function(_) {\n\t      if (!arguments.length) return [ DX, DY ];\n\t      DX = +_[0], DY = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.minorStep = function(_) {\n\t      if (!arguments.length) return [ dx, dy ];\n\t      dx = +_[0], dy = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      precision = +_;\n\t      x = d3_geo_graticuleX(y0, y1, 90);\n\t      y = d3_geo_graticuleY(x0, x1, precision);\n\t      X = d3_geo_graticuleX(Y0, Y1, 90);\n\t      Y = d3_geo_graticuleY(X0, X1, precision);\n\t      return graticule;\n\t    };\n\t    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n\t  };\n\t  function d3_geo_graticuleX(y0, y1, dy) {\n\t    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n\t    return function(x) {\n\t      return y.map(function(y) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_geo_graticuleY(x0, x1, dx) {\n\t    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n\t    return function(y) {\n\t      return x.map(function(x) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_source(d) {\n\t    return d.source;\n\t  }\n\t  function d3_target(d) {\n\t    return d.target;\n\t  }\n\t  d3.geo.greatArc = function() {\n\t    var source = d3_source, source_, target = d3_target, target_;\n\t    function greatArc() {\n\t      return {\n\t        type: \"LineString\",\n\t        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n\t      };\n\t    }\n\t    greatArc.distance = function() {\n\t      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n\t    };\n\t    greatArc.source = function(_) {\n\t      if (!arguments.length) return source;\n\t      source = _, source_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.target = function(_) {\n\t      if (!arguments.length) return target;\n\t      target = _, target_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.precision = function() {\n\t      return arguments.length ? greatArc : 0;\n\t    };\n\t    return greatArc;\n\t  };\n\t  d3.geo.interpolate = function(source, target) {\n\t    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n\t  };\n\t  function d3_geo_interpolate(x0, y0, x1, y1) {\n\t    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n\t    var interpolate = d ? function(t) {\n\t      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n\t      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n\t    } : function() {\n\t      return [ x0 * d3_degrees, y0 * d3_degrees ];\n\t    };\n\t    interpolate.distance = d;\n\t    return interpolate;\n\t  }\n\t  d3.geo.length = function(object) {\n\t    d3_geo_lengthSum = 0;\n\t    d3.geo.stream(object, d3_geo_length);\n\t    return d3_geo_lengthSum;\n\t  };\n\t  var d3_geo_lengthSum;\n\t  var d3_geo_length = {\n\t    sphere: d3_noop,\n\t    point: d3_noop,\n\t    lineStart: d3_geo_lengthLineStart,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_lengthLineStart() {\n\t    var λ0, sinφ0, cosφ0;\n\t    d3_geo_length.point = function(λ, φ) {\n\t      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n\t      d3_geo_length.point = nextPoint;\n\t    };\n\t    d3_geo_length.lineEnd = function() {\n\t      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n\t      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n\t      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n\t    }\n\t  }\n\t  function d3_geo_azimuthal(scale, angle) {\n\t    function azimuthal(λ, φ) {\n\t      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n\t      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n\t    }\n\t    azimuthal.invert = function(x, y) {\n\t      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n\t      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n\t    };\n\t    return azimuthal;\n\t  }\n\t  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return Math.sqrt(2 / (1 + cosλcosφ));\n\t  }, function(ρ) {\n\t    return 2 * Math.asin(ρ / 2);\n\t  });\n\t  (d3.geo.azimuthalEqualArea = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n\t  }).raw = d3_geo_azimuthalEqualArea;\n\t  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n\t    var c = Math.acos(cosλcosφ);\n\t    return c && c / Math.sin(c);\n\t  }, d3_identity);\n\t  (d3.geo.azimuthalEquidistant = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n\t  }).raw = d3_geo_azimuthalEquidistant;\n\t  function d3_geo_conicConformal(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), t = function(φ) {\n\t      return Math.tan(π / 4 + φ / 2);\n\t    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n\t    if (!n) return d3_geo_mercator;\n\t    function forward(λ, φ) {\n\t      if (F > 0) {\n\t        if (φ < -halfπ + ε) φ = -halfπ + ε;\n\t      } else {\n\t        if (φ > halfπ - ε) φ = halfπ - ε;\n\t      }\n\t      var ρ = F / Math.pow(t(φ), n);\n\t      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n\t      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicConformal = function() {\n\t    return d3_geo_conic(d3_geo_conicConformal);\n\t  }).raw = d3_geo_conicConformal;\n\t  function d3_geo_conicEquidistant(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n\t    if (abs(n) < ε) return d3_geo_equirectangular;\n\t    function forward(λ, φ) {\n\t      var ρ = G - φ;\n\t      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = G - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEquidistant = function() {\n\t    return d3_geo_conic(d3_geo_conicEquidistant);\n\t  }).raw = d3_geo_conicEquidistant;\n\t  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / cosλcosφ;\n\t  }, Math.atan);\n\t  (d3.geo.gnomonic = function() {\n\t    return d3_geo_projection(d3_geo_gnomonic);\n\t  }).raw = d3_geo_gnomonic;\n\t  function d3_geo_mercator(λ, φ) {\n\t    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n\t  }\n\t  d3_geo_mercator.invert = function(x, y) {\n\t    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n\t  };\n\t  function d3_geo_mercatorProjection(project) {\n\t    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n\t    m.scale = function() {\n\t      var v = scale.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.translate = function() {\n\t      var v = translate.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.clipExtent = function(_) {\n\t      var v = clipExtent.apply(m, arguments);\n\t      if (v === m) {\n\t        if (clipAuto = _ == null) {\n\t          var k = π * scale(), t = translate();\n\t          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n\t        }\n\t      } else if (clipAuto) {\n\t        v = null;\n\t      }\n\t      return v;\n\t    };\n\t    return m.clipExtent(null);\n\t  }\n\t  (d3.geo.mercator = function() {\n\t    return d3_geo_mercatorProjection(d3_geo_mercator);\n\t  }).raw = d3_geo_mercator;\n\t  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n\t    return 1;\n\t  }, Math.asin);\n\t  (d3.geo.orthographic = function() {\n\t    return d3_geo_projection(d3_geo_orthographic);\n\t  }).raw = d3_geo_orthographic;\n\t  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / (1 + cosλcosφ);\n\t  }, function(ρ) {\n\t    return 2 * Math.atan(ρ);\n\t  });\n\t  (d3.geo.stereographic = function() {\n\t    return d3_geo_projection(d3_geo_stereographic);\n\t  }).raw = d3_geo_stereographic;\n\t  function d3_geo_transverseMercator(λ, φ) {\n\t    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n\t  }\n\t  d3_geo_transverseMercator.invert = function(x, y) {\n\t    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n\t  };\n\t  (d3.geo.transverseMercator = function() {\n\t    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n\t    projection.center = function(_) {\n\t      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n\t    };\n\t    projection.rotate = function(_) {\n\t      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n\t      [ _[0], _[1], _[2] - 90 ]);\n\t    };\n\t    return rotate([ 0, 0, 90 ]);\n\t  }).raw = d3_geo_transverseMercator;\n\t  d3.geom = {};\n\t  function d3_geom_pointX(d) {\n\t    return d[0];\n\t  }\n\t  function d3_geom_pointY(d) {\n\t    return d[1];\n\t  }\n\t  d3.geom.hull = function(vertices) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY;\n\t    if (arguments.length) return hull(vertices);\n\t    function hull(data) {\n\t      if (data.length < 3) return [];\n\t      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n\t      for (i = 0; i < n; i++) {\n\t        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n\t      }\n\t      points.sort(d3_geom_hullOrder);\n\t      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n\t      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n\t      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n\t      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n\t      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n\t      return polygon;\n\t    }\n\t    hull.x = function(_) {\n\t      return arguments.length ? (x = _, hull) : x;\n\t    };\n\t    hull.y = function(_) {\n\t      return arguments.length ? (y = _, hull) : y;\n\t    };\n\t    return hull;\n\t  };\n\t  function d3_geom_hullUpper(points) {\n\t    var n = points.length, hull = [ 0, 1 ], hs = 2;\n\t    for (var i = 2; i < n; i++) {\n\t      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n\t      hull[hs++] = i;\n\t    }\n\t    return hull.slice(0, hs);\n\t  }\n\t  function d3_geom_hullOrder(a, b) {\n\t    return a[0] - b[0] || a[1] - b[1];\n\t  }\n\t  d3.geom.polygon = function(coordinates) {\n\t    d3_subclass(coordinates, d3_geom_polygonPrototype);\n\t    return coordinates;\n\t  };\n\t  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\t  d3_geom_polygonPrototype.area = function() {\n\t    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      area += a[1] * b[0] - a[0] * b[1];\n\t    }\n\t    return area * .5;\n\t  };\n\t  d3_geom_polygonPrototype.centroid = function(k) {\n\t    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n\t    if (!arguments.length) k = -1 / (6 * this.area());\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      c = a[0] * b[1] - b[0] * a[1];\n\t      x += (a[0] + b[0]) * c;\n\t      y += (a[1] + b[1]) * c;\n\t    }\n\t    return [ x * k, y * k ];\n\t  };\n\t  d3_geom_polygonPrototype.clip = function(subject) {\n\t    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n\t    while (++i < n) {\n\t      input = subject.slice();\n\t      subject.length = 0;\n\t      b = this[i];\n\t      c = input[(m = input.length - closed) - 1];\n\t      j = -1;\n\t      while (++j < m) {\n\t        d = input[j];\n\t        if (d3_geom_polygonInside(d, a, b)) {\n\t          if (!d3_geom_polygonInside(c, a, b)) {\n\t            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t          }\n\t          subject.push(d);\n\t        } else if (d3_geom_polygonInside(c, a, b)) {\n\t          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t        }\n\t        c = d;\n\t      }\n\t      if (closed) subject.push(subject[0]);\n\t      a = b;\n\t    }\n\t    return subject;\n\t  };\n\t  function d3_geom_polygonInside(p, a, b) {\n\t    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n\t  }\n\t  function d3_geom_polygonIntersect(c, d, a, b) {\n\t    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n\t    return [ x1 + ua * x21, y1 + ua * y21 ];\n\t  }\n\t  function d3_geom_polygonClosed(coordinates) {\n\t    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n\t    return !(a[0] - b[0] || a[1] - b[1]);\n\t  }\n\t  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n\t  function d3_geom_voronoiBeach() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.edge = this.site = this.circle = null;\n\t  }\n\t  function d3_geom_voronoiCreateBeach(site) {\n\t    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n\t    beach.site = site;\n\t    return beach;\n\t  }\n\t  function d3_geom_voronoiDetachBeach(beach) {\n\t    d3_geom_voronoiDetachCircle(beach);\n\t    d3_geom_voronoiBeaches.remove(beach);\n\t    d3_geom_voronoiBeachPool.push(beach);\n\t    d3_geom_voronoiRedBlackNode(beach);\n\t  }\n\t  function d3_geom_voronoiRemoveBeach(beach) {\n\t    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n\t      x: x,\n\t      y: y\n\t    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n\t    d3_geom_voronoiDetachBeach(beach);\n\t    var lArc = previous;\n\t    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n\t      previous = lArc.P;\n\t      disappearing.unshift(lArc);\n\t      d3_geom_voronoiDetachBeach(lArc);\n\t      lArc = previous;\n\t    }\n\t    disappearing.unshift(lArc);\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    var rArc = next;\n\t    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n\t      next = rArc.N;\n\t      disappearing.push(rArc);\n\t      d3_geom_voronoiDetachBeach(rArc);\n\t      rArc = next;\n\t    }\n\t    disappearing.push(rArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var nArcs = disappearing.length, iArc;\n\t    for (iArc = 1; iArc < nArcs; ++iArc) {\n\t      rArc = disappearing[iArc];\n\t      lArc = disappearing[iArc - 1];\n\t      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t    }\n\t    lArc = disappearing[0];\n\t    rArc = disappearing[nArcs - 1];\n\t    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiAddBeach(site) {\n\t    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n\t    while (node) {\n\t      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n\t      if (dxl > ε) node = node.L; else {\n\t        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\t        if (dxr > ε) {\n\t          if (!node.R) {\n\t            lArc = node;\n\t            break;\n\t          }\n\t          node = node.R;\n\t        } else {\n\t          if (dxl > -ε) {\n\t            lArc = node.P;\n\t            rArc = node;\n\t          } else if (dxr > -ε) {\n\t            lArc = node;\n\t            rArc = node.N;\n\t          } else {\n\t            lArc = rArc = node;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    var newArc = d3_geom_voronoiCreateBeach(site);\n\t    d3_geom_voronoiBeaches.insert(lArc, newArc);\n\t    if (!lArc && !rArc) return;\n\t    if (lArc === rArc) {\n\t      d3_geom_voronoiDetachCircle(lArc);\n\t      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n\t      d3_geom_voronoiBeaches.insert(newArc, rArc);\n\t      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      d3_geom_voronoiAttachCircle(lArc);\n\t      d3_geom_voronoiAttachCircle(rArc);\n\t      return;\n\t    }\n\t    if (!rArc) {\n\t      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      return;\n\t    }\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n\t      x: (cy * hb - by * hc) / d + ax,\n\t      y: (bx * hc - cx * hb) / d + ay\n\t    };\n\t    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n\t    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n\t    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n\t    if (!pby2) return rfocx;\n\t    var lArc = arc.P;\n\t    if (!lArc) return -Infinity;\n\t    site = lArc.site;\n\t    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n\t    if (!plby2) return lfocx;\n\t    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n\t    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t    return (rfocx + lfocx) / 2;\n\t  }\n\t  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n\t    var rArc = arc.N;\n\t    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n\t    var site = arc.site;\n\t    return site.y === directrix ? site.x : Infinity;\n\t  }\n\t  function d3_geom_voronoiCell(site) {\n\t    this.site = site;\n\t    this.edges = [];\n\t  }\n\t  d3_geom_voronoiCell.prototype.prepare = function() {\n\t    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n\t    while (iHalfEdge--) {\n\t      edge = halfEdges[iHalfEdge].edge;\n\t      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n\t    }\n\t    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n\t    return halfEdges.length;\n\t  };\n\t  function d3_geom_voronoiCloseCells(extent) {\n\t    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n\t    while (iCell--) {\n\t      cell = cells[iCell];\n\t      if (!cell || !cell.prepare()) continue;\n\t      halfEdges = cell.edges;\n\t      nHalfEdges = halfEdges.length;\n\t      iHalfEdge = 0;\n\t      while (iHalfEdge < nHalfEdges) {\n\t        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n\t        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\t        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n\t          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n\t            x: x0,\n\t            y: abs(x2 - x0) < ε ? y2 : y1\n\t          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n\t            x: abs(y2 - y1) < ε ? x2 : x1,\n\t            y: y1\n\t          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n\t            x: x1,\n\t            y: abs(x2 - x1) < ε ? y2 : y0\n\t          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n\t            x: abs(y2 - y0) < ε ? x2 : x0,\n\t            y: y0\n\t          } : null), cell.site, null));\n\t          ++nHalfEdges;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n\t    return b.angle - a.angle;\n\t  }\n\t  function d3_geom_voronoiCircle() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.x = this.y = this.arc = this.site = this.cy = null;\n\t  }\n\t  function d3_geom_voronoiAttachCircle(arc) {\n\t    var lArc = arc.P, rArc = arc.N;\n\t    if (!lArc || !rArc) return;\n\t    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n\t    if (lSite === rSite) return;\n\t    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n\t    var d = 2 * (ax * cy - ay * cx);\n\t    if (d >= -ε2) return;\n\t    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n\t    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n\t    circle.arc = arc;\n\t    circle.site = cSite;\n\t    circle.x = x + bx;\n\t    circle.y = cy + Math.sqrt(x * x + y * y);\n\t    circle.cy = cy;\n\t    arc.circle = circle;\n\t    var before = null, node = d3_geom_voronoiCircles._;\n\t    while (node) {\n\t      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n\t        if (node.L) node = node.L; else {\n\t          before = node.P;\n\t          break;\n\t        }\n\t      } else {\n\t        if (node.R) node = node.R; else {\n\t          before = node;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    d3_geom_voronoiCircles.insert(before, circle);\n\t    if (!before) d3_geom_voronoiFirstCircle = circle;\n\t  }\n\t  function d3_geom_voronoiDetachCircle(arc) {\n\t    var circle = arc.circle;\n\t    if (circle) {\n\t      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n\t      d3_geom_voronoiCircles.remove(circle);\n\t      d3_geom_voronoiCirclePool.push(circle);\n\t      d3_geom_voronoiRedBlackNode(circle);\n\t      arc.circle = null;\n\t    }\n\t  }\n\t  function d3_geom_voronoiClipEdges(extent) {\n\t    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n\t    while (i--) {\n\t      e = edges[i];\n\t      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n\t        e.a = e.b = null;\n\t        edges.splice(i, 1);\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiConnectEdge(edge, extent) {\n\t    var vb = edge.b;\n\t    if (vb) return true;\n\t    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n\t    if (ry === ly) {\n\t      if (fx < x0 || fx >= x1) return;\n\t      if (lx > rx) {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y0\n\t        }; else if (va.y >= y1) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y1\n\t        };\n\t      } else {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y1\n\t        }; else if (va.y < y0) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y0\n\t        };\n\t      }\n\t    } else {\n\t      fm = (lx - rx) / (ry - ly);\n\t      fb = fy - fm * fx;\n\t      if (fm < -1 || fm > 1) {\n\t        if (lx > rx) {\n\t          if (!va) va = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          }; else if (va.y >= y1) return;\n\t          vb = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          }; else if (va.y < y0) return;\n\t          vb = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          };\n\t        }\n\t      } else {\n\t        if (ly < ry) {\n\t          if (!va) va = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          }; else if (va.x >= x1) return;\n\t          vb = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          }; else if (va.x < x0) return;\n\t          vb = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          };\n\t        }\n\t      }\n\t    }\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    return true;\n\t  }\n\t  function d3_geom_voronoiEdge(lSite, rSite) {\n\t    this.l = lSite;\n\t    this.r = rSite;\n\t    this.a = this.b = null;\n\t  }\n\t  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n\t    d3_geom_voronoiEdges.push(edge);\n\t    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n\t    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n\t    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n\t    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, null);\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    d3_geom_voronoiEdges.push(edge);\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n\t    if (!edge.a && !edge.b) {\n\t      edge.a = vertex;\n\t      edge.l = lSite;\n\t      edge.r = rSite;\n\t    } else if (edge.l === rSite) {\n\t      edge.b = vertex;\n\t    } else {\n\t      edge.a = vertex;\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n\t    var va = edge.a, vb = edge.b;\n\t    this.edge = edge;\n\t    this.site = lSite;\n\t    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n\t  }\n\t  d3_geom_voronoiHalfEdge.prototype = {\n\t    start: function() {\n\t      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n\t    },\n\t    end: function() {\n\t      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackTree() {\n\t    this._ = null;\n\t  }\n\t  function d3_geom_voronoiRedBlackNode(node) {\n\t    node.U = node.C = node.L = node.R = node.P = node.N = null;\n\t  }\n\t  d3_geom_voronoiRedBlackTree.prototype = {\n\t    insert: function(after, node) {\n\t      var parent, grandpa, uncle;\n\t      if (after) {\n\t        node.P = after;\n\t        node.N = after.N;\n\t        if (after.N) after.N.P = node;\n\t        after.N = node;\n\t        if (after.R) {\n\t          after = after.R;\n\t          while (after.L) after = after.L;\n\t          after.L = node;\n\t        } else {\n\t          after.R = node;\n\t        }\n\t        parent = after;\n\t      } else if (this._) {\n\t        after = d3_geom_voronoiRedBlackFirst(this._);\n\t        node.P = null;\n\t        node.N = after;\n\t        after.P = after.L = node;\n\t        parent = after;\n\t      } else {\n\t        node.P = node.N = null;\n\t        this._ = node;\n\t        parent = null;\n\t      }\n\t      node.L = node.R = null;\n\t      node.U = parent;\n\t      node.C = true;\n\t      after = node;\n\t      while (parent && parent.C) {\n\t        grandpa = parent.U;\n\t        if (parent === grandpa.L) {\n\t          uncle = grandpa.R;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.R) {\n\t              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n\t          }\n\t        } else {\n\t          uncle = grandpa.L;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.L) {\n\t              d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n\t          }\n\t        }\n\t        parent = after.U;\n\t      }\n\t      this._.C = false;\n\t    },\n\t    remove: function(node) {\n\t      if (node.N) node.N.P = node.P;\n\t      if (node.P) node.P.N = node.N;\n\t      node.N = node.P = null;\n\t      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n\t      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n\t      if (parent) {\n\t        if (parent.L === node) parent.L = next; else parent.R = next;\n\t      } else {\n\t        this._ = next;\n\t      }\n\t      if (left && right) {\n\t        red = next.C;\n\t        next.C = node.C;\n\t        next.L = left;\n\t        left.U = next;\n\t        if (next !== right) {\n\t          parent = next.U;\n\t          next.U = node.U;\n\t          node = next.R;\n\t          parent.L = node;\n\t          next.R = right;\n\t          right.U = next;\n\t        } else {\n\t          next.U = parent;\n\t          parent = next;\n\t          node = next.R;\n\t        }\n\t      } else {\n\t        red = node.C;\n\t        node = next;\n\t      }\n\t      if (node) node.U = parent;\n\t      if (red) return;\n\t      if (node && node.C) {\n\t        node.C = false;\n\t        return;\n\t      }\n\t      do {\n\t        if (node === this._) break;\n\t        if (node === parent.L) {\n\t          sibling = parent.R;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            sibling = parent.R;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.R || !sibling.R.C) {\n\t              sibling.L.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n\t              sibling = parent.R;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.R.C = false;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        } else {\n\t          sibling = parent.L;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            sibling = parent.L;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.L || !sibling.L.C) {\n\t              sibling.R.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n\t              sibling = parent.L;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.L.C = false;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        }\n\t        sibling.C = true;\n\t        node = parent;\n\t        parent = parent.U;\n\t      } while (!node.C);\n\t      if (node) node.C = false;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n\t    var p = node, q = node.R, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.R = q.L;\n\t    if (p.R) p.R.U = p;\n\t    q.L = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n\t    var p = node, q = node.L, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.L = q.R;\n\t    if (p.L) p.L.U = p;\n\t    q.R = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackFirst(node) {\n\t    while (node.L) node = node.L;\n\t    return node;\n\t  }\n\t  function d3_geom_voronoi(sites, bbox) {\n\t    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n\t    d3_geom_voronoiEdges = [];\n\t    d3_geom_voronoiCells = new Array(sites.length);\n\t    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n\t    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\t    while (true) {\n\t      circle = d3_geom_voronoiFirstCircle;\n\t      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n\t        if (site.x !== x0 || site.y !== y0) {\n\t          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n\t          d3_geom_voronoiAddBeach(site);\n\t          x0 = site.x, y0 = site.y;\n\t        }\n\t        site = sites.pop();\n\t      } else if (circle) {\n\t        d3_geom_voronoiRemoveBeach(circle.arc);\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n\t    var diagram = {\n\t      cells: d3_geom_voronoiCells,\n\t      edges: d3_geom_voronoiEdges\n\t    };\n\t    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n\t    return diagram;\n\t  }\n\t  function d3_geom_voronoiVertexOrder(a, b) {\n\t    return b.y - a.y || b.x - a.x;\n\t  }\n\t  d3.geom.voronoi = function(points) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n\t    if (points) return voronoi(points);\n\t    function voronoi(data) {\n\t      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n\t      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n\t        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n\t          var s = e.start();\n\t          return [ s.x, s.y ];\n\t        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n\t        polygon.point = data[i];\n\t      });\n\t      return polygons;\n\t    }\n\t    function sites(data) {\n\t      return data.map(function(d, i) {\n\t        return {\n\t          x: Math.round(fx(d, i) / ε) * ε,\n\t          y: Math.round(fy(d, i) / ε) * ε,\n\t          i: i\n\t        };\n\t      });\n\t    }\n\t    voronoi.links = function(data) {\n\t      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n\t        return edge.l && edge.r;\n\t      }).map(function(edge) {\n\t        return {\n\t          source: data[edge.l.i],\n\t          target: data[edge.r.i]\n\t        };\n\t      });\n\t    };\n\t    voronoi.triangles = function(data) {\n\t      var triangles = [];\n\t      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n\t        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n\t        while (++j < m) {\n\t          e0 = e1;\n\t          s0 = s1;\n\t          e1 = edges[j].edge;\n\t          s1 = e1.l === site ? e1.r : e1.l;\n\t          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n\t            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n\t          }\n\t        }\n\t      });\n\t      return triangles;\n\t    };\n\t    voronoi.x = function(_) {\n\t      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n\t    };\n\t    voronoi.y = function(_) {\n\t      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n\t    };\n\t    voronoi.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n\t      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n\t      return voronoi;\n\t    };\n\t    voronoi.size = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n\t      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n\t    };\n\t    return voronoi;\n\t  };\n\t  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n\t  function d3_geom_voronoiTriangleArea(a, b, c) {\n\t    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n\t  }\n\t  d3.geom.delaunay = function(vertices) {\n\t    return d3.geom.voronoi().triangles(vertices);\n\t  };\n\t  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n\t    if (compat = arguments.length) {\n\t      x = d3_geom_quadtreeCompatX;\n\t      y = d3_geom_quadtreeCompatY;\n\t      if (compat === 3) {\n\t        y2 = y1;\n\t        x2 = x1;\n\t        y1 = x1 = 0;\n\t      }\n\t      return quadtree(points);\n\t    }\n\t    function quadtree(data) {\n\t      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n\t      if (x1 != null) {\n\t        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n\t      } else {\n\t        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n\t        xs = [], ys = [];\n\t        n = data.length;\n\t        if (compat) for (i = 0; i < n; ++i) {\n\t          d = data[i];\n\t          if (d.x < x1_) x1_ = d.x;\n\t          if (d.y < y1_) y1_ = d.y;\n\t          if (d.x > x2_) x2_ = d.x;\n\t          if (d.y > y2_) y2_ = d.y;\n\t          xs.push(d.x);\n\t          ys.push(d.y);\n\t        } else for (i = 0; i < n; ++i) {\n\t          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n\t          if (x_ < x1_) x1_ = x_;\n\t          if (y_ < y1_) y1_ = y_;\n\t          if (x_ > x2_) x2_ = x_;\n\t          if (y_ > y2_) y2_ = y_;\n\t          xs.push(x_);\n\t          ys.push(y_);\n\t        }\n\t      }\n\t      var dx = x2_ - x1_, dy = y2_ - y1_;\n\t      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n\t      function insert(n, d, x, y, x1, y1, x2, y2) {\n\t        if (isNaN(x) || isNaN(y)) return;\n\t        if (n.leaf) {\n\t          var nx = n.x, ny = n.y;\n\t          if (nx != null) {\n\t            if (abs(nx - x) + abs(ny - y) < .01) {\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            } else {\n\t              var nPoint = n.point;\n\t              n.x = n.y = n.point = null;\n\t              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            }\n\t          } else {\n\t            n.x = x, n.y = y, n.point = d;\n\t          }\n\t        } else {\n\t          insertChild(n, d, x, y, x1, y1, x2, y2);\n\t        }\n\t      }\n\t      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n\t        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n\t        n.leaf = false;\n\t        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n\t        if (right) x1 = xm; else x2 = xm;\n\t        if (below) y1 = ym; else y2 = ym;\n\t        insert(n, d, x, y, x1, y1, x2, y2);\n\t      }\n\t      var root = d3_geom_quadtreeNode();\n\t      root.add = function(d) {\n\t        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n\t      };\n\t      root.visit = function(f) {\n\t        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n\t      };\n\t      root.find = function(point) {\n\t        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n\t      };\n\t      i = -1;\n\t      if (x1 == null) {\n\t        while (++i < n) {\n\t          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n\t        }\n\t        --i;\n\t      } else data.forEach(root.add);\n\t      xs = ys = data = d = null;\n\t      return root;\n\t    }\n\t    quadtree.x = function(_) {\n\t      return arguments.length ? (x = _, quadtree) : x;\n\t    };\n\t    quadtree.y = function(_) {\n\t      return arguments.length ? (y = _, quadtree) : y;\n\t    };\n\t    quadtree.extent = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n\t      y2 = +_[1][1];\n\t      return quadtree;\n\t    };\n\t    quadtree.size = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n\t      return quadtree;\n\t    };\n\t    return quadtree;\n\t  };\n\t  function d3_geom_quadtreeCompatX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_geom_quadtreeCompatY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_geom_quadtreeNode() {\n\t    return {\n\t      leaf: true,\n\t      nodes: [],\n\t      point: null,\n\t      x: null,\n\t      y: null\n\t    };\n\t  }\n\t  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n\t    if (!f(node, x1, y1, x2, y2)) {\n\t      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n\t      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n\t      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n\t      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n\t      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n\t    }\n\t  }\n\t  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n\t    var minDistance2 = Infinity, closestPoint;\n\t    (function find(node, x1, y1, x2, y2) {\n\t      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\t      if (point = node.point) {\n\t        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n\t        if (distance2 < minDistance2) {\n\t          var distance = Math.sqrt(minDistance2 = distance2);\n\t          x0 = x - distance, y0 = y - distance;\n\t          x3 = x + distance, y3 = y + distance;\n\t          closestPoint = point;\n\t        }\n\t      }\n\t      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n\t      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n\t        if (node = children[i & 3]) switch (i & 3) {\n\t         case 0:\n\t          find(node, x1, y1, xm, ym);\n\t          break;\n\t\n\t         case 1:\n\t          find(node, xm, y1, x2, ym);\n\t          break;\n\t\n\t         case 2:\n\t          find(node, x1, ym, xm, y2);\n\t          break;\n\t\n\t         case 3:\n\t          find(node, xm, ym, x2, y2);\n\t          break;\n\t        }\n\t      }\n\t    })(root, x0, y0, x3, y3);\n\t    return closestPoint;\n\t  }\n\t  d3.interpolateRgb = d3_interpolateRgb;\n\t  function d3_interpolateRgb(a, b) {\n\t    a = d3.rgb(a);\n\t    b = d3.rgb(b);\n\t    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n\t    return function(t) {\n\t      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n\t    };\n\t  }\n\t  d3.interpolateObject = d3_interpolateObject;\n\t  function d3_interpolateObject(a, b) {\n\t    var i = {}, c = {}, k;\n\t    for (k in a) {\n\t      if (k in b) {\n\t        i[k] = d3_interpolate(a[k], b[k]);\n\t      } else {\n\t        c[k] = a[k];\n\t      }\n\t    }\n\t    for (k in b) {\n\t      if (!(k in a)) {\n\t        c[k] = b[k];\n\t      }\n\t    }\n\t    return function(t) {\n\t      for (k in i) c[k] = i[k](t);\n\t      return c;\n\t    };\n\t  }\n\t  d3.interpolateNumber = d3_interpolateNumber;\n\t  function d3_interpolateNumber(a, b) {\n\t    a = +a, b = +b;\n\t    return function(t) {\n\t      return a * (1 - t) + b * t;\n\t    };\n\t  }\n\t  d3.interpolateString = d3_interpolateString;\n\t  function d3_interpolateString(a, b) {\n\t    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n\t    a = a + \"\", b = b + \"\";\n\t    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n\t      if ((bs = bm.index) > bi) {\n\t        bs = b.slice(bi, bs);\n\t        if (s[i]) s[i] += bs; else s[++i] = bs;\n\t      }\n\t      if ((am = am[0]) === (bm = bm[0])) {\n\t        if (s[i]) s[i] += bm; else s[++i] = bm;\n\t      } else {\n\t        s[++i] = null;\n\t        q.push({\n\t          i: i,\n\t          x: d3_interpolateNumber(am, bm)\n\t        });\n\t      }\n\t      bi = d3_interpolate_numberB.lastIndex;\n\t    }\n\t    if (bi < b.length) {\n\t      bs = b.slice(bi);\n\t      if (s[i]) s[i] += bs; else s[++i] = bs;\n\t    }\n\t    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n\t      return b(t) + \"\";\n\t    }) : function() {\n\t      return b;\n\t    } : (b = q.length, function(t) {\n\t      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    });\n\t  }\n\t  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n\t  d3.interpolate = d3_interpolate;\n\t  function d3_interpolate(a, b) {\n\t    var i = d3.interpolators.length, f;\n\t    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n\t    return f;\n\t  }\n\t  d3.interpolators = [ function(a, b) {\n\t    var t = typeof b;\n\t    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n\t  } ];\n\t  d3.interpolateArray = d3_interpolateArray;\n\t  function d3_interpolateArray(a, b) {\n\t    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n\t    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n\t    for (;i < na; ++i) c[i] = a[i];\n\t    for (;i < nb; ++i) c[i] = b[i];\n\t    return function(t) {\n\t      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n\t      return c;\n\t    };\n\t  }\n\t  var d3_ease_default = function() {\n\t    return d3_identity;\n\t  };\n\t  var d3_ease = d3.map({\n\t    linear: d3_ease_default,\n\t    poly: d3_ease_poly,\n\t    quad: function() {\n\t      return d3_ease_quad;\n\t    },\n\t    cubic: function() {\n\t      return d3_ease_cubic;\n\t    },\n\t    sin: function() {\n\t      return d3_ease_sin;\n\t    },\n\t    exp: function() {\n\t      return d3_ease_exp;\n\t    },\n\t    circle: function() {\n\t      return d3_ease_circle;\n\t    },\n\t    elastic: d3_ease_elastic,\n\t    back: d3_ease_back,\n\t    bounce: function() {\n\t      return d3_ease_bounce;\n\t    }\n\t  });\n\t  var d3_ease_mode = d3.map({\n\t    \"in\": d3_identity,\n\t    out: d3_ease_reverse,\n\t    \"in-out\": d3_ease_reflect,\n\t    \"out-in\": function(f) {\n\t      return d3_ease_reflect(d3_ease_reverse(f));\n\t    }\n\t  });\n\t  d3.ease = function(name) {\n\t    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n\t    t = d3_ease.get(t) || d3_ease_default;\n\t    m = d3_ease_mode.get(m) || d3_identity;\n\t    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n\t  };\n\t  function d3_ease_clamp(f) {\n\t    return function(t) {\n\t      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n\t    };\n\t  }\n\t  function d3_ease_reverse(f) {\n\t    return function(t) {\n\t      return 1 - f(1 - t);\n\t    };\n\t  }\n\t  function d3_ease_reflect(f) {\n\t    return function(t) {\n\t      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n\t    };\n\t  }\n\t  function d3_ease_quad(t) {\n\t    return t * t;\n\t  }\n\t  function d3_ease_cubic(t) {\n\t    return t * t * t;\n\t  }\n\t  function d3_ease_cubicInOut(t) {\n\t    if (t <= 0) return 0;\n\t    if (t >= 1) return 1;\n\t    var t2 = t * t, t3 = t2 * t;\n\t    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n\t  }\n\t  function d3_ease_poly(e) {\n\t    return function(t) {\n\t      return Math.pow(t, e);\n\t    };\n\t  }\n\t  function d3_ease_sin(t) {\n\t    return 1 - Math.cos(t * halfπ);\n\t  }\n\t  function d3_ease_exp(t) {\n\t    return Math.pow(2, 10 * (t - 1));\n\t  }\n\t  function d3_ease_circle(t) {\n\t    return 1 - Math.sqrt(1 - t * t);\n\t  }\n\t  function d3_ease_elastic(a, p) {\n\t    var s;\n\t    if (arguments.length < 2) p = .45;\n\t    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n\t    return function(t) {\n\t      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n\t    };\n\t  }\n\t  function d3_ease_back(s) {\n\t    if (!s) s = 1.70158;\n\t    return function(t) {\n\t      return t * t * ((s + 1) * t - s);\n\t    };\n\t  }\n\t  function d3_ease_bounce(t) {\n\t    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n\t  }\n\t  d3.interpolateHcl = d3_interpolateHcl;\n\t  function d3_interpolateHcl(a, b) {\n\t    a = d3.hcl(a);\n\t    b = d3.hcl(b);\n\t    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n\t    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateHsl = d3_interpolateHsl;\n\t  function d3_interpolateHsl(a, b) {\n\t    a = d3.hsl(a);\n\t    b = d3.hsl(b);\n\t    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n\t    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateLab = d3_interpolateLab;\n\t  function d3_interpolateLab(a, b) {\n\t    a = d3.lab(a);\n\t    b = d3.lab(b);\n\t    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n\t    return function(t) {\n\t      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateRound = d3_interpolateRound;\n\t  function d3_interpolateRound(a, b) {\n\t    b -= a;\n\t    return function(t) {\n\t      return Math.round(a + b * t);\n\t    };\n\t  }\n\t  d3.transform = function(string) {\n\t    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n\t    return (d3.transform = function(string) {\n\t      if (string != null) {\n\t        g.setAttribute(\"transform\", string);\n\t        var t = g.transform.baseVal.consolidate();\n\t      }\n\t      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n\t    })(string);\n\t  };\n\t  function d3_transform(m) {\n\t    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\t    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n\t      r0[0] *= -1;\n\t      r0[1] *= -1;\n\t      kx *= -1;\n\t      kz *= -1;\n\t    }\n\t    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n\t    this.translate = [ m.e, m.f ];\n\t    this.scale = [ kx, ky ];\n\t    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n\t  }\n\t  d3_transform.prototype.toString = function() {\n\t    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n\t  };\n\t  function d3_transformDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1];\n\t  }\n\t  function d3_transformNormalize(a) {\n\t    var k = Math.sqrt(d3_transformDot(a, a));\n\t    if (k) {\n\t      a[0] /= k;\n\t      a[1] /= k;\n\t    }\n\t    return k;\n\t  }\n\t  function d3_transformCombine(a, b, k) {\n\t    a[0] += k * b[0];\n\t    a[1] += k * b[1];\n\t    return a;\n\t  }\n\t  var d3_transformIdentity = {\n\t    a: 1,\n\t    b: 0,\n\t    c: 0,\n\t    d: 1,\n\t    e: 0,\n\t    f: 0\n\t  };\n\t  d3.interpolateTransform = d3_interpolateTransform;\n\t  function d3_interpolateTransformPop(s) {\n\t    return s.length ? s.pop() + \",\" : \"\";\n\t  }\n\t  function d3_interpolateTranslate(ta, tb, s, q) {\n\t    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n\t      var i = s.push(\"translate(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: i - 4,\n\t        x: d3_interpolateNumber(ta[0], tb[0])\n\t      }, {\n\t        i: i - 2,\n\t        x: d3_interpolateNumber(ta[1], tb[1])\n\t      });\n\t    } else if (tb[0] || tb[1]) {\n\t      s.push(\"translate(\" + tb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateRotate(ra, rb, s, q) {\n\t    if (ra !== rb) {\n\t      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n\t      q.push({\n\t        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(ra, rb)\n\t      });\n\t    } else if (rb) {\n\t      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateSkew(wa, wb, s, q) {\n\t    if (wa !== wb) {\n\t      q.push({\n\t        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(wa, wb)\n\t      });\n\t    } else if (wb) {\n\t      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateScale(ka, kb, s, q) {\n\t    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n\t      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: i - 4,\n\t        x: d3_interpolateNumber(ka[0], kb[0])\n\t      }, {\n\t        i: i - 2,\n\t        x: d3_interpolateNumber(ka[1], kb[1])\n\t      });\n\t    } else if (kb[0] !== 1 || kb[1] !== 1) {\n\t      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateTransform(a, b) {\n\t    var s = [], q = [];\n\t    a = d3.transform(a), b = d3.transform(b);\n\t    d3_interpolateTranslate(a.translate, b.translate, s, q);\n\t    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n\t    d3_interpolateSkew(a.skew, b.skew, s, q);\n\t    d3_interpolateScale(a.scale, b.scale, s, q);\n\t    a = b = null;\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  }\n\t  function d3_uninterpolateNumber(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return (x - a) / b;\n\t    };\n\t  }\n\t  function d3_uninterpolateClamp(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return Math.max(0, Math.min(1, (x - a) / b));\n\t    };\n\t  }\n\t  d3.layout = {};\n\t  d3.layout.bundle = function() {\n\t    return function(links) {\n\t      var paths = [], i = -1, n = links.length;\n\t      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n\t      return paths;\n\t    };\n\t  };\n\t  function d3_layout_bundlePath(link) {\n\t    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n\t    while (start !== lca) {\n\t      start = start.parent;\n\t      points.push(start);\n\t    }\n\t    var k = points.length;\n\t    while (end !== lca) {\n\t      points.splice(k, 0, end);\n\t      end = end.parent;\n\t    }\n\t    return points;\n\t  }\n\t  function d3_layout_bundleAncestors(node) {\n\t    var ancestors = [], parent = node.parent;\n\t    while (parent != null) {\n\t      ancestors.push(node);\n\t      node = parent;\n\t      parent = parent.parent;\n\t    }\n\t    ancestors.push(node);\n\t    return ancestors;\n\t  }\n\t  function d3_layout_bundleLeastCommonAncestor(a, b) {\n\t    if (a === b) return a;\n\t    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n\t    while (aNode === bNode) {\n\t      sharedNode = aNode;\n\t      aNode = aNodes.pop();\n\t      bNode = bNodes.pop();\n\t    }\n\t    return sharedNode;\n\t  }\n\t  d3.layout.chord = function() {\n\t    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n\t    function relayout() {\n\t      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n\t      chords = [];\n\t      groups = [];\n\t      k = 0, i = -1;\n\t      while (++i < n) {\n\t        x = 0, j = -1;\n\t        while (++j < n) {\n\t          x += matrix[i][j];\n\t        }\n\t        groupSums.push(x);\n\t        subgroupIndex.push(d3.range(n));\n\t        k += x;\n\t      }\n\t      if (sortGroups) {\n\t        groupIndex.sort(function(a, b) {\n\t          return sortGroups(groupSums[a], groupSums[b]);\n\t        });\n\t      }\n\t      if (sortSubgroups) {\n\t        subgroupIndex.forEach(function(d, i) {\n\t          d.sort(function(a, b) {\n\t            return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t          });\n\t        });\n\t      }\n\t      k = (τ - padding * n) / k;\n\t      x = 0, i = -1;\n\t      while (++i < n) {\n\t        x0 = x, j = -1;\n\t        while (++j < n) {\n\t          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n\t          subgroups[di + \"-\" + dj] = {\n\t            index: di,\n\t            subindex: dj,\n\t            startAngle: a0,\n\t            endAngle: a1,\n\t            value: v\n\t          };\n\t        }\n\t        groups[di] = {\n\t          index: di,\n\t          startAngle: x0,\n\t          endAngle: x,\n\t          value: groupSums[di]\n\t        };\n\t        x += padding;\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        j = i - 1;\n\t        while (++j < n) {\n\t          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n\t          if (source.value || target.value) {\n\t            chords.push(source.value < target.value ? {\n\t              source: target,\n\t              target: source\n\t            } : {\n\t              source: source,\n\t              target: target\n\t            });\n\t          }\n\t        }\n\t      }\n\t      if (sortChords) resort();\n\t    }\n\t    function resort() {\n\t      chords.sort(function(a, b) {\n\t        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n\t      });\n\t    }\n\t    chord.matrix = function(x) {\n\t      if (!arguments.length) return matrix;\n\t      n = (matrix = x) && matrix.length;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      padding = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortGroups = function(x) {\n\t      if (!arguments.length) return sortGroups;\n\t      sortGroups = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortSubgroups = function(x) {\n\t      if (!arguments.length) return sortSubgroups;\n\t      sortSubgroups = x;\n\t      chords = null;\n\t      return chord;\n\t    };\n\t    chord.sortChords = function(x) {\n\t      if (!arguments.length) return sortChords;\n\t      sortChords = x;\n\t      if (chords) resort();\n\t      return chord;\n\t    };\n\t    chord.chords = function() {\n\t      if (!chords) relayout();\n\t      return chords;\n\t    };\n\t    chord.groups = function() {\n\t      if (!groups) relayout();\n\t      return groups;\n\t    };\n\t    return chord;\n\t  };\n\t  d3.layout.force = function() {\n\t    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n\t    function repulse(node) {\n\t      return function(quad, x1, _, x2) {\n\t        if (quad.point !== node) {\n\t          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n\t          if (dw * dw / theta2 < dn) {\n\t            if (dn < chargeDistance2) {\n\t              var k = quad.charge / dn;\n\t              node.px -= dx * k;\n\t              node.py -= dy * k;\n\t            }\n\t            return true;\n\t          }\n\t          if (quad.point && dn && dn < chargeDistance2) {\n\t            var k = quad.pointCharge / dn;\n\t            node.px -= dx * k;\n\t            node.py -= dy * k;\n\t          }\n\t        }\n\t        return !quad.charge;\n\t      };\n\t    }\n\t    force.tick = function() {\n\t      if ((alpha *= .99) < .005) {\n\t        timer = null;\n\t        event.end({\n\t          type: \"end\",\n\t          alpha: alpha = 0\n\t        });\n\t        return true;\n\t      }\n\t      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        s = o.source;\n\t        t = o.target;\n\t        x = t.x - s.x;\n\t        y = t.y - s.y;\n\t        if (l = x * x + y * y) {\n\t          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n\t          x *= l;\n\t          y *= l;\n\t          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n\t          t.y -= y * k;\n\t          s.x += x * (k = 1 - k);\n\t          s.y += y * k;\n\t        }\n\t      }\n\t      if (k = alpha * gravity) {\n\t        x = size[0] / 2;\n\t        y = size[1] / 2;\n\t        i = -1;\n\t        if (k) while (++i < n) {\n\t          o = nodes[i];\n\t          o.x += (x - o.x) * k;\n\t          o.y += (y - o.y) * k;\n\t        }\n\t      }\n\t      if (charge) {\n\t        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n\t        i = -1;\n\t        while (++i < n) {\n\t          if (!(o = nodes[i]).fixed) {\n\t            q.visit(repulse(o));\n\t          }\n\t        }\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        o = nodes[i];\n\t        if (o.fixed) {\n\t          o.x = o.px;\n\t          o.y = o.py;\n\t        } else {\n\t          o.x -= (o.px - (o.px = o.x)) * friction;\n\t          o.y -= (o.py - (o.py = o.y)) * friction;\n\t        }\n\t      }\n\t      event.tick({\n\t        type: \"tick\",\n\t        alpha: alpha\n\t      });\n\t    };\n\t    force.nodes = function(x) {\n\t      if (!arguments.length) return nodes;\n\t      nodes = x;\n\t      return force;\n\t    };\n\t    force.links = function(x) {\n\t      if (!arguments.length) return links;\n\t      links = x;\n\t      return force;\n\t    };\n\t    force.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return force;\n\t    };\n\t    force.linkDistance = function(x) {\n\t      if (!arguments.length) return linkDistance;\n\t      linkDistance = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.distance = force.linkDistance;\n\t    force.linkStrength = function(x) {\n\t      if (!arguments.length) return linkStrength;\n\t      linkStrength = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.friction = function(x) {\n\t      if (!arguments.length) return friction;\n\t      friction = +x;\n\t      return force;\n\t    };\n\t    force.charge = function(x) {\n\t      if (!arguments.length) return charge;\n\t      charge = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.chargeDistance = function(x) {\n\t      if (!arguments.length) return Math.sqrt(chargeDistance2);\n\t      chargeDistance2 = x * x;\n\t      return force;\n\t    };\n\t    force.gravity = function(x) {\n\t      if (!arguments.length) return gravity;\n\t      gravity = +x;\n\t      return force;\n\t    };\n\t    force.theta = function(x) {\n\t      if (!arguments.length) return Math.sqrt(theta2);\n\t      theta2 = x * x;\n\t      return force;\n\t    };\n\t    force.alpha = function(x) {\n\t      if (!arguments.length) return alpha;\n\t      x = +x;\n\t      if (alpha) {\n\t        if (x > 0) {\n\t          alpha = x;\n\t        } else {\n\t          timer.c = null, timer.t = NaN, timer = null;\n\t          event.end({\n\t            type: \"end\",\n\t            alpha: alpha = 0\n\t          });\n\t        }\n\t      } else if (x > 0) {\n\t        event.start({\n\t          type: \"start\",\n\t          alpha: alpha = x\n\t        });\n\t        timer = d3_timer(force.tick);\n\t      }\n\t      return force;\n\t    };\n\t    force.start = function() {\n\t      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n\t      for (i = 0; i < n; ++i) {\n\t        (o = nodes[i]).index = i;\n\t        o.weight = 0;\n\t      }\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        if (typeof o.source == \"number\") o.source = nodes[o.source];\n\t        if (typeof o.target == \"number\") o.target = nodes[o.target];\n\t        ++o.source.weight;\n\t        ++o.target.weight;\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        o = nodes[i];\n\t        if (isNaN(o.x)) o.x = position(\"x\", w);\n\t        if (isNaN(o.y)) o.y = position(\"y\", h);\n\t        if (isNaN(o.px)) o.px = o.x;\n\t        if (isNaN(o.py)) o.py = o.y;\n\t      }\n\t      distances = [];\n\t      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n\t      strengths = [];\n\t      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n\t      charges = [];\n\t      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n\t      function position(dimension, size) {\n\t        if (!neighbors) {\n\t          neighbors = new Array(n);\n\t          for (j = 0; j < n; ++j) {\n\t            neighbors[j] = [];\n\t          }\n\t          for (j = 0; j < m; ++j) {\n\t            var o = links[j];\n\t            neighbors[o.source.index].push(o.target);\n\t            neighbors[o.target.index].push(o.source);\n\t          }\n\t        }\n\t        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n\t        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n\t        return Math.random() * size;\n\t      }\n\t      return force.resume();\n\t    };\n\t    force.resume = function() {\n\t      return force.alpha(.1);\n\t    };\n\t    force.stop = function() {\n\t      return force.alpha(0);\n\t    };\n\t    force.drag = function() {\n\t      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n\t      if (!arguments.length) return drag;\n\t      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n\t    };\n\t    function dragmove(d) {\n\t      d.px = d3.event.x, d.py = d3.event.y;\n\t      force.resume();\n\t    }\n\t    return d3.rebind(force, event, \"on\");\n\t  };\n\t  function d3_layout_forceDragstart(d) {\n\t    d.fixed |= 2;\n\t  }\n\t  function d3_layout_forceDragend(d) {\n\t    d.fixed &= ~6;\n\t  }\n\t  function d3_layout_forceMouseover(d) {\n\t    d.fixed |= 4;\n\t    d.px = d.x, d.py = d.y;\n\t  }\n\t  function d3_layout_forceMouseout(d) {\n\t    d.fixed &= ~4;\n\t  }\n\t  function d3_layout_forceAccumulate(quad, alpha, charges) {\n\t    var cx = 0, cy = 0;\n\t    quad.charge = 0;\n\t    if (!quad.leaf) {\n\t      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n\t      while (++i < n) {\n\t        c = nodes[i];\n\t        if (c == null) continue;\n\t        d3_layout_forceAccumulate(c, alpha, charges);\n\t        quad.charge += c.charge;\n\t        cx += c.charge * c.cx;\n\t        cy += c.charge * c.cy;\n\t      }\n\t    }\n\t    if (quad.point) {\n\t      if (!quad.leaf) {\n\t        quad.point.x += Math.random() - .5;\n\t        quad.point.y += Math.random() - .5;\n\t      }\n\t      var k = alpha * charges[quad.point.index];\n\t      quad.charge += quad.pointCharge = k;\n\t      cx += k * quad.point.x;\n\t      cy += k * quad.point.y;\n\t    }\n\t    quad.cx = cx / quad.charge;\n\t    quad.cy = cy / quad.charge;\n\t  }\n\t  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n\t  d3.layout.hierarchy = function() {\n\t    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n\t    function hierarchy(root) {\n\t      var stack = [ root ], nodes = [], node;\n\t      root.depth = 0;\n\t      while ((node = stack.pop()) != null) {\n\t        nodes.push(node);\n\t        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n\t          var n, childs, child;\n\t          while (--n >= 0) {\n\t            stack.push(child = childs[n]);\n\t            child.parent = node;\n\t            child.depth = node.depth + 1;\n\t          }\n\t          if (value) node.value = 0;\n\t          node.children = childs;\n\t        } else {\n\t          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          delete node.children;\n\t        }\n\t      }\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var childs, parent;\n\t        if (sort && (childs = node.children)) childs.sort(sort);\n\t        if (value && (parent = node.parent)) parent.value += node.value;\n\t      });\n\t      return nodes;\n\t    }\n\t    hierarchy.sort = function(x) {\n\t      if (!arguments.length) return sort;\n\t      sort = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.children = function(x) {\n\t      if (!arguments.length) return children;\n\t      children = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.value = function(x) {\n\t      if (!arguments.length) return value;\n\t      value = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.revalue = function(root) {\n\t      if (value) {\n\t        d3_layout_hierarchyVisitBefore(root, function(node) {\n\t          if (node.children) node.value = 0;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, function(node) {\n\t          var parent;\n\t          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          if (parent = node.parent) parent.value += node.value;\n\t        });\n\t      }\n\t      return root;\n\t    };\n\t    return hierarchy;\n\t  };\n\t  function d3_layout_hierarchyRebind(object, hierarchy) {\n\t    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n\t    object.nodes = object;\n\t    object.links = d3_layout_hierarchyLinks;\n\t    return object;\n\t  }\n\t  function d3_layout_hierarchyVisitBefore(node, callback) {\n\t    var nodes = [ node ];\n\t    while ((node = nodes.pop()) != null) {\n\t      callback(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var n, children;\n\t        while (--n >= 0) nodes.push(children[n]);\n\t      }\n\t    }\n\t  }\n\t  function d3_layout_hierarchyVisitAfter(node, callback) {\n\t    var nodes = [ node ], nodes2 = [];\n\t    while ((node = nodes.pop()) != null) {\n\t      nodes2.push(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var i = -1, n, children;\n\t        while (++i < n) nodes.push(children[i]);\n\t      }\n\t    }\n\t    while ((node = nodes2.pop()) != null) {\n\t      callback(node);\n\t    }\n\t  }\n\t  function d3_layout_hierarchyChildren(d) {\n\t    return d.children;\n\t  }\n\t  function d3_layout_hierarchyValue(d) {\n\t    return d.value;\n\t  }\n\t  function d3_layout_hierarchySort(a, b) {\n\t    return b.value - a.value;\n\t  }\n\t  function d3_layout_hierarchyLinks(nodes) {\n\t    return d3.merge(nodes.map(function(parent) {\n\t      return (parent.children || []).map(function(child) {\n\t        return {\n\t          source: parent,\n\t          target: child\n\t        };\n\t      });\n\t    }));\n\t  }\n\t  d3.layout.partition = function() {\n\t    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n\t    function position(node, x, dx, dy) {\n\t      var children = node.children;\n\t      node.x = x;\n\t      node.y = node.depth * dy;\n\t      node.dx = dx;\n\t      node.dy = dy;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n, c, d;\n\t        dx = node.value ? dx / node.value : 0;\n\t        while (++i < n) {\n\t          position(c = children[i], x, d = c.value * dx, dy);\n\t          x += d;\n\t        }\n\t      }\n\t    }\n\t    function depth(node) {\n\t      var children = node.children, d = 0;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n;\n\t        while (++i < n) d = Math.max(d, depth(children[i]));\n\t      }\n\t      return 1 + d;\n\t    }\n\t    function partition(d, i) {\n\t      var nodes = hierarchy.call(this, d, i);\n\t      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n\t      return nodes;\n\t    }\n\t    partition.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return partition;\n\t    };\n\t    return d3_layout_hierarchyRebind(partition, hierarchy);\n\t  };\n\t  d3.layout.pie = function() {\n\t    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n\t    function pie(data) {\n\t      var n = data.length, values = data.map(function(d, i) {\n\t        return +value.call(pie, d, i);\n\t      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n\t      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n\t        return values[j] - values[i];\n\t      } : function(i, j) {\n\t        return sort(data[i], data[j]);\n\t      });\n\t      index.forEach(function(i) {\n\t        arcs[i] = {\n\t          data: data[i],\n\t          value: v = values[i],\n\t          startAngle: a,\n\t          endAngle: a += v * k + pa,\n\t          padAngle: p\n\t        };\n\t      });\n\t      return arcs;\n\t    }\n\t    pie.value = function(_) {\n\t      if (!arguments.length) return value;\n\t      value = _;\n\t      return pie;\n\t    };\n\t    pie.sort = function(_) {\n\t      if (!arguments.length) return sort;\n\t      sort = _;\n\t      return pie;\n\t    };\n\t    pie.startAngle = function(_) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = _;\n\t      return pie;\n\t    };\n\t    pie.endAngle = function(_) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = _;\n\t      return pie;\n\t    };\n\t    pie.padAngle = function(_) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = _;\n\t      return pie;\n\t    };\n\t    return pie;\n\t  };\n\t  var d3_layout_pieSortByValue = {};\n\t  d3.layout.stack = function() {\n\t    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n\t    function stack(data, index) {\n\t      if (!(n = data.length)) return data;\n\t      var series = data.map(function(d, i) {\n\t        return values.call(stack, d, i);\n\t      });\n\t      var points = series.map(function(d) {\n\t        return d.map(function(v, i) {\n\t          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n\t        });\n\t      });\n\t      var orders = order.call(stack, points, index);\n\t      series = d3.permute(series, orders);\n\t      points = d3.permute(points, orders);\n\t      var offsets = offset.call(stack, points, index);\n\t      var m = series[0].length, n, i, j, o;\n\t      for (j = 0; j < m; ++j) {\n\t        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\t        for (i = 1; i < n; ++i) {\n\t          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t    stack.values = function(x) {\n\t      if (!arguments.length) return values;\n\t      values = x;\n\t      return stack;\n\t    };\n\t    stack.order = function(x) {\n\t      if (!arguments.length) return order;\n\t      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n\t      return stack;\n\t    };\n\t    stack.offset = function(x) {\n\t      if (!arguments.length) return offset;\n\t      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n\t      return stack;\n\t    };\n\t    stack.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      return stack;\n\t    };\n\t    stack.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      return stack;\n\t    };\n\t    stack.out = function(z) {\n\t      if (!arguments.length) return out;\n\t      out = z;\n\t      return stack;\n\t    };\n\t    return stack;\n\t  };\n\t  function d3_layout_stackX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_layout_stackY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_layout_stackOut(d, y0, y) {\n\t    d.y0 = y0;\n\t    d.y = y;\n\t  }\n\t  var d3_layout_stackOrders = d3.map({\n\t    \"inside-out\": function(data) {\n\t      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n\t        return max[a] - max[b];\n\t      }), top = 0, bottom = 0, tops = [], bottoms = [];\n\t      for (i = 0; i < n; ++i) {\n\t        j = index[i];\n\t        if (top < bottom) {\n\t          top += sums[j];\n\t          tops.push(j);\n\t        } else {\n\t          bottom += sums[j];\n\t          bottoms.push(j);\n\t        }\n\t      }\n\t      return bottoms.reverse().concat(tops);\n\t    },\n\t    reverse: function(data) {\n\t      return d3.range(data.length).reverse();\n\t    },\n\t    \"default\": d3_layout_stackOrderDefault\n\t  });\n\t  var d3_layout_stackOffsets = d3.map({\n\t    silhouette: function(data) {\n\t      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o > max) max = o;\n\t        sums.push(o);\n\t      }\n\t      for (j = 0; j < m; ++j) {\n\t        y0[j] = (max - sums[j]) / 2;\n\t      }\n\t      return y0;\n\t    },\n\t    wiggle: function(data) {\n\t      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n\t      y0[0] = o = o0 = 0;\n\t      for (j = 1; j < m; ++j) {\n\t        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n\t        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n\t          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n\t            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n\t          }\n\t          s2 += s3 * data[i][j][1];\n\t        }\n\t        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n\t        if (o < o0) o0 = o;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] -= o0;\n\t      return y0;\n\t    },\n\t    expand: function(data) {\n\t      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] = 0;\n\t      return y0;\n\t    },\n\t    zero: d3_layout_stackOffsetZero\n\t  });\n\t  function d3_layout_stackOrderDefault(data) {\n\t    return d3.range(data.length);\n\t  }\n\t  function d3_layout_stackOffsetZero(data) {\n\t    var j = -1, m = data[0].length, y0 = [];\n\t    while (++j < m) y0[j] = 0;\n\t    return y0;\n\t  }\n\t  function d3_layout_stackMaxIndex(array) {\n\t    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n\t    for (;i < n; ++i) {\n\t      if ((k = array[i][1]) > v) {\n\t        j = i;\n\t        v = k;\n\t      }\n\t    }\n\t    return j;\n\t  }\n\t  function d3_layout_stackReduceSum(d) {\n\t    return d.reduce(d3_layout_stackSum, 0);\n\t  }\n\t  function d3_layout_stackSum(p, d) {\n\t    return p + d[1];\n\t  }\n\t  d3.layout.histogram = function() {\n\t    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n\t    function histogram(data, i) {\n\t      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n\t      while (++i < m) {\n\t        bin = bins[i] = [];\n\t        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n\t        bin.y = 0;\n\t      }\n\t      if (m > 0) {\n\t        i = -1;\n\t        while (++i < n) {\n\t          x = values[i];\n\t          if (x >= range[0] && x <= range[1]) {\n\t            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n\t            bin.y += k;\n\t            bin.push(data[i]);\n\t          }\n\t        }\n\t      }\n\t      return bins;\n\t    }\n\t    histogram.value = function(x) {\n\t      if (!arguments.length) return valuer;\n\t      valuer = x;\n\t      return histogram;\n\t    };\n\t    histogram.range = function(x) {\n\t      if (!arguments.length) return ranger;\n\t      ranger = d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.bins = function(x) {\n\t      if (!arguments.length) return binner;\n\t      binner = typeof x === \"number\" ? function(range) {\n\t        return d3_layout_histogramBinFixed(range, x);\n\t      } : d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.frequency = function(x) {\n\t      if (!arguments.length) return frequency;\n\t      frequency = !!x;\n\t      return histogram;\n\t    };\n\t    return histogram;\n\t  };\n\t  function d3_layout_histogramBinSturges(range, values) {\n\t    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n\t  }\n\t  function d3_layout_histogramBinFixed(range, n) {\n\t    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n\t    while (++x <= n) f[x] = m * x + b;\n\t    return f;\n\t  }\n\t  function d3_layout_histogramRange(values) {\n\t    return [ d3.min(values), d3.max(values) ];\n\t  }\n\t  d3.layout.pack = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n\t    function pack(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n\t        return radius;\n\t      };\n\t      root.x = root.y = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(d) {\n\t        d.r = +r(d.value);\n\t      });\n\t      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t      if (padding) {\n\t        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r += dr;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r -= dr;\n\t        });\n\t      }\n\t      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n\t      return nodes;\n\t    }\n\t    pack.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _;\n\t      return pack;\n\t    };\n\t    pack.radius = function(_) {\n\t      if (!arguments.length) return radius;\n\t      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n\t      return pack;\n\t    };\n\t    pack.padding = function(_) {\n\t      if (!arguments.length) return padding;\n\t      padding = +_;\n\t      return pack;\n\t    };\n\t    return d3_layout_hierarchyRebind(pack, hierarchy);\n\t  };\n\t  function d3_layout_packSort(a, b) {\n\t    return a.value - b.value;\n\t  }\n\t  function d3_layout_packInsert(a, b) {\n\t    var c = a._pack_next;\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t    b._pack_next = c;\n\t    c._pack_prev = b;\n\t  }\n\t  function d3_layout_packSplice(a, b) {\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t  }\n\t  function d3_layout_packIntersects(a, b) {\n\t    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n\t    return .999 * dr * dr > dx * dx + dy * dy;\n\t  }\n\t  function d3_layout_packSiblings(node) {\n\t    if (!(nodes = node.children) || !(n = nodes.length)) return;\n\t    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n\t    function bound(node) {\n\t      xMin = Math.min(node.x - node.r, xMin);\n\t      xMax = Math.max(node.x + node.r, xMax);\n\t      yMin = Math.min(node.y - node.r, yMin);\n\t      yMax = Math.max(node.y + node.r, yMax);\n\t    }\n\t    nodes.forEach(d3_layout_packLink);\n\t    a = nodes[0];\n\t    a.x = -a.r;\n\t    a.y = 0;\n\t    bound(a);\n\t    if (n > 1) {\n\t      b = nodes[1];\n\t      b.x = b.r;\n\t      b.y = 0;\n\t      bound(b);\n\t      if (n > 2) {\n\t        c = nodes[2];\n\t        d3_layout_packPlace(a, b, c);\n\t        bound(c);\n\t        d3_layout_packInsert(a, c);\n\t        a._pack_prev = c;\n\t        d3_layout_packInsert(c, b);\n\t        b = a._pack_next;\n\t        for (i = 3; i < n; i++) {\n\t          d3_layout_packPlace(a, b, c = nodes[i]);\n\t          var isect = 0, s1 = 1, s2 = 1;\n\t          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n\t            if (d3_layout_packIntersects(j, c)) {\n\t              isect = 1;\n\t              break;\n\t            }\n\t          }\n\t          if (isect == 1) {\n\t            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n\t              if (d3_layout_packIntersects(k, c)) {\n\t                break;\n\t              }\n\t            }\n\t          }\n\t          if (isect) {\n\t            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n\t            i--;\n\t          } else {\n\t            d3_layout_packInsert(a, c);\n\t            b = c;\n\t            bound(c);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n\t    for (i = 0; i < n; i++) {\n\t      c = nodes[i];\n\t      c.x -= cx;\n\t      c.y -= cy;\n\t      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n\t    }\n\t    node.r = cr;\n\t    nodes.forEach(d3_layout_packUnlink);\n\t  }\n\t  function d3_layout_packLink(node) {\n\t    node._pack_next = node._pack_prev = node;\n\t  }\n\t  function d3_layout_packUnlink(node) {\n\t    delete node._pack_next;\n\t    delete node._pack_prev;\n\t  }\n\t  function d3_layout_packTransform(node, x, y, k) {\n\t    var children = node.children;\n\t    node.x = x += k * node.x;\n\t    node.y = y += k * node.y;\n\t    node.r *= k;\n\t    if (children) {\n\t      var i = -1, n = children.length;\n\t      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n\t    }\n\t  }\n\t  function d3_layout_packPlace(a, b, c) {\n\t    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n\t    if (db && (dx || dy)) {\n\t      var da = b.r + c.r, dc = dx * dx + dy * dy;\n\t      da *= da;\n\t      db *= db;\n\t      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t      c.x = a.x + x * dx + y * dy;\n\t      c.y = a.y + x * dy - y * dx;\n\t    } else {\n\t      c.x = a.x + db;\n\t      c.y = a.y;\n\t    }\n\t  }\n\t  d3.layout.tree = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n\t    function tree(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n\t      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n\t      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n\t      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n\t        var left = root0, right = root0, bottom = root0;\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          if (node.x < left.x) left = node;\n\t          if (node.x > right.x) right = node;\n\t          if (node.depth > bottom.depth) bottom = node;\n\t        });\n\t        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          node.x = (node.x + tx) * kx;\n\t          node.y = node.depth * ky;\n\t        });\n\t      }\n\t      return nodes;\n\t    }\n\t    function wrapTree(root0) {\n\t      var root1 = {\n\t        A: null,\n\t        children: [ root0 ]\n\t      }, queue = [ root1 ], node1;\n\t      while ((node1 = queue.pop()) != null) {\n\t        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n\t          queue.push((children[i] = child = {\n\t            _: children[i],\n\t            parent: node1,\n\t            children: (child = children[i].children) && child.slice() || [],\n\t            A: null,\n\t            a: null,\n\t            z: 0,\n\t            m: 0,\n\t            c: 0,\n\t            s: 0,\n\t            t: null,\n\t            i: i\n\t          }).a = child);\n\t        }\n\t      }\n\t      return root1.children[0];\n\t    }\n\t    function firstWalk(v) {\n\t      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n\t      if (children.length) {\n\t        d3_layout_treeShift(v);\n\t        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t        if (w) {\n\t          v.z = w.z + separation(v._, w._);\n\t          v.m = v.z - midpoint;\n\t        } else {\n\t          v.z = midpoint;\n\t        }\n\t      } else if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t      }\n\t      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t    }\n\t    function secondWalk(v) {\n\t      v._.x = v.z + v.parent.m;\n\t      v.m += v.parent.m;\n\t    }\n\t    function apportion(v, w, ancestor) {\n\t      if (w) {\n\t        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n\t        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n\t          vom = d3_layout_treeLeft(vom);\n\t          vop = d3_layout_treeRight(vop);\n\t          vop.a = v;\n\t          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t          if (shift > 0) {\n\t            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n\t            sip += shift;\n\t            sop += shift;\n\t          }\n\t          sim += vim.m;\n\t          sip += vip.m;\n\t          som += vom.m;\n\t          sop += vop.m;\n\t        }\n\t        if (vim && !d3_layout_treeRight(vop)) {\n\t          vop.t = vim;\n\t          vop.m += sim - sop;\n\t        }\n\t        if (vip && !d3_layout_treeLeft(vom)) {\n\t          vom.t = vip;\n\t          vom.m += sip - som;\n\t          ancestor = v;\n\t        }\n\t      }\n\t      return ancestor;\n\t    }\n\t    function sizeNode(node) {\n\t      node.x *= size[0];\n\t      node.y = node.depth * size[1];\n\t    }\n\t    tree.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return tree;\n\t    };\n\t    tree.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null ? sizeNode : null;\n\t      return tree;\n\t    };\n\t    tree.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) == null ? null : sizeNode;\n\t      return tree;\n\t    };\n\t    return d3_layout_hierarchyRebind(tree, hierarchy);\n\t  };\n\t  function d3_layout_treeSeparation(a, b) {\n\t    return a.parent == b.parent ? 1 : 2;\n\t  }\n\t  function d3_layout_treeLeft(v) {\n\t    var children = v.children;\n\t    return children.length ? children[0] : v.t;\n\t  }\n\t  function d3_layout_treeRight(v) {\n\t    var children = v.children, n;\n\t    return (n = children.length) ? children[n - 1] : v.t;\n\t  }\n\t  function d3_layout_treeMove(wm, wp, shift) {\n\t    var change = shift / (wp.i - wm.i);\n\t    wp.c -= change;\n\t    wp.s += shift;\n\t    wm.c += change;\n\t    wp.z += shift;\n\t    wp.m += shift;\n\t  }\n\t  function d3_layout_treeShift(v) {\n\t    var shift = 0, change = 0, children = v.children, i = children.length, w;\n\t    while (--i >= 0) {\n\t      w = children[i];\n\t      w.z += shift;\n\t      w.m += shift;\n\t      shift += w.s + (change += w.c);\n\t    }\n\t  }\n\t  function d3_layout_treeAncestor(vim, v, ancestor) {\n\t    return vim.a.parent === v.parent ? vim.a : ancestor;\n\t  }\n\t  d3.layout.cluster = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n\t    function cluster(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var children = node.children;\n\t        if (children && children.length) {\n\t          node.x = d3_layout_clusterX(children);\n\t          node.y = d3_layout_clusterY(children);\n\t        } else {\n\t          node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t          node.y = 0;\n\t          previousNode = node;\n\t        }\n\t      });\n\t      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n\t      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n\t        node.x = (node.x - root.x) * size[0];\n\t        node.y = (root.y - node.y) * size[1];\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * size[0];\n\t        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n\t      });\n\t      return nodes;\n\t    }\n\t    cluster.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return cluster;\n\t    };\n\t    cluster.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null;\n\t      return cluster;\n\t    };\n\t    cluster.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) != null;\n\t      return cluster;\n\t    };\n\t    return d3_layout_hierarchyRebind(cluster, hierarchy);\n\t  };\n\t  function d3_layout_clusterY(children) {\n\t    return 1 + d3.max(children, function(child) {\n\t      return child.y;\n\t    });\n\t  }\n\t  function d3_layout_clusterX(children) {\n\t    return children.reduce(function(x, child) {\n\t      return x + child.x;\n\t    }, 0) / children.length;\n\t  }\n\t  function d3_layout_clusterLeft(node) {\n\t    var children = node.children;\n\t    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n\t  }\n\t  function d3_layout_clusterRight(node) {\n\t    var children = node.children, n;\n\t    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n\t  }\n\t  d3.layout.treemap = function() {\n\t    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n\t    function scale(children, k) {\n\t      var i = -1, n = children.length, child, area;\n\t      while (++i < n) {\n\t        area = (child = children[i]).value * (k < 0 ? 0 : k);\n\t        child.area = isNaN(area) || area <= 0 ? 0 : area;\n\t      }\n\t    }\n\t    function squarify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while ((n = remaining.length) > 0) {\n\t          row.push(child = remaining[n - 1]);\n\t          row.area += child.area;\n\t          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n\t            remaining.pop();\n\t            best = score;\n\t          } else {\n\t            row.area -= row.pop().area;\n\t            position(row, u, rect, false);\n\t            u = Math.min(rect.dx, rect.dy);\n\t            row.length = row.area = 0;\n\t            best = Infinity;\n\t          }\n\t        }\n\t        if (row.length) {\n\t          position(row, u, rect, true);\n\t          row.length = row.area = 0;\n\t        }\n\t        children.forEach(squarify);\n\t      }\n\t    }\n\t    function stickify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), remaining = children.slice(), child, row = [];\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while (child = remaining.pop()) {\n\t          row.push(child);\n\t          row.area += child.area;\n\t          if (child.z != null) {\n\t            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n\t            row.length = row.area = 0;\n\t          }\n\t        }\n\t        children.forEach(stickify);\n\t      }\n\t    }\n\t    function worst(row, u) {\n\t      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n\t      while (++i < n) {\n\t        if (!(r = row[i].area)) continue;\n\t        if (r < rmin) rmin = r;\n\t        if (r > rmax) rmax = r;\n\t      }\n\t      s *= s;\n\t      u *= u;\n\t      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n\t    }\n\t    function position(row, u, rect, flush) {\n\t      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n\t      if (u == rect.dx) {\n\t        if (flush || v > rect.dy) v = rect.dy;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dy = v;\n\t          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = true;\n\t        o.dx += rect.x + rect.dx - x;\n\t        rect.y += v;\n\t        rect.dy -= v;\n\t      } else {\n\t        if (flush || v > rect.dx) v = rect.dx;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dx = v;\n\t          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = false;\n\t        o.dy += rect.y + rect.dy - y;\n\t        rect.x += v;\n\t        rect.dx -= v;\n\t      }\n\t    }\n\t    function treemap(d) {\n\t      var nodes = stickies || hierarchy(d), root = nodes[0];\n\t      root.x = root.y = 0;\n\t      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n\t      if (stickies) hierarchy.revalue(root);\n\t      scale([ root ], root.dx * root.dy / root.value);\n\t      (stickies ? stickify : squarify)(root);\n\t      if (sticky) stickies = nodes;\n\t      return nodes;\n\t    }\n\t    treemap.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return treemap;\n\t    };\n\t    treemap.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      function padFunction(node) {\n\t        var p = x.call(treemap, node, node.depth);\n\t        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n\t      }\n\t      function padConstant(node) {\n\t        return d3_layout_treemapPad(node, x);\n\t      }\n\t      var type;\n\t      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n\t      padConstant) : padConstant;\n\t      return treemap;\n\t    };\n\t    treemap.round = function(x) {\n\t      if (!arguments.length) return round != Number;\n\t      round = x ? Math.round : Number;\n\t      return treemap;\n\t    };\n\t    treemap.sticky = function(x) {\n\t      if (!arguments.length) return sticky;\n\t      sticky = x;\n\t      stickies = null;\n\t      return treemap;\n\t    };\n\t    treemap.ratio = function(x) {\n\t      if (!arguments.length) return ratio;\n\t      ratio = x;\n\t      return treemap;\n\t    };\n\t    treemap.mode = function(x) {\n\t      if (!arguments.length) return mode;\n\t      mode = x + \"\";\n\t      return treemap;\n\t    };\n\t    return d3_layout_hierarchyRebind(treemap, hierarchy);\n\t  };\n\t  function d3_layout_treemapPadNull(node) {\n\t    return {\n\t      x: node.x,\n\t      y: node.y,\n\t      dx: node.dx,\n\t      dy: node.dy\n\t    };\n\t  }\n\t  function d3_layout_treemapPad(node, padding) {\n\t    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n\t    if (dx < 0) {\n\t      x += dx / 2;\n\t      dx = 0;\n\t    }\n\t    if (dy < 0) {\n\t      y += dy / 2;\n\t      dy = 0;\n\t    }\n\t    return {\n\t      x: x,\n\t      y: y,\n\t      dx: dx,\n\t      dy: dy\n\t    };\n\t  }\n\t  d3.random = {\n\t    normal: function(µ, σ) {\n\t      var n = arguments.length;\n\t      if (n < 2) σ = 1;\n\t      if (n < 1) µ = 0;\n\t      return function() {\n\t        var x, y, r;\n\t        do {\n\t          x = Math.random() * 2 - 1;\n\t          y = Math.random() * 2 - 1;\n\t          r = x * x + y * y;\n\t        } while (!r || r > 1);\n\t        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n\t      };\n\t    },\n\t    logNormal: function() {\n\t      var random = d3.random.normal.apply(d3, arguments);\n\t      return function() {\n\t        return Math.exp(random());\n\t      };\n\t    },\n\t    bates: function(m) {\n\t      var random = d3.random.irwinHall(m);\n\t      return function() {\n\t        return random() / m;\n\t      };\n\t    },\n\t    irwinHall: function(m) {\n\t      return function() {\n\t        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n\t        return s;\n\t      };\n\t    }\n\t  };\n\t  d3.scale = {};\n\t  function d3_scaleExtent(domain) {\n\t    var start = domain[0], stop = domain[domain.length - 1];\n\t    return start < stop ? [ start, stop ] : [ stop, start ];\n\t  }\n\t  function d3_scaleRange(scale) {\n\t    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n\t  }\n\t  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n\t    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n\t    return function(x) {\n\t      return i(u(x));\n\t    };\n\t  }\n\t  function d3_scale_nice(domain, nice) {\n\t    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n\t    if (x1 < x0) {\n\t      dx = i0, i0 = i1, i1 = dx;\n\t      dx = x0, x0 = x1, x1 = dx;\n\t    }\n\t    domain[i0] = nice.floor(x0);\n\t    domain[i1] = nice.ceil(x1);\n\t    return domain;\n\t  }\n\t  function d3_scale_niceStep(step) {\n\t    return step ? {\n\t      floor: function(x) {\n\t        return Math.floor(x / step) * step;\n\t      },\n\t      ceil: function(x) {\n\t        return Math.ceil(x / step) * step;\n\t      }\n\t    } : d3_scale_niceIdentity;\n\t  }\n\t  var d3_scale_niceIdentity = {\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n\t    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n\t    if (domain[k] < domain[0]) {\n\t      domain = domain.slice().reverse();\n\t      range = range.slice().reverse();\n\t    }\n\t    while (++j <= k) {\n\t      u.push(uninterpolate(domain[j - 1], domain[j]));\n\t      i.push(interpolate(range[j - 1], range[j]));\n\t    }\n\t    return function(x) {\n\t      var j = d3.bisect(domain, x, 1, k) - 1;\n\t      return i[j](u[j](x));\n\t    };\n\t  }\n\t  d3.scale.linear = function() {\n\t    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n\t  };\n\t  function d3_scale_linear(domain, range, interpolate, clamp) {\n\t    var output, input;\n\t    function rescale() {\n\t      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n\t      output = linear(domain, range, uninterpolate, interpolate);\n\t      input = linear(range, domain, uninterpolate, d3_interpolate);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      return output(x);\n\t    }\n\t    scale.invert = function(y) {\n\t      return input(y);\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(Number);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.rangeRound = function(x) {\n\t      return scale.range(x).interpolate(d3_interpolateRound);\n\t    };\n\t    scale.clamp = function(x) {\n\t      if (!arguments.length) return clamp;\n\t      clamp = x;\n\t      return rescale();\n\t    };\n\t    scale.interpolate = function(x) {\n\t      if (!arguments.length) return interpolate;\n\t      interpolate = x;\n\t      return rescale();\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      d3_scale_linearNice(domain, m);\n\t      return rescale();\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_linear(domain, range, interpolate, clamp);\n\t    };\n\t    return rescale();\n\t  }\n\t  function d3_scale_linearRebind(scale, linear) {\n\t    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n\t  }\n\t  function d3_scale_linearNice(domain, m) {\n\t    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t    return domain;\n\t  }\n\t  function d3_scale_linearTickRange(domain, m) {\n\t    if (m == null) m = 10;\n\t    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n\t    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n\t    extent[0] = Math.ceil(extent[0] / step) * step;\n\t    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n\t    extent[2] = step;\n\t    return extent;\n\t  }\n\t  function d3_scale_linearTicks(domain, m) {\n\t    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n\t  }\n\t  function d3_scale_linearTickFormat(domain, m, format) {\n\t    var range = d3_scale_linearTickRange(domain, m);\n\t    if (format) {\n\t      var match = d3_format_re.exec(format);\n\t      match.shift();\n\t      if (match[8] === \"s\") {\n\t        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n\t        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n\t        match[8] = \"f\";\n\t        format = d3.format(match.join(\"\"));\n\t        return function(d) {\n\t          return format(prefix.scale(d)) + prefix.symbol;\n\t        };\n\t      }\n\t      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n\t      format = match.join(\"\");\n\t    } else {\n\t      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n\t    }\n\t    return d3.format(format);\n\t  }\n\t  var d3_scale_linearFormatSignificant = {\n\t    s: 1,\n\t    g: 1,\n\t    p: 1,\n\t    r: 1,\n\t    e: 1\n\t  };\n\t  function d3_scale_linearPrecision(value) {\n\t    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n\t  }\n\t  function d3_scale_linearFormatPrecision(type, range) {\n\t    var p = d3_scale_linearPrecision(range[2]);\n\t    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n\t  }\n\t  d3.scale.log = function() {\n\t    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n\t  };\n\t  function d3_scale_log(linear, base, positive, domain) {\n\t    function log(x) {\n\t      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n\t    }\n\t    function pow(x) {\n\t      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n\t    }\n\t    function scale(x) {\n\t      return linear(log(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return pow(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      positive = x[0] >= 0;\n\t      linear.domain((domain = x.map(Number)).map(log));\n\t      return scale;\n\t    };\n\t    scale.base = function(_) {\n\t      if (!arguments.length) return base;\n\t      base = +_;\n\t      linear.domain(domain.map(log));\n\t      return scale;\n\t    };\n\t    scale.nice = function() {\n\t      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n\t      linear.domain(niced);\n\t      domain = niced.map(pow);\n\t      return scale;\n\t    };\n\t    scale.ticks = function() {\n\t      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n\t      if (isFinite(j - i)) {\n\t        if (positive) {\n\t          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n\t          ticks.push(pow(i));\n\t        } else {\n\t          ticks.push(pow(i));\n\t          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n\t        }\n\t        for (i = 0; ticks[i] < u; i++) {}\n\t        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\t        ticks = ticks.slice(i, j);\n\t      }\n\t      return ticks;\n\t    };\n\t    scale.tickFormat = function(n, format) {\n\t      if (!arguments.length) return d3_scale_logFormat;\n\t      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n\t      var k = Math.max(1, base * n / scale.ticks().length);\n\t      return function(d) {\n\t        var i = d / pow(Math.round(log(d)));\n\t        if (i * base < base - .5) i *= base;\n\t        return i <= k ? format(d) : \"\";\n\t      };\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_log(linear.copy(), base, positive, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n\t    floor: function(x) {\n\t      return -Math.ceil(-x);\n\t    },\n\t    ceil: function(x) {\n\t      return -Math.floor(-x);\n\t    }\n\t  };\n\t  d3.scale.pow = function() {\n\t    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_pow(linear, exponent, domain) {\n\t    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n\t    function scale(x) {\n\t      return linear(powp(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return powb(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      linear.domain((domain = x.map(Number)).map(powp));\n\t      return scale;\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      return scale.domain(d3_scale_linearNice(domain, m));\n\t    };\n\t    scale.exponent = function(x) {\n\t      if (!arguments.length) return exponent;\n\t      powp = d3_scale_powPow(exponent = x);\n\t      powb = d3_scale_powPow(1 / exponent);\n\t      linear.domain(domain.map(powp));\n\t      return scale;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_pow(linear.copy(), exponent, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_scale_powPow(e) {\n\t    return function(x) {\n\t      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n\t    };\n\t  }\n\t  d3.scale.sqrt = function() {\n\t    return d3.scale.pow().exponent(.5);\n\t  };\n\t  d3.scale.ordinal = function() {\n\t    return d3_scale_ordinal([], {\n\t      t: \"range\",\n\t      a: [ [] ]\n\t    });\n\t  };\n\t  function d3_scale_ordinal(domain, ranger) {\n\t    var index, range, rangeBand;\n\t    function scale(x) {\n\t      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n\t    }\n\t    function steps(start, step) {\n\t      return d3.range(domain.length).map(function(i) {\n\t        return start + step * i;\n\t      });\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = [];\n\t      index = new d3_Map();\n\t      var i = -1, n = x.length, xi;\n\t      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n\t      return scale[ranger.t].apply(scale, ranger.a);\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"range\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangePoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n\t      0) : (stop - start) / (domain.length - 1 + padding);\n\t      range = steps(start + step * padding / 2, step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangePoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundPoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n\t      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n\t      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangeRoundPoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n\t      range = steps(start + step * outerPadding, step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = step * (1 - padding);\n\t      ranger = {\n\t        t: \"rangeBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n\t      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = Math.round(step * (1 - padding));\n\t      ranger = {\n\t        t: \"rangeRoundBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBand = function() {\n\t      return rangeBand;\n\t    };\n\t    scale.rangeExtent = function() {\n\t      return d3_scaleExtent(ranger.a[0]);\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_ordinal(domain, ranger);\n\t    };\n\t    return scale.domain(domain);\n\t  }\n\t  d3.scale.category10 = function() {\n\t    return d3.scale.ordinal().range(d3_category10);\n\t  };\n\t  d3.scale.category20 = function() {\n\t    return d3.scale.ordinal().range(d3_category20);\n\t  };\n\t  d3.scale.category20b = function() {\n\t    return d3.scale.ordinal().range(d3_category20b);\n\t  };\n\t  d3.scale.category20c = function() {\n\t    return d3.scale.ordinal().range(d3_category20c);\n\t  };\n\t  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n\t  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n\t  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n\t  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n\t  d3.scale.quantile = function() {\n\t    return d3_scale_quantile([], []);\n\t  };\n\t  function d3_scale_quantile(domain, range) {\n\t    var thresholds;\n\t    function rescale() {\n\t      var k = 0, q = range.length;\n\t      thresholds = [];\n\t      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.quantiles = function() {\n\t      return thresholds;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantile(domain, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.quantize = function() {\n\t    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_quantize(x0, x1, range) {\n\t    var kx, i;\n\t    function scale(x) {\n\t      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n\t    }\n\t    function rescale() {\n\t      kx = range.length / (x1 - x0);\n\t      i = range.length - 1;\n\t      return scale;\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return [ x0, x1 ];\n\t      x0 = +x[0];\n\t      x1 = +x[x.length - 1];\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      y = y < 0 ? NaN : y / kx + x0;\n\t      return [ y, y + 1 / kx ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantize(x0, x1, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.threshold = function() {\n\t    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n\t  };\n\t  function d3_scale_threshold(domain, range) {\n\t    function scale(x) {\n\t      if (x <= x) return range[d3.bisect(domain, x)];\n\t    }\n\t    scale.domain = function(_) {\n\t      if (!arguments.length) return domain;\n\t      domain = _;\n\t      return scale;\n\t    };\n\t    scale.range = function(_) {\n\t      if (!arguments.length) return range;\n\t      range = _;\n\t      return scale;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return [ domain[y - 1], domain[y] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_threshold(domain, range);\n\t    };\n\t    return scale;\n\t  }\n\t  d3.scale.identity = function() {\n\t    return d3_scale_identity([ 0, 1 ]);\n\t  };\n\t  function d3_scale_identity(domain) {\n\t    function identity(x) {\n\t      return +x;\n\t    }\n\t    identity.invert = identity;\n\t    identity.domain = identity.range = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(identity);\n\t      return identity;\n\t    };\n\t    identity.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    identity.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    identity.copy = function() {\n\t      return d3_scale_identity(domain);\n\t    };\n\t    return identity;\n\t  }\n\t  d3.svg = {};\n\t  function d3_zero() {\n\t    return 0;\n\t  }\n\t  d3.svg.arc = function() {\n\t    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n\t    function arc() {\n\t      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n\t      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n\t      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n\t      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n\t      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n\t        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n\t        if (!cw) p1 *= -1;\n\t        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n\t        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n\t      }\n\t      if (r1) {\n\t        x0 = r1 * Math.cos(a0 + p1);\n\t        y0 = r1 * Math.sin(a0 + p1);\n\t        x1 = r1 * Math.cos(a1 - p1);\n\t        y1 = r1 * Math.sin(a1 - p1);\n\t        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n\t        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n\t          var h1 = (a0 + a1) / 2;\n\t          x0 = r1 * Math.cos(h1);\n\t          y0 = r1 * Math.sin(h1);\n\t          x1 = y1 = null;\n\t        }\n\t      } else {\n\t        x0 = y0 = 0;\n\t      }\n\t      if (r0) {\n\t        x2 = r0 * Math.cos(a1 - p0);\n\t        y2 = r0 * Math.sin(a1 - p0);\n\t        x3 = r0 * Math.cos(a0 + p0);\n\t        y3 = r0 * Math.sin(a0 + p0);\n\t        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n\t        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n\t          var h0 = (a0 + a1) / 2;\n\t          x2 = r0 * Math.cos(h0);\n\t          y2 = r0 * Math.sin(h0);\n\t          x3 = y3 = null;\n\t        }\n\t      } else {\n\t        x2 = y2 = 0;\n\t      }\n\t      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n\t        cr = r0 < r1 ^ cw ? 0 : 1;\n\t        var rc1 = rc, rc0 = rc;\n\t        if (da < π) {\n\t          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t        if (x1 != null) {\n\t          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n\t          if (rc === rc1) {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n\t          } else {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n\t          }\n\t        } else {\n\t          path.push(\"M\", x0, \",\", y0);\n\t        }\n\t        if (x3 != null) {\n\t          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n\t          if (rc === rc0) {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          } else {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          }\n\t        } else {\n\t          path.push(\"L\", x2, \",\", y2);\n\t        }\n\t      } else {\n\t        path.push(\"M\", x0, \",\", y0);\n\t        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n\t        path.push(\"L\", x2, \",\", y2);\n\t        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n\t      }\n\t      path.push(\"Z\");\n\t      return path.join(\"\");\n\t    }\n\t    function circleSegment(r1, cw) {\n\t      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n\t    }\n\t    arc.innerRadius = function(v) {\n\t      if (!arguments.length) return innerRadius;\n\t      innerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.outerRadius = function(v) {\n\t      if (!arguments.length) return outerRadius;\n\t      outerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.cornerRadius = function(v) {\n\t      if (!arguments.length) return cornerRadius;\n\t      cornerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padRadius = function(v) {\n\t      if (!arguments.length) return padRadius;\n\t      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padAngle = function(v) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.centroid = function() {\n\t      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n\t      return [ Math.cos(a) * r, Math.sin(a) * r ];\n\t    };\n\t    return arc;\n\t  };\n\t  var d3_svg_arcAuto = \"auto\";\n\t  function d3_svg_arcInnerRadius(d) {\n\t    return d.innerRadius;\n\t  }\n\t  function d3_svg_arcOuterRadius(d) {\n\t    return d.outerRadius;\n\t  }\n\t  function d3_svg_arcStartAngle(d) {\n\t    return d.startAngle;\n\t  }\n\t  function d3_svg_arcEndAngle(d) {\n\t    return d.endAngle;\n\t  }\n\t  function d3_svg_arcPadAngle(d) {\n\t    return d && d.padAngle;\n\t  }\n\t  function d3_svg_arcSweep(x0, y0, x1, y1) {\n\t    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n\t  }\n\t  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n\t    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n\t    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n\t  }\n\t  function d3_svg_line(projection) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n\t    function line(data) {\n\t      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points), tension));\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n\t        } else if (points.length) {\n\t          segment();\n\t          points = [];\n\t        }\n\t      }\n\t      if (points.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    line.x = function(_) {\n\t      if (!arguments.length) return x;\n\t      x = _;\n\t      return line;\n\t    };\n\t    line.y = function(_) {\n\t      if (!arguments.length) return y;\n\t      y = _;\n\t      return line;\n\t    };\n\t    line.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return line;\n\t    };\n\t    line.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      return line;\n\t    };\n\t    line.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return line;\n\t    };\n\t    return line;\n\t  }\n\t  d3.svg.line = function() {\n\t    return d3_svg_line(d3_identity);\n\t  };\n\t  var d3_svg_lineInterpolators = d3.map({\n\t    linear: d3_svg_lineLinear,\n\t    \"linear-closed\": d3_svg_lineLinearClosed,\n\t    step: d3_svg_lineStep,\n\t    \"step-before\": d3_svg_lineStepBefore,\n\t    \"step-after\": d3_svg_lineStepAfter,\n\t    basis: d3_svg_lineBasis,\n\t    \"basis-open\": d3_svg_lineBasisOpen,\n\t    \"basis-closed\": d3_svg_lineBasisClosed,\n\t    bundle: d3_svg_lineBundle,\n\t    cardinal: d3_svg_lineCardinal,\n\t    \"cardinal-open\": d3_svg_lineCardinalOpen,\n\t    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n\t    monotone: d3_svg_lineMonotone\n\t  });\n\t  d3_svg_lineInterpolators.forEach(function(key, value) {\n\t    value.key = key;\n\t    value.closed = /-closed$/.test(key);\n\t  });\n\t  function d3_svg_lineLinear(points) {\n\t    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n\t  }\n\t  function d3_svg_lineLinearClosed(points) {\n\t    return points.join(\"L\") + \"Z\";\n\t  }\n\t  function d3_svg_lineStep(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n\t    if (n > 1) path.push(\"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepBefore(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepAfter(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineCardinalOpen(points, tension) {\n\t    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineCardinalClosed(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n\t    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n\t  }\n\t  function d3_svg_lineCardinal(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineHermite(points, tangents) {\n\t    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n\t      return d3_svg_lineLinear(points);\n\t    }\n\t    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n\t    if (quad) {\n\t      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n\t      p0 = points[1];\n\t      pi = 2;\n\t    }\n\t    if (tangents.length > 1) {\n\t      t = tangents[1];\n\t      p = points[pi];\n\t      pi++;\n\t      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      for (var i = 2; i < tangents.length; i++, pi++) {\n\t        p = points[pi];\n\t        t = tangents[i];\n\t        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      }\n\t    }\n\t    if (quad) {\n\t      var lp = points[pi];\n\t      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n\t    }\n\t    return path;\n\t  }\n\t  function d3_svg_lineCardinalTangents(points, tension) {\n\t    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n\t    while (++i < n) {\n\t      p0 = p1;\n\t      p1 = p2;\n\t      p2 = points[i];\n\t      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineBasis(points) {\n\t    if (points.length < 3) return d3_svg_lineLinear(points);\n\t    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    points.push(points[n - 1]);\n\t    while (++i <= n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    points.pop();\n\t    path.push(\"L\", pi);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisOpen(points) {\n\t    if (points.length < 4) return d3_svg_lineLinear(points);\n\t    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n\t    while (++i < 3) {\n\t      pi = points[i];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n\t    --i;\n\t    while (++i < n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisClosed(points) {\n\t    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n\t    while (++i < 4) {\n\t      pi = points[i % n];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    --i;\n\t    while (++i < m) {\n\t      pi = points[i % n];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBundle(points, tension) {\n\t    var n = points.length - 1;\n\t    if (n) {\n\t      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n\t      while (++i <= n) {\n\t        p = points[i];\n\t        t = i / n;\n\t        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n\t        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n\t      }\n\t    }\n\t    return d3_svg_lineBasis(points);\n\t  }\n\t  function d3_svg_lineDot4(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n\t  }\n\t  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n\t  function d3_svg_lineBasisBezier(path, x, y) {\n\t    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n\t  }\n\t  function d3_svg_lineSlope(p0, p1) {\n\t    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n\t  }\n\t  function d3_svg_lineFiniteDifferences(points) {\n\t    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n\t    while (++i < j) {\n\t      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n\t    }\n\t    m[i] = d;\n\t    return m;\n\t  }\n\t  function d3_svg_lineMonotoneTangents(points) {\n\t    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n\t    while (++i < j) {\n\t      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\t      if (abs(d) < ε) {\n\t        m[i] = m[i + 1] = 0;\n\t      } else {\n\t        a = m[i] / d;\n\t        b = m[i + 1] / d;\n\t        s = a * a + b * b;\n\t        if (s > 9) {\n\t          s = d * 3 / Math.sqrt(s);\n\t          m[i] = s * a;\n\t          m[i + 1] = s * b;\n\t        }\n\t      }\n\t    }\n\t    i = -1;\n\t    while (++i <= j) {\n\t      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n\t      tangents.push([ s || 0, m[i] * s || 0 ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineMonotone(points) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n\t  }\n\t  d3.svg.line.radial = function() {\n\t    var line = d3_svg_line(d3_svg_lineRadial);\n\t    line.radius = line.x, delete line.x;\n\t    line.angle = line.y, delete line.y;\n\t    return line;\n\t  };\n\t  function d3_svg_lineRadial(points) {\n\t    var point, i = -1, n = points.length, r, a;\n\t    while (++i < n) {\n\t      point = points[i];\n\t      r = point[0];\n\t      a = point[1] - halfπ;\n\t      point[0] = r * Math.cos(a);\n\t      point[1] = r * Math.sin(a);\n\t    }\n\t    return points;\n\t  }\n\t  function d3_svg_area(projection) {\n\t    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n\t    function area(data) {\n\t      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n\t        return x;\n\t      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n\t        return y;\n\t      } : d3_functor(y1), x, y;\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n\t          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n\t        } else if (points0.length) {\n\t          segment();\n\t          points0 = [];\n\t          points1 = [];\n\t        }\n\t      }\n\t      if (points0.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    area.x = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x0 = x1 = _;\n\t      return area;\n\t    };\n\t    area.x0 = function(_) {\n\t      if (!arguments.length) return x0;\n\t      x0 = _;\n\t      return area;\n\t    };\n\t    area.x1 = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x1 = _;\n\t      return area;\n\t    };\n\t    area.y = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y0 = y1 = _;\n\t      return area;\n\t    };\n\t    area.y0 = function(_) {\n\t      if (!arguments.length) return y0;\n\t      y0 = _;\n\t      return area;\n\t    };\n\t    area.y1 = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y1 = _;\n\t      return area;\n\t    };\n\t    area.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return area;\n\t    };\n\t    area.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      interpolateReverse = interpolate.reverse || interpolate;\n\t      L = interpolate.closed ? \"M\" : \"L\";\n\t      return area;\n\t    };\n\t    area.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return area;\n\t    };\n\t    return area;\n\t  }\n\t  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n\t  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\t  d3.svg.area = function() {\n\t    return d3_svg_area(d3_identity);\n\t  };\n\t  d3.svg.area.radial = function() {\n\t    var area = d3_svg_area(d3_svg_lineRadial);\n\t    area.radius = area.x, delete area.x;\n\t    area.innerRadius = area.x0, delete area.x0;\n\t    area.outerRadius = area.x1, delete area.x1;\n\t    area.angle = area.y, delete area.y;\n\t    area.startAngle = area.y0, delete area.y0;\n\t    area.endAngle = area.y1, delete area.y1;\n\t    return area;\n\t  };\n\t  d3.svg.chord = function() {\n\t    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\t    function chord(d, i) {\n\t      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n\t      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n\t    }\n\t    function subgroup(self, f, d, i) {\n\t      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n\t      return {\n\t        r: r,\n\t        a0: a0,\n\t        a1: a1,\n\t        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n\t        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n\t      };\n\t    }\n\t    function equals(a, b) {\n\t      return a.a0 == b.a0 && a.a1 == b.a1;\n\t    }\n\t    function arc(r, p, a) {\n\t      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n\t    }\n\t    function curve(r0, p0, r1, p1) {\n\t      return \"Q 0,0 \" + p1;\n\t    }\n\t    chord.radius = function(v) {\n\t      if (!arguments.length) return radius;\n\t      radius = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.source = function(v) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.target = function(v) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    return chord;\n\t  };\n\t  function d3_svg_chordRadius(d) {\n\t    return d.radius;\n\t  }\n\t  d3.svg.diagonal = function() {\n\t    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n\t    function diagonal(d, i) {\n\t      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n\t        x: p0.x,\n\t        y: m\n\t      }, {\n\t        x: p3.x,\n\t        y: m\n\t      }, p3 ];\n\t      p = p.map(projection);\n\t      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n\t    }\n\t    diagonal.source = function(x) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.target = function(x) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.projection = function(x) {\n\t      if (!arguments.length) return projection;\n\t      projection = x;\n\t      return diagonal;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalProjection(d) {\n\t    return [ d.x, d.y ];\n\t  }\n\t  d3.svg.diagonal.radial = function() {\n\t    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n\t    diagonal.projection = function(x) {\n\t      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalRadialProjection(projection) {\n\t    return function() {\n\t      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n\t      return [ r * Math.cos(a), r * Math.sin(a) ];\n\t    };\n\t  }\n\t  d3.svg.symbol = function() {\n\t    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n\t    function symbol(d, i) {\n\t      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n\t    }\n\t    symbol.type = function(x) {\n\t      if (!arguments.length) return type;\n\t      type = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    symbol.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    return symbol;\n\t  };\n\t  function d3_svg_symbolSize() {\n\t    return 64;\n\t  }\n\t  function d3_svg_symbolType() {\n\t    return \"circle\";\n\t  }\n\t  function d3_svg_symbolCircle(size) {\n\t    var r = Math.sqrt(size / π);\n\t    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n\t  }\n\t  var d3_svg_symbols = d3.map({\n\t    circle: d3_svg_symbolCircle,\n\t    cross: function(size) {\n\t      var r = Math.sqrt(size / 5) / 2;\n\t      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n\t    },\n\t    diamond: function(size) {\n\t      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n\t    },\n\t    square: function(size) {\n\t      var r = Math.sqrt(size) / 2;\n\t      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n\t    },\n\t    \"triangle-down\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n\t    },\n\t    \"triangle-up\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n\t    }\n\t  });\n\t  d3.svg.symbolTypes = d3_svg_symbols.keys();\n\t  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\t  d3_selectionPrototype.transition = function(name) {\n\t    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n\t      time: Date.now(),\n\t      ease: d3_ease_cubicInOut,\n\t      delay: 0,\n\t      duration: 250\n\t    };\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_selectionPrototype.interrupt = function(name) {\n\t    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n\t  };\n\t  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n\t  function d3_selection_interruptNS(ns) {\n\t    return function() {\n\t      var lock, activeId, active;\n\t      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n\t        active.timer.c = null;\n\t        active.timer.t = NaN;\n\t        if (--lock.count) delete lock[activeId]; else delete this[ns];\n\t        lock.active += .5;\n\t        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n\t      }\n\t    };\n\t  }\n\t  function d3_transition(groups, ns, id) {\n\t    d3_subclass(groups, d3_transitionPrototype);\n\t    groups.namespace = ns;\n\t    groups.id = id;\n\t    return groups;\n\t  }\n\t  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n\t  d3_transitionPrototype.call = d3_selectionPrototype.call;\n\t  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_transitionPrototype.node = d3_selectionPrototype.node;\n\t  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\t  d3.transition = function(selection, name) {\n\t    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n\t  };\n\t  d3.transition.prototype = d3_transitionPrototype;\n\t  d3_transitionPrototype.select = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n\t          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n\t          subgroup.push(subnode);\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.selectAll = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id];\n\t          subnodes = selector.call(node, node.__data__, i, j);\n\t          subgroups.push(subgroup = []);\n\t          for (var k = -1, o = subnodes.length; ++k < o; ) {\n\t            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n\t            subgroup.push(subnode);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, this.namespace, this.id);\n\t  };\n\t  d3_transitionPrototype.tween = function(name, tween) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n\t    return d3_selection_each(this, tween == null ? function(node) {\n\t      node[ns][id].tween.remove(name);\n\t    } : function(node) {\n\t      node[ns][id].tween.set(name, tween);\n\t    });\n\t  };\n\t  function d3_transition_tween(groups, name, value, tween) {\n\t    var id = groups.id, ns = groups.namespace;\n\t    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n\t    } : (value = tween(value), function(node) {\n\t      node[ns][id].tween.set(name, value);\n\t    }));\n\t  }\n\t  d3_transitionPrototype.attr = function(nameNS, value) {\n\t    if (arguments.length < 2) {\n\t      for (value in nameNS) this.attr(value, nameNS[value]);\n\t      return this;\n\t    }\n\t    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrTween(b) {\n\t      return b == null ? attrNull : (b += \"\", function() {\n\t        var a = this.getAttribute(name), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttribute(name, i(t));\n\t        });\n\t      });\n\t    }\n\t    function attrTweenNS(b) {\n\t      return b == null ? attrNullNS : (b += \"\", function() {\n\t        var a = this.getAttributeNS(name.space, name.local), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttributeNS(name.space, name.local, i(t));\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n\t    var name = d3.ns.qualify(nameNS);\n\t    function attrTween(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttribute(name));\n\t      return f && function(t) {\n\t        this.setAttribute(name, f(t));\n\t      };\n\t    }\n\t    function attrTweenNS(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n\t      return f && function(t) {\n\t        this.setAttributeNS(name.space, name.local, f(t));\n\t      };\n\t    }\n\t    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.style(priority, name[priority], value);\n\t        return this;\n\t      }\n\t      priority = \"\";\n\t    }\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleString(b) {\n\t      return b == null ? styleNull : (b += \"\", function() {\n\t        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n\t        return a !== b && (i = d3_interpolate(a, b), function(t) {\n\t          this.style.setProperty(name, i(t), priority);\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n\t  };\n\t  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n\t    if (arguments.length < 3) priority = \"\";\n\t    function styleTween(d, i) {\n\t      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n\t      return f && function(t) {\n\t        this.style.setProperty(name, f(t), priority);\n\t      };\n\t    }\n\t    return this.tween(\"style.\" + name, styleTween);\n\t  };\n\t  d3_transitionPrototype.text = function(value) {\n\t    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n\t  };\n\t  function d3_transition_text(b) {\n\t    if (b == null) b = \"\";\n\t    return function() {\n\t      this.textContent = b;\n\t    };\n\t  }\n\t  d3_transitionPrototype.remove = function() {\n\t    var ns = this.namespace;\n\t    return this.each(\"end.transition\", function() {\n\t      var p;\n\t      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n\t    });\n\t  };\n\t  d3_transitionPrototype.ease = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].ease;\n\t    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n\t    return d3_selection_each(this, function(node) {\n\t      node[ns][id].ease = value;\n\t    });\n\t  };\n\t  d3_transitionPrototype.delay = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].delay;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n\t    } : (value = +value, function(node) {\n\t      node[ns][id].delay = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.duration = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].duration;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n\t    } : (value = Math.max(1, value), function(node) {\n\t      node[ns][id].duration = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.each = function(type, listener) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) {\n\t      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n\t      try {\n\t        d3_transitionInheritId = id;\n\t        d3_selection_each(this, function(node, i, j) {\n\t          d3_transitionInherit = node[ns][id];\n\t          type.call(node, node.__data__, i, j);\n\t        });\n\t      } finally {\n\t        d3_transitionInherit = inherit;\n\t        d3_transitionInheritId = inheritId;\n\t      }\n\t    } else {\n\t      d3_selection_each(this, function(node) {\n\t        var transition = node[ns][id];\n\t        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n\t      });\n\t    }\n\t    return this;\n\t  };\n\t  d3_transitionPrototype.transition = function() {\n\t    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id0];\n\t          d3_transitionNode(node, i, ns, id1, {\n\t            time: transition.time,\n\t            ease: transition.ease,\n\t            delay: transition.delay + transition.duration,\n\t            duration: transition.duration\n\t          });\n\t        }\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id1);\n\t  };\n\t  function d3_transitionNamespace(name) {\n\t    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n\t  }\n\t  function d3_transitionNode(node, i, ns, id, inherit) {\n\t    var lock = node[ns] || (node[ns] = {\n\t      active: 0,\n\t      count: 0\n\t    }), transition = lock[id], time, timer, duration, ease, tweens;\n\t    function schedule(elapsed) {\n\t      var delay = transition.delay;\n\t      timer.t = delay + time;\n\t      if (delay <= elapsed) return start(elapsed - delay);\n\t      timer.c = start;\n\t    }\n\t    function start(elapsed) {\n\t      var activeId = lock.active, active = lock[activeId];\n\t      if (active) {\n\t        active.timer.c = null;\n\t        active.timer.t = NaN;\n\t        --lock.count;\n\t        delete lock[activeId];\n\t        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n\t      }\n\t      for (var cancelId in lock) {\n\t        if (+cancelId < id) {\n\t          var cancel = lock[cancelId];\n\t          cancel.timer.c = null;\n\t          cancel.timer.t = NaN;\n\t          --lock.count;\n\t          delete lock[cancelId];\n\t        }\n\t      }\n\t      timer.c = tick;\n\t      d3_timer(function() {\n\t        if (timer.c && tick(elapsed || 1)) {\n\t          timer.c = null;\n\t          timer.t = NaN;\n\t        }\n\t        return 1;\n\t      }, 0, time);\n\t      lock.active = id;\n\t      transition.event && transition.event.start.call(node, node.__data__, i);\n\t      tweens = [];\n\t      transition.tween.forEach(function(key, value) {\n\t        if (value = value.call(node, node.__data__, i)) {\n\t          tweens.push(value);\n\t        }\n\t      });\n\t      ease = transition.ease;\n\t      duration = transition.duration;\n\t    }\n\t    function tick(elapsed) {\n\t      var t = elapsed / duration, e = ease(t), n = tweens.length;\n\t      while (n > 0) {\n\t        tweens[--n].call(node, e);\n\t      }\n\t      if (t >= 1) {\n\t        transition.event && transition.event.end.call(node, node.__data__, i);\n\t        if (--lock.count) delete lock[id]; else delete node[ns];\n\t        return 1;\n\t      }\n\t    }\n\t    if (!transition) {\n\t      time = inherit.time;\n\t      timer = d3_timer(schedule, 0, time);\n\t      transition = lock[id] = {\n\t        tween: new d3_Map(),\n\t        time: time,\n\t        timer: timer,\n\t        delay: inherit.delay,\n\t        duration: inherit.duration,\n\t        ease: inherit.ease,\n\t        index: i\n\t      };\n\t      inherit = null;\n\t      ++lock.count;\n\t    }\n\t  }\n\t  d3.svg.axis = function() {\n\t    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n\t    function axis(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this);\n\t        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n\t        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n\t        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n\t        d3.transition(path));\n\t        tickEnter.append(\"line\");\n\t        tickEnter.append(\"text\");\n\t        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n\t        if (orient === \"bottom\" || orient === \"top\") {\n\t          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n\t          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n\t          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n\t        } else {\n\t          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n\t          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n\t          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n\t        }\n\t        lineEnter.attr(y2, sign * innerTickSize);\n\t        textEnter.attr(y1, sign * tickSpacing);\n\t        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n\t        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n\t        if (scale1.rangeBand) {\n\t          var x = scale1, dx = x.rangeBand() / 2;\n\t          scale0 = scale1 = function(d) {\n\t            return x(d) + dx;\n\t          };\n\t        } else if (scale0.rangeBand) {\n\t          scale0 = scale1;\n\t        } else {\n\t          tickExit.call(tickTransform, scale1, scale0);\n\t        }\n\t        tickEnter.call(tickTransform, scale0, scale1);\n\t        tickUpdate.call(tickTransform, scale1, scale1);\n\t      });\n\t    }\n\t    axis.scale = function(x) {\n\t      if (!arguments.length) return scale;\n\t      scale = x;\n\t      return axis;\n\t    };\n\t    axis.orient = function(x) {\n\t      if (!arguments.length) return orient;\n\t      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n\t      return axis;\n\t    };\n\t    axis.ticks = function() {\n\t      if (!arguments.length) return tickArguments_;\n\t      tickArguments_ = d3_array(arguments);\n\t      return axis;\n\t    };\n\t    axis.tickValues = function(x) {\n\t      if (!arguments.length) return tickValues;\n\t      tickValues = x;\n\t      return axis;\n\t    };\n\t    axis.tickFormat = function(x) {\n\t      if (!arguments.length) return tickFormat_;\n\t      tickFormat_ = x;\n\t      return axis;\n\t    };\n\t    axis.tickSize = function(x) {\n\t      var n = arguments.length;\n\t      if (!n) return innerTickSize;\n\t      innerTickSize = +x;\n\t      outerTickSize = +arguments[n - 1];\n\t      return axis;\n\t    };\n\t    axis.innerTickSize = function(x) {\n\t      if (!arguments.length) return innerTickSize;\n\t      innerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.outerTickSize = function(x) {\n\t      if (!arguments.length) return outerTickSize;\n\t      outerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.tickPadding = function(x) {\n\t      if (!arguments.length) return tickPadding;\n\t      tickPadding = +x;\n\t      return axis;\n\t    };\n\t    axis.tickSubdivide = function() {\n\t      return arguments.length && axis;\n\t    };\n\t    return axis;\n\t  };\n\t  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n\t    top: 1,\n\t    right: 1,\n\t    bottom: 1,\n\t    left: 1\n\t  };\n\t  function d3_svg_axisX(selection, x0, x1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = x0(d);\n\t      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n\t    });\n\t  }\n\t  function d3_svg_axisY(selection, y0, y1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = y0(d);\n\t      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n\t    });\n\t  }\n\t  d3.svg.brush = function() {\n\t    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n\t    function brush(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n\t        var background = g.selectAll(\".background\").data([ 0 ]);\n\t        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n\t        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n\t        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n\t        resize.exit().remove();\n\t        resize.enter().append(\"g\").attr(\"class\", function(d) {\n\t          return \"resize \" + d;\n\t        }).style(\"cursor\", function(d) {\n\t          return d3_svg_brushCursor[d];\n\t        }).append(\"rect\").attr(\"x\", function(d) {\n\t          return /[ew]$/.test(d) ? -3 : null;\n\t        }).attr(\"y\", function(d) {\n\t          return /^[ns]/.test(d) ? -3 : null;\n\t        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n\t        resize.style(\"display\", brush.empty() ? \"none\" : null);\n\t        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n\t        if (x) {\n\t          range = d3_scaleRange(x);\n\t          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n\t          redrawX(gUpdate);\n\t        }\n\t        if (y) {\n\t          range = d3_scaleRange(y);\n\t          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n\t          redrawY(gUpdate);\n\t        }\n\t        redraw(gUpdate);\n\t      });\n\t    }\n\t    brush.event = function(g) {\n\t      g.each(function() {\n\t        var event_ = event.of(this, arguments), extent1 = {\n\t          x: xExtent,\n\t          y: yExtent,\n\t          i: xExtentDomain,\n\t          j: yExtentDomain\n\t        }, extent0 = this.__chart__ || extent1;\n\t        this.__chart__ = extent1;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.brush\", function() {\n\t            xExtentDomain = extent0.i;\n\t            yExtentDomain = extent0.j;\n\t            xExtent = extent0.x;\n\t            yExtent = extent0.y;\n\t            event_({\n\t              type: \"brushstart\"\n\t            });\n\t          }).tween(\"brush:brush\", function() {\n\t            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n\t            xExtentDomain = yExtentDomain = null;\n\t            return function(t) {\n\t              xExtent = extent1.x = xi(t);\n\t              yExtent = extent1.y = yi(t);\n\t              event_({\n\t                type: \"brush\",\n\t                mode: \"resize\"\n\t              });\n\t            };\n\t          }).each(\"end.brush\", function() {\n\t            xExtentDomain = extent1.i;\n\t            yExtentDomain = extent1.j;\n\t            event_({\n\t              type: \"brush\",\n\t              mode: \"resize\"\n\t            });\n\t            event_({\n\t              type: \"brushend\"\n\t            });\n\t          });\n\t        } else {\n\t          event_({\n\t            type: \"brushstart\"\n\t          });\n\t          event_({\n\t            type: \"brush\",\n\t            mode: \"resize\"\n\t          });\n\t          event_({\n\t            type: \"brushend\"\n\t          });\n\t        }\n\t      });\n\t    };\n\t    function redraw(g) {\n\t      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n\t        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n\t      });\n\t    }\n\t    function redrawX(g) {\n\t      g.select(\".extent\").attr(\"x\", xExtent[0]);\n\t      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n\t    }\n\t    function redrawY(g) {\n\t      g.select(\".extent\").attr(\"y\", yExtent[0]);\n\t      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n\t    }\n\t    function brushstart() {\n\t      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n\t      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\t      if (d3.event.changedTouches) {\n\t        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n\t      } else {\n\t        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n\t      }\n\t      g.interrupt().selectAll(\"*\").interrupt();\n\t      if (dragging) {\n\t        origin[0] = xExtent[0] - origin[0];\n\t        origin[1] = yExtent[0] - origin[1];\n\t      } else if (resizing) {\n\t        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n\t        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n\t        origin[0] = xExtent[ex];\n\t        origin[1] = yExtent[ey];\n\t      } else if (d3.event.altKey) center = origin.slice();\n\t      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n\t      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n\t      event_({\n\t        type: \"brushstart\"\n\t      });\n\t      brushmove();\n\t      function keydown() {\n\t        if (d3.event.keyCode == 32) {\n\t          if (!dragging) {\n\t            center = null;\n\t            origin[0] -= xExtent[1];\n\t            origin[1] -= yExtent[1];\n\t            dragging = 2;\n\t          }\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function keyup() {\n\t        if (d3.event.keyCode == 32 && dragging == 2) {\n\t          origin[0] += xExtent[1];\n\t          origin[1] += yExtent[1];\n\t          dragging = 0;\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function brushmove() {\n\t        var point = d3.mouse(target), moved = false;\n\t        if (offset) {\n\t          point[0] += offset[0];\n\t          point[1] += offset[1];\n\t        }\n\t        if (!dragging) {\n\t          if (d3.event.altKey) {\n\t            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n\t            origin[0] = xExtent[+(point[0] < center[0])];\n\t            origin[1] = yExtent[+(point[1] < center[1])];\n\t          } else center = null;\n\t        }\n\t        if (resizingX && move1(point, x, 0)) {\n\t          redrawX(g);\n\t          moved = true;\n\t        }\n\t        if (resizingY && move1(point, y, 1)) {\n\t          redrawY(g);\n\t          moved = true;\n\t        }\n\t        if (moved) {\n\t          redraw(g);\n\t          event_({\n\t            type: \"brush\",\n\t            mode: dragging ? \"move\" : \"resize\"\n\t          });\n\t        }\n\t      }\n\t      function move1(point, scale, i) {\n\t        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n\t        if (dragging) {\n\t          r0 -= position;\n\t          r1 -= size + position;\n\t        }\n\t        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\t        if (dragging) {\n\t          max = (min += position) + size;\n\t        } else {\n\t          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\t          if (position < min) {\n\t            max = min;\n\t            min = position;\n\t          } else {\n\t            max = position;\n\t          }\n\t        }\n\t        if (extent[0] != min || extent[1] != max) {\n\t          if (i) yExtentDomain = null; else xExtentDomain = null;\n\t          extent[0] = min;\n\t          extent[1] = max;\n\t          return true;\n\t        }\n\t      }\n\t      function brushend() {\n\t        brushmove();\n\t        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n\t        d3.select(\"body\").style(\"cursor\", null);\n\t        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n\t        dragRestore();\n\t        event_({\n\t          type: \"brushend\"\n\t        });\n\t      }\n\t    }\n\t    brush.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.clamp = function(z) {\n\t      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n\t      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n\t      return brush;\n\t    };\n\t    brush.extent = function(z) {\n\t      var x0, x1, y0, y1, t;\n\t      if (!arguments.length) {\n\t        if (x) {\n\t          if (xExtentDomain) {\n\t            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n\t          } else {\n\t            x0 = xExtent[0], x1 = xExtent[1];\n\t            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n\t            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t          }\n\t        }\n\t        if (y) {\n\t          if (yExtentDomain) {\n\t            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n\t          } else {\n\t            y0 = yExtent[0], y1 = yExtent[1];\n\t            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n\t            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t          }\n\t        }\n\t        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n\t      }\n\t      if (x) {\n\t        x0 = z[0], x1 = z[1];\n\t        if (y) x0 = x0[0], x1 = x1[0];\n\t        xExtentDomain = [ x0, x1 ];\n\t        if (x.invert) x0 = x(x0), x1 = x(x1);\n\t        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n\t      }\n\t      if (y) {\n\t        y0 = z[0], y1 = z[1];\n\t        if (x) y0 = y0[1], y1 = y1[1];\n\t        yExtentDomain = [ y0, y1 ];\n\t        if (y.invert) y0 = y(y0), y1 = y(y1);\n\t        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n\t      }\n\t      return brush;\n\t    };\n\t    brush.clear = function() {\n\t      if (!brush.empty()) {\n\t        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n\t        xExtentDomain = yExtentDomain = null;\n\t      }\n\t      return brush;\n\t    };\n\t    brush.empty = function() {\n\t      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n\t    };\n\t    return d3.rebind(brush, event, \"on\");\n\t  };\n\t  var d3_svg_brushCursor = {\n\t    n: \"ns-resize\",\n\t    e: \"ew-resize\",\n\t    s: \"ns-resize\",\n\t    w: \"ew-resize\",\n\t    nw: \"nwse-resize\",\n\t    ne: \"nesw-resize\",\n\t    se: \"nwse-resize\",\n\t    sw: \"nesw-resize\"\n\t  };\n\t  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n\t  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n\t  var d3_time_formatUtc = d3_time_format.utc;\n\t  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n\t  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\t  function d3_time_formatIsoNative(date) {\n\t    return date.toISOString();\n\t  }\n\t  d3_time_formatIsoNative.parse = function(string) {\n\t    var date = new Date(string);\n\t    return isNaN(date) ? null : date;\n\t  };\n\t  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n\t  d3_time.second = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 1e3) * 1e3);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n\t  }, function(date) {\n\t    return date.getSeconds();\n\t  });\n\t  d3_time.seconds = d3_time.second.range;\n\t  d3_time.seconds.utc = d3_time.second.utc.range;\n\t  d3_time.minute = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 6e4) * 6e4);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n\t  }, function(date) {\n\t    return date.getMinutes();\n\t  });\n\t  d3_time.minutes = d3_time.minute.range;\n\t  d3_time.minutes.utc = d3_time.minute.utc.range;\n\t  d3_time.hour = d3_time_interval(function(date) {\n\t    var timezone = date.getTimezoneOffset() / 60;\n\t    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n\t  }, function(date) {\n\t    return date.getHours();\n\t  });\n\t  d3_time.hours = d3_time.hour.range;\n\t  d3_time.hours.utc = d3_time.hour.utc.range;\n\t  d3_time.month = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setDate(1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setMonth(date.getMonth() + offset);\n\t  }, function(date) {\n\t    return date.getMonth();\n\t  });\n\t  d3_time.months = d3_time.month.range;\n\t  d3_time.months.utc = d3_time.month.utc.range;\n\t  function d3_time_scale(linear, methods, format) {\n\t    function scale(x) {\n\t      return linear(x);\n\t    }\n\t    scale.invert = function(x) {\n\t      return d3_time_scaleDate(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n\t      linear.domain(x);\n\t      return scale;\n\t    };\n\t    function tickMethod(extent, count) {\n\t      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n\t      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n\t        return d / 31536e6;\n\t      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n\t    }\n\t    scale.nice = function(interval, skip) {\n\t      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n\t      if (method) interval = method[0], skip = method[1];\n\t      function skipped(date) {\n\t        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n\t      }\n\t      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n\t        floor: function(date) {\n\t          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n\t          return date;\n\t        },\n\t        ceil: function(date) {\n\t          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n\t          return date;\n\t        }\n\t      } : interval));\n\t    };\n\t    scale.ticks = function(interval, skip) {\n\t      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n\t        range: interval\n\t      }, skip ];\n\t      if (method) interval = method[0], skip = method[1];\n\t      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n\t    };\n\t    scale.tickFormat = function() {\n\t      return format;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_time_scale(linear.copy(), methods, format);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_time_scaleDate(t) {\n\t    return new Date(t);\n\t  }\n\t  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n\t  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n\t  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n\t    return d.getMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getDay() && d.getDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  var d3_time_scaleMilliseconds = {\n\t    range: function(start, stop, step) {\n\t      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n\t    },\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  d3_time_scaleLocalMethods.year = d3_time.year;\n\t  d3_time.scale = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n\t  };\n\t  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n\t    return [ m[0].utc, m[1] ];\n\t  });\n\t  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n\t    return d.getUTCMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getUTCSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getUTCMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getUTCHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getUTCDay() && d.getUTCDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getUTCDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getUTCMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\t  d3_time.scale.utc = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n\t  };\n\t  d3.text = d3_xhrType(function(request) {\n\t    return request.responseText;\n\t  });\n\t  d3.json = function(url, callback) {\n\t    return d3_xhr(url, \"application/json\", d3_json, callback);\n\t  };\n\t  function d3_json(request) {\n\t    return JSON.parse(request.responseText);\n\t  }\n\t  d3.html = function(url, callback) {\n\t    return d3_xhr(url, \"text/html\", d3_html, callback);\n\t  };\n\t  function d3_html(request) {\n\t    var range = d3_document.createRange();\n\t    range.selectNode(d3_document.body);\n\t    return range.createContextualFragment(request.responseText);\n\t  }\n\t  d3.xml = d3_xhrType(function(request) {\n\t    return request.responseXML;\n\t  });\n\t  if (true) this.d3 = d3, !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n\t}();\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function (global, factory) {\n\t   true ? factory(exports) :\n\t  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t  (factory((global.topojson = {})));\n\t}(this, function (exports) { 'use strict';\n\t\n\t  function noop() {}\n\t\n\t  function absolute(transform) {\n\t    if (!transform) return noop;\n\t    var x0,\n\t        y0,\n\t        kx = transform.scale[0],\n\t        ky = transform.scale[1],\n\t        dx = transform.translate[0],\n\t        dy = transform.translate[1];\n\t    return function(point, i) {\n\t      if (!i) x0 = y0 = 0;\n\t      point[0] = (x0 += point[0]) * kx + dx;\n\t      point[1] = (y0 += point[1]) * ky + dy;\n\t    };\n\t  }\n\t\n\t  function relative(transform) {\n\t    if (!transform) return noop;\n\t    var x0,\n\t        y0,\n\t        kx = transform.scale[0],\n\t        ky = transform.scale[1],\n\t        dx = transform.translate[0],\n\t        dy = transform.translate[1];\n\t    return function(point, i) {\n\t      if (!i) x0 = y0 = 0;\n\t      var x1 = (point[0] - dx) / kx | 0,\n\t          y1 = (point[1] - dy) / ky | 0;\n\t      point[0] = x1 - x0;\n\t      point[1] = y1 - y0;\n\t      x0 = x1;\n\t      y0 = y1;\n\t    };\n\t  }\n\t\n\t  function reverse(array, n) {\n\t    var t, j = array.length, i = j - n;\n\t    while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n\t  }\n\t\n\t  function bisect(a, x) {\n\t    var lo = 0, hi = a.length;\n\t    while (lo < hi) {\n\t      var mid = lo + hi >>> 1;\n\t      if (a[mid] < x) lo = mid + 1;\n\t      else hi = mid;\n\t    }\n\t    return lo;\n\t  }\n\t\n\t  function feature(topology, o) {\n\t    return o.type === \"GeometryCollection\" ? {\n\t      type: \"FeatureCollection\",\n\t      features: o.geometries.map(function(o) { return feature$1(topology, o); })\n\t    } : feature$1(topology, o);\n\t  }\n\t\n\t  function feature$1(topology, o) {\n\t    var f = {\n\t      type: \"Feature\",\n\t      id: o.id,\n\t      properties: o.properties || {},\n\t      geometry: object(topology, o)\n\t    };\n\t    if (o.id == null) delete f.id;\n\t    return f;\n\t  }\n\t\n\t  function object(topology, o) {\n\t    var absolute$$ = absolute(topology.transform),\n\t        arcs = topology.arcs;\n\t\n\t    function arc(i, points) {\n\t      if (points.length) points.pop();\n\t      for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length, p; k < n; ++k) {\n\t        points.push(p = a[k].slice());\n\t        absolute$$(p, k);\n\t      }\n\t      if (i < 0) reverse(points, n);\n\t    }\n\t\n\t    function point(p) {\n\t      p = p.slice();\n\t      absolute$$(p, 0);\n\t      return p;\n\t    }\n\t\n\t    function line(arcs) {\n\t      var points = [];\n\t      for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n\t      if (points.length < 2) points.push(points[0].slice());\n\t      return points;\n\t    }\n\t\n\t    function ring(arcs) {\n\t      var points = line(arcs);\n\t      while (points.length < 4) points.push(points[0].slice());\n\t      return points;\n\t    }\n\t\n\t    function polygon(arcs) {\n\t      return arcs.map(ring);\n\t    }\n\t\n\t    function geometry(o) {\n\t      var t = o.type;\n\t      return t === \"GeometryCollection\" ? {type: t, geometries: o.geometries.map(geometry)}\n\t          : t in geometryType ? {type: t, coordinates: geometryType[t](o)}\n\t          : null;\n\t    }\n\t\n\t    var geometryType = {\n\t      Point: function(o) { return point(o.coordinates); },\n\t      MultiPoint: function(o) { return o.coordinates.map(point); },\n\t      LineString: function(o) { return line(o.arcs); },\n\t      MultiLineString: function(o) { return o.arcs.map(line); },\n\t      Polygon: function(o) { return polygon(o.arcs); },\n\t      MultiPolygon: function(o) { return o.arcs.map(polygon); }\n\t    };\n\t\n\t    return geometry(o);\n\t  }\n\t\n\t  function stitchArcs(topology, arcs) {\n\t    var stitchedArcs = {},\n\t        fragmentByStart = {},\n\t        fragmentByEnd = {},\n\t        fragments = [],\n\t        emptyIndex = -1;\n\t\n\t    // Stitch empty arcs first, since they may be subsumed by other arcs.\n\t    arcs.forEach(function(i, j) {\n\t      var arc = topology.arcs[i < 0 ? ~i : i], t;\n\t      if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n\t        t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n\t      }\n\t    });\n\t\n\t    arcs.forEach(function(i) {\n\t      var e = ends(i),\n\t          start = e[0],\n\t          end = e[1],\n\t          f, g;\n\t\n\t      if (f = fragmentByEnd[start]) {\n\t        delete fragmentByEnd[f.end];\n\t        f.push(i);\n\t        f.end = end;\n\t        if (g = fragmentByStart[end]) {\n\t          delete fragmentByStart[g.start];\n\t          var fg = g === f ? f : f.concat(g);\n\t          fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n\t        } else {\n\t          fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n\t        }\n\t      } else if (f = fragmentByStart[end]) {\n\t        delete fragmentByStart[f.start];\n\t        f.unshift(i);\n\t        f.start = start;\n\t        if (g = fragmentByEnd[start]) {\n\t          delete fragmentByEnd[g.end];\n\t          var gf = g === f ? f : g.concat(f);\n\t          fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n\t        } else {\n\t          fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n\t        }\n\t      } else {\n\t        f = [i];\n\t        fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n\t      }\n\t    });\n\t\n\t    function ends(i) {\n\t      var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n\t      if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n\t      else p1 = arc[arc.length - 1];\n\t      return i < 0 ? [p1, p0] : [p0, p1];\n\t    }\n\t\n\t    function flush(fragmentByEnd, fragmentByStart) {\n\t      for (var k in fragmentByEnd) {\n\t        var f = fragmentByEnd[k];\n\t        delete fragmentByStart[f.start];\n\t        delete f.start;\n\t        delete f.end;\n\t        f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n\t        fragments.push(f);\n\t      }\n\t    }\n\t\n\t    flush(fragmentByEnd, fragmentByStart);\n\t    flush(fragmentByStart, fragmentByEnd);\n\t    arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\t\n\t    return fragments;\n\t  }\n\t\n\t  function mesh(topology) {\n\t    return object(topology, meshArcs.apply(this, arguments));\n\t  }\n\t\n\t  function meshArcs(topology, o, filter) {\n\t    var arcs = [];\n\t\n\t    function arc(i) {\n\t      var j = i < 0 ? ~i : i;\n\t      (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n\t    }\n\t\n\t    function line(arcs) {\n\t      arcs.forEach(arc);\n\t    }\n\t\n\t    function polygon(arcs) {\n\t      arcs.forEach(line);\n\t    }\n\t\n\t    function geometry(o) {\n\t      if (o.type === \"GeometryCollection\") o.geometries.forEach(geometry);\n\t      else if (o.type in geometryType) geom = o, geometryType[o.type](o.arcs);\n\t    }\n\t\n\t    if (arguments.length > 1) {\n\t      var geomsByArc = [],\n\t          geom;\n\t\n\t      var geometryType = {\n\t        LineString: line,\n\t        MultiLineString: polygon,\n\t        Polygon: polygon,\n\t        MultiPolygon: function(arcs) { arcs.forEach(polygon); }\n\t      };\n\t\n\t      geometry(o);\n\t\n\t      geomsByArc.forEach(arguments.length < 3\n\t          ? function(geoms) { arcs.push(geoms[0].i); }\n\t          : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n\t    } else {\n\t      for (var i = 0, n = topology.arcs.length; i < n; ++i) arcs.push(i);\n\t    }\n\t\n\t    return {type: \"MultiLineString\", arcs: stitchArcs(topology, arcs)};\n\t  }\n\t\n\t  function triangle(triangle) {\n\t    var a = triangle[0], b = triangle[1], c = triangle[2];\n\t    return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]));\n\t  }\n\t\n\t  function ring(ring) {\n\t    var i = -1,\n\t        n = ring.length,\n\t        a,\n\t        b = ring[n - 1],\n\t        area = 0;\n\t\n\t    while (++i < n) {\n\t      a = b;\n\t      b = ring[i];\n\t      area += a[0] * b[1] - a[1] * b[0];\n\t    }\n\t\n\t    return area / 2;\n\t  }\n\t\n\t  function merge(topology) {\n\t    return object(topology, mergeArcs.apply(this, arguments));\n\t  }\n\t\n\t  function mergeArcs(topology, objects) {\n\t    var polygonsByArc = {},\n\t        polygons = [],\n\t        components = [];\n\t\n\t    objects.forEach(function(o) {\n\t      if (o.type === \"Polygon\") register(o.arcs);\n\t      else if (o.type === \"MultiPolygon\") o.arcs.forEach(register);\n\t    });\n\t\n\t    function register(polygon) {\n\t      polygon.forEach(function(ring$$) {\n\t        ring$$.forEach(function(arc) {\n\t          (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n\t        });\n\t      });\n\t      polygons.push(polygon);\n\t    }\n\t\n\t    function exterior(ring$$) {\n\t      return ring(object(topology, {type: \"Polygon\", arcs: [ring$$]}).coordinates[0]) > 0; // TODO allow spherical?\n\t    }\n\t\n\t    polygons.forEach(function(polygon) {\n\t      if (!polygon._) {\n\t        var component = [],\n\t            neighbors = [polygon];\n\t        polygon._ = 1;\n\t        components.push(component);\n\t        while (polygon = neighbors.pop()) {\n\t          component.push(polygon);\n\t          polygon.forEach(function(ring$$) {\n\t            ring$$.forEach(function(arc) {\n\t              polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n\t                if (!polygon._) {\n\t                  polygon._ = 1;\n\t                  neighbors.push(polygon);\n\t                }\n\t              });\n\t            });\n\t          });\n\t        }\n\t      }\n\t    });\n\t\n\t    polygons.forEach(function(polygon) {\n\t      delete polygon._;\n\t    });\n\t\n\t    return {\n\t      type: \"MultiPolygon\",\n\t      arcs: components.map(function(polygons) {\n\t        var arcs = [], n;\n\t\n\t        // Extract the exterior (unique) arcs.\n\t        polygons.forEach(function(polygon) {\n\t          polygon.forEach(function(ring$$) {\n\t            ring$$.forEach(function(arc) {\n\t              if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n\t                arcs.push(arc);\n\t              }\n\t            });\n\t          });\n\t        });\n\t\n\t        // Stitch the arcs into one or more rings.\n\t        arcs = stitchArcs(topology, arcs);\n\t\n\t        // If more than one ring is returned,\n\t        // at most one of these rings can be the exterior;\n\t        // this exterior ring has the same winding order\n\t        // as any exterior ring in the original polygons.\n\t        if ((n = arcs.length) > 1) {\n\t          var sgn = exterior(polygons[0][0]);\n\t          for (var i = 0, t; i < n; ++i) {\n\t            if (sgn === exterior(arcs[i])) {\n\t              t = arcs[0], arcs[0] = arcs[i], arcs[i] = t;\n\t              break;\n\t            }\n\t          }\n\t        }\n\t\n\t        return arcs;\n\t      })\n\t    };\n\t  }\n\t\n\t  function neighbors(objects) {\n\t    var indexesByArc = {}, // arc index -> array of object indexes\n\t        neighbors = objects.map(function() { return []; });\n\t\n\t    function line(arcs, i) {\n\t      arcs.forEach(function(a) {\n\t        if (a < 0) a = ~a;\n\t        var o = indexesByArc[a];\n\t        if (o) o.push(i);\n\t        else indexesByArc[a] = [i];\n\t      });\n\t    }\n\t\n\t    function polygon(arcs, i) {\n\t      arcs.forEach(function(arc) { line(arc, i); });\n\t    }\n\t\n\t    function geometry(o, i) {\n\t      if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n\t      else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n\t    }\n\t\n\t    var geometryType = {\n\t      LineString: line,\n\t      MultiLineString: polygon,\n\t      Polygon: polygon,\n\t      MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n\t    };\n\t\n\t    objects.forEach(geometry);\n\t\n\t    for (var i in indexesByArc) {\n\t      for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n\t        for (var k = j + 1; k < m; ++k) {\n\t          var ij = indexes[j], ik = indexes[k], n;\n\t          if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n\t          if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n\t        }\n\t      }\n\t    }\n\t\n\t    return neighbors;\n\t  }\n\t\n\t  function compareArea(a, b) {\n\t    return a[1][2] - b[1][2];\n\t  }\n\t\n\t  function minAreaHeap() {\n\t    var heap = {},\n\t        array = [],\n\t        size = 0;\n\t\n\t    heap.push = function(object) {\n\t      up(array[object._ = size] = object, size++);\n\t      return size;\n\t    };\n\t\n\t    heap.pop = function() {\n\t      if (size <= 0) return;\n\t      var removed = array[0], object;\n\t      if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n\t      return removed;\n\t    };\n\t\n\t    heap.remove = function(removed) {\n\t      var i = removed._, object;\n\t      if (array[i] !== removed) return; // invalid request\n\t      if (i !== --size) object = array[size], (compareArea(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n\t      return i;\n\t    };\n\t\n\t    function up(object, i) {\n\t      while (i > 0) {\n\t        var j = ((i + 1) >> 1) - 1,\n\t            parent = array[j];\n\t        if (compareArea(object, parent) >= 0) break;\n\t        array[parent._ = i] = parent;\n\t        array[object._ = i = j] = object;\n\t      }\n\t    }\n\t\n\t    function down(object, i) {\n\t      while (true) {\n\t        var r = (i + 1) << 1,\n\t            l = r - 1,\n\t            j = i,\n\t            child = array[j];\n\t        if (l < size && compareArea(array[l], child) < 0) child = array[j = l];\n\t        if (r < size && compareArea(array[r], child) < 0) child = array[j = r];\n\t        if (j === i) break;\n\t        array[child._ = i] = child;\n\t        array[object._ = i = j] = object;\n\t      }\n\t    }\n\t\n\t    return heap;\n\t  }\n\t\n\t  function presimplify(topology, triangleArea) {\n\t    var absolute$$ = absolute(topology.transform),\n\t        relative$$ = relative(topology.transform),\n\t        heap = minAreaHeap();\n\t\n\t    if (!triangleArea) triangleArea = triangle;\n\t\n\t    topology.arcs.forEach(function(arc) {\n\t      var triangles = [],\n\t          maxArea = 0,\n\t          triangle,\n\t          i,\n\t          n,\n\t          p;\n\t\n\t      // To store each point’s effective area, we create a new array rather than\n\t      // extending the passed-in point to workaround a Chrome/V8 bug (getting\n\t      // stuck in smi mode). For midpoints, the initial effective area of\n\t      // Infinity will be computed in the next step.\n\t      for (i = 0, n = arc.length; i < n; ++i) {\n\t        p = arc[i];\n\t        absolute$$(arc[i] = [p[0], p[1], Infinity], i);\n\t      }\n\t\n\t      for (i = 1, n = arc.length - 1; i < n; ++i) {\n\t        triangle = arc.slice(i - 1, i + 2);\n\t        triangle[1][2] = triangleArea(triangle);\n\t        triangles.push(triangle);\n\t        heap.push(triangle);\n\t      }\n\t\n\t      for (i = 0, n = triangles.length; i < n; ++i) {\n\t        triangle = triangles[i];\n\t        triangle.previous = triangles[i - 1];\n\t        triangle.next = triangles[i + 1];\n\t      }\n\t\n\t      while (triangle = heap.pop()) {\n\t        var previous = triangle.previous,\n\t            next = triangle.next;\n\t\n\t        // If the area of the current point is less than that of the previous point\n\t        // to be eliminated, use the latter's area instead. This ensures that the\n\t        // current point cannot be eliminated without eliminating previously-\n\t        // eliminated points.\n\t        if (triangle[1][2] < maxArea) triangle[1][2] = maxArea;\n\t        else maxArea = triangle[1][2];\n\t\n\t        if (previous) {\n\t          previous.next = next;\n\t          previous[2] = triangle[2];\n\t          update(previous);\n\t        }\n\t\n\t        if (next) {\n\t          next.previous = previous;\n\t          next[0] = triangle[0];\n\t          update(next);\n\t        }\n\t      }\n\t\n\t      arc.forEach(relative$$);\n\t    });\n\t\n\t    function update(triangle) {\n\t      heap.remove(triangle);\n\t      triangle[1][2] = triangleArea(triangle);\n\t      heap.push(triangle);\n\t    }\n\t\n\t    return topology;\n\t  }\n\t\n\t  var version = \"1.6.24\";\n\t\n\t  exports.version = version;\n\t  exports.mesh = mesh;\n\t  exports.meshArcs = meshArcs;\n\t  exports.merge = merge;\n\t  exports.mergeArcs = mergeArcs;\n\t  exports.feature = feature;\n\t  exports.neighbors = neighbors;\n\t  exports.presimplify = presimplify;\n\t\n\t}));\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(__dirname) {var fs = __webpack_require__(!(function webpackMissingModule() { var e = new Error(\"Cannot find module \\\"fs\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\n\tvar path = __webpack_require__(4);\n\t\n\tmodule.exports = new Function(\"d3\", fs.readFileSync(path.join(__dirname, \"d3.geo.projection.js\"), \"utf-8\"));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, \"/\"))\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t// resolves . and .. elements in a path array with directory names there\n\t// must be no slashes, empty elements, or device names (c:\\) in the array\n\t// (so also no leading and trailing slashes - it does not distinguish\n\t// relative and absolute paths)\n\tfunction normalizeArray(parts, allowAboveRoot) {\n\t  // if the path tries to go above the root, `up` ends up > 0\n\t  var up = 0;\n\t  for (var i = parts.length - 1; i >= 0; i--) {\n\t    var last = parts[i];\n\t    if (last === '.') {\n\t      parts.splice(i, 1);\n\t    } else if (last === '..') {\n\t      parts.splice(i, 1);\n\t      up++;\n\t    } else if (up) {\n\t      parts.splice(i, 1);\n\t      up--;\n\t    }\n\t  }\n\t\n\t  // if the path is allowed to go above the root, restore leading ..s\n\t  if (allowAboveRoot) {\n\t    for (; up--; up) {\n\t      parts.unshift('..');\n\t    }\n\t  }\n\t\n\t  return parts;\n\t}\n\t\n\t// Split a filename into [root, dir, basename, ext], unix version\n\t// 'root' is just a slash, or nothing.\n\tvar splitPathRe =\n\t    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n\tvar splitPath = function(filename) {\n\t  return splitPathRe.exec(filename).slice(1);\n\t};\n\t\n\t// path.resolve([from ...], to)\n\t// posix version\n\texports.resolve = function() {\n\t  var resolvedPath = '',\n\t      resolvedAbsolute = false;\n\t\n\t  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n\t    var path = (i >= 0) ? arguments[i] : process.cwd();\n\t\n\t    // Skip empty and invalid entries\n\t    if (typeof path !== 'string') {\n\t      throw new TypeError('Arguments to path.resolve must be strings');\n\t    } else if (!path) {\n\t      continue;\n\t    }\n\t\n\t    resolvedPath = path + '/' + resolvedPath;\n\t    resolvedAbsolute = path.charAt(0) === '/';\n\t  }\n\t\n\t  // At this point the path should be resolved to a full absolute path, but\n\t  // handle relative paths to be safe (might happen when process.cwd() fails)\n\t\n\t  // Normalize the path\n\t  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n\t    return !!p;\n\t  }), !resolvedAbsolute).join('/');\n\t\n\t  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n\t};\n\t\n\t// path.normalize(path)\n\t// posix version\n\texports.normalize = function(path) {\n\t  var isAbsolute = exports.isAbsolute(path),\n\t      trailingSlash = substr(path, -1) === '/';\n\t\n\t  // Normalize the path\n\t  path = normalizeArray(filter(path.split('/'), function(p) {\n\t    return !!p;\n\t  }), !isAbsolute).join('/');\n\t\n\t  if (!path && !isAbsolute) {\n\t    path = '.';\n\t  }\n\t  if (path && trailingSlash) {\n\t    path += '/';\n\t  }\n\t\n\t  return (isAbsolute ? '/' : '') + path;\n\t};\n\t\n\t// posix version\n\texports.isAbsolute = function(path) {\n\t  return path.charAt(0) === '/';\n\t};\n\t\n\t// posix version\n\texports.join = function() {\n\t  var paths = Array.prototype.slice.call(arguments, 0);\n\t  return exports.normalize(filter(paths, function(p, index) {\n\t    if (typeof p !== 'string') {\n\t      throw new TypeError('Arguments to path.join must be strings');\n\t    }\n\t    return p;\n\t  }).join('/'));\n\t};\n\t\n\t\n\t// path.relative(from, to)\n\t// posix version\n\texports.relative = function(from, to) {\n\t  from = exports.resolve(from).substr(1);\n\t  to = exports.resolve(to).substr(1);\n\t\n\t  function trim(arr) {\n\t    var start = 0;\n\t    for (; start < arr.length; start++) {\n\t      if (arr[start] !== '') break;\n\t    }\n\t\n\t    var end = arr.length - 1;\n\t    for (; end >= 0; end--) {\n\t      if (arr[end] !== '') break;\n\t    }\n\t\n\t    if (start > end) return [];\n\t    return arr.slice(start, end - start + 1);\n\t  }\n\t\n\t  var fromParts = trim(from.split('/'));\n\t  var toParts = trim(to.split('/'));\n\t\n\t  var length = Math.min(fromParts.length, toParts.length);\n\t  var samePartsLength = length;\n\t  for (var i = 0; i < length; i++) {\n\t    if (fromParts[i] !== toParts[i]) {\n\t      samePartsLength = i;\n\t      break;\n\t    }\n\t  }\n\t\n\t  var outputParts = [];\n\t  for (var i = samePartsLength; i < fromParts.length; i++) {\n\t    outputParts.push('..');\n\t  }\n\t\n\t  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\t\n\t  return outputParts.join('/');\n\t};\n\t\n\texports.sep = '/';\n\texports.delimiter = ':';\n\t\n\texports.dirname = function(path) {\n\t  var result = splitPath(path),\n\t      root = result[0],\n\t      dir = result[1];\n\t\n\t  if (!root && !dir) {\n\t    // No dirname whatsoever\n\t    return '.';\n\t  }\n\t\n\t  if (dir) {\n\t    // It has a dirname, strip trailing slash\n\t    dir = dir.substr(0, dir.length - 1);\n\t  }\n\t\n\t  return root + dir;\n\t};\n\t\n\t\n\texports.basename = function(path, ext) {\n\t  var f = splitPath(path)[2];\n\t  // TODO: make this comparison case-insensitive on windows?\n\t  if (ext && f.substr(-1 * ext.length) === ext) {\n\t    f = f.substr(0, f.length - ext.length);\n\t  }\n\t  return f;\n\t};\n\t\n\t\n\texports.extname = function(path) {\n\t  return splitPath(path)[3];\n\t};\n\t\n\tfunction filter (xs, f) {\n\t    if (xs.filter) return xs.filter(f);\n\t    var res = [];\n\t    for (var i = 0; i < xs.length; i++) {\n\t        if (f(xs[i], i, xs)) res.push(xs[i]);\n\t    }\n\t    return res;\n\t}\n\t\n\t// String.prototype.substr - negative index don't work in IE8\n\tvar substr = 'ab'.substr(-1) === 'b'\n\t    ? function (str, start, len) { return str.substr(start, len) }\n\t    : function (str, start, len) {\n\t        if (start < 0) start = str.length + start;\n\t        return str.substr(start, len);\n\t    }\n\t;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\t\n\tvar process = module.exports = {};\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = setTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    clearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        setTimeout(drainQueue, 0);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** xxi-svg-map.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap a9a88b4db0acbad72b7e\n **/","import d3 from 'd3';\nrequire('d3-geo-projection')(d3);\nimport topojson from 'topojson';\n\nfunction setupMap(object, width, height) {\n\n  return new Promise(function (resolve, reject) {\n\n    var svg = object\n                .append('svg')\n                .attr('width', width)\n                .attr('height', height);\n\n    resolve(svg);\n\n  });\n\n}\n\nexport default class SVGMap {\n\n  constructor(object, {\n        file,\n        width,\n        height,\n        scale = 135,\n        center = [70, -35],\n        ...options}) {\n\n    if (object === undefined || object === '') {\n      throw new Error('There has to be a selector');\n    }\n\n    if (file === undefined || file === '') {\n      throw new Error('You did not specified a data file');\n    }\n\n    this._object = object;\n    this._file = file;\n    this._width = width;\n    this._height = height;\n\n    // Creating the base of the projection\n    this._projection = d3.geo.bromley()\n                            .center(center)\n                            .scale(scale);\n\n    this._path = d3.geo.path().projection(this.projection);\n    this.createSVG = this.createSVG.bind(this);\n  }\n\n  init() {\n    return setupMap(this.object, this.width, this.height)\n      .then((svg) => {\n        this.svg = svg;\n        return svg;\n      });\n  }\n\n  fetchData() {\n    return new Promise((resolve, reject) => {\n      resolve(this.file);\n    });\n  }\n\n  createSVG(world) {\n    var g = this.svg.append('g');\n\n    return new Promise((resolve, reject) => {\n      // resolve(world);\n      g.selectAll('path')\n          .data(topojson.feature(world, world.objects.countries).features)\n          .enter()\n          .append('path')\n          .attr('class', function (d) { return `country country-${d.id % 2}`; })\n          .attr('d', this.path);\n\n      resolve({ map: this, svg: this.svg});\n    });\n  }\n\n  get width() { return this._width; }\n  get height() { return this._height; }\n  get object() { return this._object; }\n  get projection() { return this._projection; }\n  get file() { return this._file; }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","!function() {\n  var d3 = {\n    version: \"3.5.16\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/d3/d3.js\n ** module id = 1\n ** module chunks = 0\n **/","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.topojson = {})));\n}(this, function (exports) { 'use strict';\n\n  function noop() {}\n\n  function absolute(transform) {\n    if (!transform) return noop;\n    var x0,\n        y0,\n        kx = transform.scale[0],\n        ky = transform.scale[1],\n        dx = transform.translate[0],\n        dy = transform.translate[1];\n    return function(point, i) {\n      if (!i) x0 = y0 = 0;\n      point[0] = (x0 += point[0]) * kx + dx;\n      point[1] = (y0 += point[1]) * ky + dy;\n    };\n  }\n\n  function relative(transform) {\n    if (!transform) return noop;\n    var x0,\n        y0,\n        kx = transform.scale[0],\n        ky = transform.scale[1],\n        dx = transform.translate[0],\n        dy = transform.translate[1];\n    return function(point, i) {\n      if (!i) x0 = y0 = 0;\n      var x1 = (point[0] - dx) / kx | 0,\n          y1 = (point[1] - dy) / ky | 0;\n      point[0] = x1 - x0;\n      point[1] = y1 - y0;\n      x0 = x1;\n      y0 = y1;\n    };\n  }\n\n  function reverse(array, n) {\n    var t, j = array.length, i = j - n;\n    while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n  }\n\n  function bisect(a, x) {\n    var lo = 0, hi = a.length;\n    while (lo < hi) {\n      var mid = lo + hi >>> 1;\n      if (a[mid] < x) lo = mid + 1;\n      else hi = mid;\n    }\n    return lo;\n  }\n\n  function feature(topology, o) {\n    return o.type === \"GeometryCollection\" ? {\n      type: \"FeatureCollection\",\n      features: o.geometries.map(function(o) { return feature$1(topology, o); })\n    } : feature$1(topology, o);\n  }\n\n  function feature$1(topology, o) {\n    var f = {\n      type: \"Feature\",\n      id: o.id,\n      properties: o.properties || {},\n      geometry: object(topology, o)\n    };\n    if (o.id == null) delete f.id;\n    return f;\n  }\n\n  function object(topology, o) {\n    var absolute$$ = absolute(topology.transform),\n        arcs = topology.arcs;\n\n    function arc(i, points) {\n      if (points.length) points.pop();\n      for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length, p; k < n; ++k) {\n        points.push(p = a[k].slice());\n        absolute$$(p, k);\n      }\n      if (i < 0) reverse(points, n);\n    }\n\n    function point(p) {\n      p = p.slice();\n      absolute$$(p, 0);\n      return p;\n    }\n\n    function line(arcs) {\n      var points = [];\n      for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n      if (points.length < 2) points.push(points[0].slice());\n      return points;\n    }\n\n    function ring(arcs) {\n      var points = line(arcs);\n      while (points.length < 4) points.push(points[0].slice());\n      return points;\n    }\n\n    function polygon(arcs) {\n      return arcs.map(ring);\n    }\n\n    function geometry(o) {\n      var t = o.type;\n      return t === \"GeometryCollection\" ? {type: t, geometries: o.geometries.map(geometry)}\n          : t in geometryType ? {type: t, coordinates: geometryType[t](o)}\n          : null;\n    }\n\n    var geometryType = {\n      Point: function(o) { return point(o.coordinates); },\n      MultiPoint: function(o) { return o.coordinates.map(point); },\n      LineString: function(o) { return line(o.arcs); },\n      MultiLineString: function(o) { return o.arcs.map(line); },\n      Polygon: function(o) { return polygon(o.arcs); },\n      MultiPolygon: function(o) { return o.arcs.map(polygon); }\n    };\n\n    return geometry(o);\n  }\n\n  function stitchArcs(topology, arcs) {\n    var stitchedArcs = {},\n        fragmentByStart = {},\n        fragmentByEnd = {},\n        fragments = [],\n        emptyIndex = -1;\n\n    // Stitch empty arcs first, since they may be subsumed by other arcs.\n    arcs.forEach(function(i, j) {\n      var arc = topology.arcs[i < 0 ? ~i : i], t;\n      if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n        t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n      }\n    });\n\n    arcs.forEach(function(i) {\n      var e = ends(i),\n          start = e[0],\n          end = e[1],\n          f, g;\n\n      if (f = fragmentByEnd[start]) {\n        delete fragmentByEnd[f.end];\n        f.push(i);\n        f.end = end;\n        if (g = fragmentByStart[end]) {\n          delete fragmentByStart[g.start];\n          var fg = g === f ? f : f.concat(g);\n          fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n        } else {\n          fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n        }\n      } else if (f = fragmentByStart[end]) {\n        delete fragmentByStart[f.start];\n        f.unshift(i);\n        f.start = start;\n        if (g = fragmentByEnd[start]) {\n          delete fragmentByEnd[g.end];\n          var gf = g === f ? f : g.concat(f);\n          fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n        } else {\n          fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n        }\n      } else {\n        f = [i];\n        fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n      }\n    });\n\n    function ends(i) {\n      var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n      if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n      else p1 = arc[arc.length - 1];\n      return i < 0 ? [p1, p0] : [p0, p1];\n    }\n\n    function flush(fragmentByEnd, fragmentByStart) {\n      for (var k in fragmentByEnd) {\n        var f = fragmentByEnd[k];\n        delete fragmentByStart[f.start];\n        delete f.start;\n        delete f.end;\n        f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n        fragments.push(f);\n      }\n    }\n\n    flush(fragmentByEnd, fragmentByStart);\n    flush(fragmentByStart, fragmentByEnd);\n    arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\n    return fragments;\n  }\n\n  function mesh(topology) {\n    return object(topology, meshArcs.apply(this, arguments));\n  }\n\n  function meshArcs(topology, o, filter) {\n    var arcs = [];\n\n    function arc(i) {\n      var j = i < 0 ? ~i : i;\n      (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n    }\n\n    function line(arcs) {\n      arcs.forEach(arc);\n    }\n\n    function polygon(arcs) {\n      arcs.forEach(line);\n    }\n\n    function geometry(o) {\n      if (o.type === \"GeometryCollection\") o.geometries.forEach(geometry);\n      else if (o.type in geometryType) geom = o, geometryType[o.type](o.arcs);\n    }\n\n    if (arguments.length > 1) {\n      var geomsByArc = [],\n          geom;\n\n      var geometryType = {\n        LineString: line,\n        MultiLineString: polygon,\n        Polygon: polygon,\n        MultiPolygon: function(arcs) { arcs.forEach(polygon); }\n      };\n\n      geometry(o);\n\n      geomsByArc.forEach(arguments.length < 3\n          ? function(geoms) { arcs.push(geoms[0].i); }\n          : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n    } else {\n      for (var i = 0, n = topology.arcs.length; i < n; ++i) arcs.push(i);\n    }\n\n    return {type: \"MultiLineString\", arcs: stitchArcs(topology, arcs)};\n  }\n\n  function triangle(triangle) {\n    var a = triangle[0], b = triangle[1], c = triangle[2];\n    return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]));\n  }\n\n  function ring(ring) {\n    var i = -1,\n        n = ring.length,\n        a,\n        b = ring[n - 1],\n        area = 0;\n\n    while (++i < n) {\n      a = b;\n      b = ring[i];\n      area += a[0] * b[1] - a[1] * b[0];\n    }\n\n    return area / 2;\n  }\n\n  function merge(topology) {\n    return object(topology, mergeArcs.apply(this, arguments));\n  }\n\n  function mergeArcs(topology, objects) {\n    var polygonsByArc = {},\n        polygons = [],\n        components = [];\n\n    objects.forEach(function(o) {\n      if (o.type === \"Polygon\") register(o.arcs);\n      else if (o.type === \"MultiPolygon\") o.arcs.forEach(register);\n    });\n\n    function register(polygon) {\n      polygon.forEach(function(ring$$) {\n        ring$$.forEach(function(arc) {\n          (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n        });\n      });\n      polygons.push(polygon);\n    }\n\n    function exterior(ring$$) {\n      return ring(object(topology, {type: \"Polygon\", arcs: [ring$$]}).coordinates[0]) > 0; // TODO allow spherical?\n    }\n\n    polygons.forEach(function(polygon) {\n      if (!polygon._) {\n        var component = [],\n            neighbors = [polygon];\n        polygon._ = 1;\n        components.push(component);\n        while (polygon = neighbors.pop()) {\n          component.push(polygon);\n          polygon.forEach(function(ring$$) {\n            ring$$.forEach(function(arc) {\n              polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n                if (!polygon._) {\n                  polygon._ = 1;\n                  neighbors.push(polygon);\n                }\n              });\n            });\n          });\n        }\n      }\n    });\n\n    polygons.forEach(function(polygon) {\n      delete polygon._;\n    });\n\n    return {\n      type: \"MultiPolygon\",\n      arcs: components.map(function(polygons) {\n        var arcs = [], n;\n\n        // Extract the exterior (unique) arcs.\n        polygons.forEach(function(polygon) {\n          polygon.forEach(function(ring$$) {\n            ring$$.forEach(function(arc) {\n              if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n                arcs.push(arc);\n              }\n            });\n          });\n        });\n\n        // Stitch the arcs into one or more rings.\n        arcs = stitchArcs(topology, arcs);\n\n        // If more than one ring is returned,\n        // at most one of these rings can be the exterior;\n        // this exterior ring has the same winding order\n        // as any exterior ring in the original polygons.\n        if ((n = arcs.length) > 1) {\n          var sgn = exterior(polygons[0][0]);\n          for (var i = 0, t; i < n; ++i) {\n            if (sgn === exterior(arcs[i])) {\n              t = arcs[0], arcs[0] = arcs[i], arcs[i] = t;\n              break;\n            }\n          }\n        }\n\n        return arcs;\n      })\n    };\n  }\n\n  function neighbors(objects) {\n    var indexesByArc = {}, // arc index -> array of object indexes\n        neighbors = objects.map(function() { return []; });\n\n    function line(arcs, i) {\n      arcs.forEach(function(a) {\n        if (a < 0) a = ~a;\n        var o = indexesByArc[a];\n        if (o) o.push(i);\n        else indexesByArc[a] = [i];\n      });\n    }\n\n    function polygon(arcs, i) {\n      arcs.forEach(function(arc) { line(arc, i); });\n    }\n\n    function geometry(o, i) {\n      if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n      else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n    }\n\n    var geometryType = {\n      LineString: line,\n      MultiLineString: polygon,\n      Polygon: polygon,\n      MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n    };\n\n    objects.forEach(geometry);\n\n    for (var i in indexesByArc) {\n      for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n        for (var k = j + 1; k < m; ++k) {\n          var ij = indexes[j], ik = indexes[k], n;\n          if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n          if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n        }\n      }\n    }\n\n    return neighbors;\n  }\n\n  function compareArea(a, b) {\n    return a[1][2] - b[1][2];\n  }\n\n  function minAreaHeap() {\n    var heap = {},\n        array = [],\n        size = 0;\n\n    heap.push = function(object) {\n      up(array[object._ = size] = object, size++);\n      return size;\n    };\n\n    heap.pop = function() {\n      if (size <= 0) return;\n      var removed = array[0], object;\n      if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n      return removed;\n    };\n\n    heap.remove = function(removed) {\n      var i = removed._, object;\n      if (array[i] !== removed) return; // invalid request\n      if (i !== --size) object = array[size], (compareArea(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n      return i;\n    };\n\n    function up(object, i) {\n      while (i > 0) {\n        var j = ((i + 1) >> 1) - 1,\n            parent = array[j];\n        if (compareArea(object, parent) >= 0) break;\n        array[parent._ = i] = parent;\n        array[object._ = i = j] = object;\n      }\n    }\n\n    function down(object, i) {\n      while (true) {\n        var r = (i + 1) << 1,\n            l = r - 1,\n            j = i,\n            child = array[j];\n        if (l < size && compareArea(array[l], child) < 0) child = array[j = l];\n        if (r < size && compareArea(array[r], child) < 0) child = array[j = r];\n        if (j === i) break;\n        array[child._ = i] = child;\n        array[object._ = i = j] = object;\n      }\n    }\n\n    return heap;\n  }\n\n  function presimplify(topology, triangleArea) {\n    var absolute$$ = absolute(topology.transform),\n        relative$$ = relative(topology.transform),\n        heap = minAreaHeap();\n\n    if (!triangleArea) triangleArea = triangle;\n\n    topology.arcs.forEach(function(arc) {\n      var triangles = [],\n          maxArea = 0,\n          triangle,\n          i,\n          n,\n          p;\n\n      // To store each point’s effective area, we create a new array rather than\n      // extending the passed-in point to workaround a Chrome/V8 bug (getting\n      // stuck in smi mode). For midpoints, the initial effective area of\n      // Infinity will be computed in the next step.\n      for (i = 0, n = arc.length; i < n; ++i) {\n        p = arc[i];\n        absolute$$(arc[i] = [p[0], p[1], Infinity], i);\n      }\n\n      for (i = 1, n = arc.length - 1; i < n; ++i) {\n        triangle = arc.slice(i - 1, i + 2);\n        triangle[1][2] = triangleArea(triangle);\n        triangles.push(triangle);\n        heap.push(triangle);\n      }\n\n      for (i = 0, n = triangles.length; i < n; ++i) {\n        triangle = triangles[i];\n        triangle.previous = triangles[i - 1];\n        triangle.next = triangles[i + 1];\n      }\n\n      while (triangle = heap.pop()) {\n        var previous = triangle.previous,\n            next = triangle.next;\n\n        // If the area of the current point is less than that of the previous point\n        // to be eliminated, use the latter's area instead. This ensures that the\n        // current point cannot be eliminated without eliminating previously-\n        // eliminated points.\n        if (triangle[1][2] < maxArea) triangle[1][2] = maxArea;\n        else maxArea = triangle[1][2];\n\n        if (previous) {\n          previous.next = next;\n          previous[2] = triangle[2];\n          update(previous);\n        }\n\n        if (next) {\n          next.previous = previous;\n          next[0] = triangle[0];\n          update(next);\n        }\n      }\n\n      arc.forEach(relative$$);\n    });\n\n    function update(triangle) {\n      heap.remove(triangle);\n      triangle[1][2] = triangleArea(triangle);\n      heap.push(triangle);\n    }\n\n    return topology;\n  }\n\n  var version = \"1.6.24\";\n\n  exports.version = version;\n  exports.mesh = mesh;\n  exports.meshArcs = meshArcs;\n  exports.merge = merge;\n  exports.mergeArcs = mergeArcs;\n  exports.feature = feature;\n  exports.neighbors = neighbors;\n  exports.presimplify = presimplify;\n\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/topojson/build/topojson.js\n ** module id = 2\n ** module chunks = 0\n **/","var fs = require(\"fs\");\nvar path = require(\"path\");\n\nmodule.exports = new Function(\"d3\", fs.readFileSync(path.join(__dirname, \"d3.geo.projection.js\"), \"utf-8\"));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/d3-geo-projection/index.js\n ** module id = 3\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/path-browserify/index.js\n ** module id = 4\n ** module chunks = 0\n **/","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/process/browser.js\n ** module id = 5\n ** module chunks = 0\n **/"],"sourceRoot":""}